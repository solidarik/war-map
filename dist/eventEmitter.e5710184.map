{"version":3,"sources":["eventEmitter.js"],"names":["EventEmitter","emitEvents","eventName","fn","context","functions","contexts","push","filter","event","data","i","length","ctx","call"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAaA;;;AACT,0BAAc;AAAA;;AACV,SAAKC,UAAL,GAAkB,EAAlB;AACH;;;;8BAEUC,WAAWC,IAAoB;AAAA;;AAAA,UAAhBC,OAAgB,uEAAN,IAAM;;AACtC,UAAI,CAAC,KAAKH,UAAL,CAAgBC,SAAhB,CAAL,EAAkC;AAC9B,aAAKD,UAAL,CAAgBC,SAAhB,IAA6B,EAA7B;AACA,aAAKD,UAAL,CAAgBC,SAAhB,EAA2BG,SAA3B,GAAuC,EAAvC;AACA,aAAKJ,UAAL,CAAgBC,SAAhB,EAA2BI,QAA3B,GAAsC,EAAtC;AACH;;AAED,WAAKL,UAAL,CAAgBC,SAAhB,EAA2BG,SAA3B,CAAqCE,IAArC,CAA0CJ,EAA1C;AACA,WAAKF,UAAL,CAAgBC,SAAhB,EAA2BI,QAA3B,CAAoCC,IAApC,CAAyCH,OAAzC;AAEA,aAAO,YAAM;AACT,QAAA,KAAI,CAACH,UAAL,CAAgBC,SAAhB,IAA6B,KAAI,CAACD,UAAL,CAAgBC,SAAhB,EAA2BM,MAA3B,CAAkC,UAAAC,KAAK;AAAA,iBAAIN,EAAE,KAAKM,KAAK,CAACJ,SAAjB;AAAA,SAAvC,CAA7B;AACH,OAFD;AAGH;;;yBAEIH,WAAWQ,MAAM;AAClB,UAAMD,KAAK,GAAG,KAAKR,UAAL,CAAgBC,SAAhB,CAAd;;AACA,UAAIO,KAAJ,EAAW;AACP,aAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,KAAK,CAACJ,SAAN,CAAgBO,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,cAAIR,EAAE,GAAGM,KAAK,CAACJ,SAAN,CAAgBM,CAAhB,CAAT;AACA,cAAIE,GAAG,GAAGJ,KAAK,CAACH,QAAN,CAAeK,CAAf,IAAoBF,KAAK,CAACH,QAAN,CAAeK,CAAf,CAApB,GAAwC,IAAlD;AACAR,UAAAA,EAAE,CAACW,IAAH,CAAQD,GAAR,EAAaH,IAAb;AACH;;AAAA;AACJ;AACJ","file":"eventEmitter.e5710184.map","sourceRoot":"..\\public-src","sourcesContent":["export class EventEmitter {\r\n    constructor() {\r\n        this.emitEvents = {};\r\n    }\r\n\r\n    subscribe( eventName, fn, context = null) {\r\n        if( !this.emitEvents[eventName] ) {\r\n            this.emitEvents[eventName] = {};\r\n            this.emitEvents[eventName].functions = [];\r\n            this.emitEvents[eventName].contexts = [];\r\n        }\r\n\r\n        this.emitEvents[eventName].functions.push(fn);\r\n        this.emitEvents[eventName].contexts.push(context);\r\n\r\n        return () => {\r\n            this.emitEvents[eventName] = this.emitEvents[eventName].filter(event => fn !== event.functions);\r\n        }\r\n    }\r\n\r\n    emit(eventName, data) {\r\n        const event = this.emitEvents[eventName];\r\n        if (event) {\r\n            for(let i = 0; i < event.functions.length; i++) {\r\n                let fn = event.functions[i];\r\n                let ctx = event.contexts[i] ? event.contexts[i] : null;\r\n                fn.call(ctx, data);\r\n            };\r\n        }\r\n    }\r\n}"]}