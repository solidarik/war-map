{"version":3,"sources":["../../src/utils/isFunction.js","../../src/utils/getStyleComputedProperty.js","../../src/utils/getParentNode.js","../../src/utils/getScrollParent.js","../../src/utils/getOffsetParent.js","../../src/utils/isOffsetContainer.js","../../src/utils/getRoot.js","../../src/utils/findCommonOffsetParent.js","../../src/utils/getScroll.js","../../src/utils/includeScroll.js","../../src/utils/getBordersSize.js","../../src/utils/getWindowSizes.js","../../src/utils/getClientRect.js","../../src/utils/getBoundingClientRect.js","../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/utils/isFixed.js","../../src/utils/getBoundaries.js","../../src/utils/computeAutoPlacement.js","../../src/utils/getReferenceOffsets.js","../../src/utils/getOuterSizes.js","../../src/utils/getOppositePlacement.js","../../src/utils/getPopperOffsets.js","../../src/utils/find.js","../../src/utils/findIndex.js","../../src/utils/runModifiers.js","../../src/methods/update.js","../../src/utils/isModifierEnabled.js","../../src/utils/getSupportedPropertyName.js","../../src/methods/destroy.js","../../src/utils/setupEventListeners.js","../../src/methods/enableEventListeners.js","../../src/utils/removeEventListeners.js","../../src/methods/disableEventListeners.js","../../src/utils/isNumeric.js","../../src/utils/setStyles.js","../../src/utils/setAttributes.js","../../src/utils/isModifierRequired.js","../../src/utils/getOppositeVariation.js","../../src/utils/clockwise.js","../../src/modifiers/offset.js","../../src/utils/debounce.js","../../src/modifiers/arrow.js","../../src/modifiers/computeStyle.js","../../src/utils/isNative.js","../../src/utils/isIE10.js","../../src/modifiers/flip.js","../../src/index.js","../../src/methods/defaults.js","../../src/modifiers/index.js","../../src/modifiers/shift.js","../../src/modifiers/preventOverflow.js","../../src/modifiers/keepTogether.js","../../src/modifiers/inner.js","../../src/modifiers/hide.js","../../src/modifiers/applyStyle.js"],"names":["functionToCheck","getType","toString","call","element","nodeType","css","window","getComputedStyle","property","nodeName","parentNode","host","indexOf","document","body","getStyleComputedProperty","overflow","overflowX","overflowY","test","getScrollParent","getParentNode","offsetParent","getOffsetParent","documentElement","firstElementChild","node","getRoot","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","isOffsetContainer","element1root","findCommonOffsetParent","side","upperSide","html","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","sideA","axis","sideB","styles","split","Math","isIE10","computedStyle","getSize","offsets","width","height","rect","getBoundingClientRect","result","sizes","getWindowSizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getBordersSize","getClientRect","runIsIE10","isHTML","parent","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","includeScroll","relativeOffset","getOffsetRectRelativeToArbitraryNode","innerWidth","innerHeight","offset","isFixed","boundaries","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","padding","placement","getBoundaries","rects","refRect","sortedAreas","Object","keys","map","getArea","sort","b","area","a","filteredAreas","filter","popper","computedPlacement","length","key","variation","commonOffsetParent","x","parseFloat","marginBottom","y","marginRight","hash","replace","popperRect","getOuterSizes","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","referenceOffsets","getOppositePlacement","Array","prototype","find","arr","findIndex","cur","match","obj","modifiersToRun","ends","modifiers","slice","forEach","function","warn","fn","enabled","isFunction","data","reference","state","isDestroyed","getReferenceOffsets","computeAutoPlacement","options","flip","originalPlacement","getPopperOffsets","position","runModifiers","isCreated","onUpdate","onCreate","some","name","prefixes","upperProp","charAt","toUpperCase","i","prefix","toCheck","style","isModifierEnabled","removeAttribute","getSupportedPropertyName","disableEventListeners","removeOnDestroy","removeChild","isBody","target","addEventListener","passive","push","updateBound","scrollElement","scrollParents","eventsEnabled","setupEventListeners","scheduleUpdate","removeEventListener","cancelAnimationFrame","removeEventListeners","n","isNaN","isFinite","unit","isNumeric","value","attributes","setAttribute","requesting","isRequired","requested","counter","index","validPlacements","concat","reverse","str","size","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","mergeWithPrevious","op","reduce","toValue","index2","min","floor","max","nativeHints","isBrowser","longerTimeoutBrowsers","timeoutDuration","navigator","userAgent","supportsNativeMutationObserver","isNative","MutationObserver","scheduled","elem","createElement","observer","observe","appVersion","placements","BEHAVIORS","Popper","requestAnimationFrame","update","debounce","bind","Defaults","jquery","modifierOptions","onLoad","enableEventListeners","destroy","Utils","global","PopperUtils","basePlacement","shiftvariation","isVertical","shiftOffsets","parseOffset","instance","priority","check","escapeWithReference","opSide","isModifierRequired","arrowElement","querySelector","len","altSide","arrowElementSize","center","sideValue","arrow","round","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","clockwise","COUNTERCLOCKWISE","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","getOppositeVariation","subtractLength","bound","hide","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","prefixedProperty","willChange","invertTop","invertLeft"],"mappings":"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","file":"popper.min.003b26e9.map","sourceRoot":"..\\public-src","sourcesContent":["/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (\n    !element ||\n    ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1\n  ) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  const offsetParent = element && element.offsetParent;\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = window.document.documentElement;\n    const scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    +styles[`border${sideA}Width`].split('px')[0] +\n    +styles[`border${sideB}Width`].split('px')[0]\n  );\n}\n","import isIE10 from './isIE10';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    isIE10()\n      ? html[`offset${axis}`] +\n          computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`] +\n          computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]\n      : 0\n  );\n}\n\nexport default function getWindowSizes() {\n  const body = window.document.body;\n  const html = window.document.documentElement;\n  const computedStyle = isIE10() && window.getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE10 from './isIE10';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10()) {\n    try {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE10 from './isIE10';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent) {\n  const isIE10 = runIsIE10();\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = +styles.borderTopWidth.split('px')[0];\n  const borderLeftWidth = +styles.borderLeftWidth.split('px')[0];\n\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = +styles.marginTop.split('px')[0];\n    const marginLeft = +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  const html = window.document.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = getScroll(html);\n  const scrollLeft = getScroll(html, 'left');\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement\n) {\n  // NOTE: 1 DOM access here\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes();\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference) {\n  const commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier.function) {\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier.function || modifier.fn;\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length - 1; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","import getScrollParent from './getScrollParent';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    window.cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import isNative from './isNative';\n\nconst isBrowser = typeof window !== 'undefined';\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let scheduled = false;\n  let i = 0;\n  const elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  const observer = new MutationObserver(() => {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nconst supportsNativeMutationObserver =\n  isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsNativeMutationObserver\n  ? microtaskDebounce\n  : taskDebounce);\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const side = isVertical ? 'top' : 'left';\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  let sideValue = center - getClientRect(data.offsets.popper)[side];\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {};\n  data.offsets.arrow[side] = Math.round(sideValue);\n  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n  return data;\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  // floor sides to avoid blurry text\n  const offsets = {\n    left: Math.floor(popper.left),\n    top: Math.floor(popper.top),\n    bottom: Math.floor(popper.bottom),\n    right: Math.floor(popper.right),\n  };\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update attributes and styles of `data`\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n\n  return data;\n}\n","const nativeHints = [\n  'native code',\n  '[object MutationObserverConstructor]', // for mobile safari iOS 9.0\n];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @method\n * @memberof Popper.Utils\n * @argument {Function | undefined} fn the function to check\n * @returns {Boolean}\n */\nexport default fn =>\n  nativeHints.some(hint => (fn || '').toString().indexOf(hint) > -1);\n","/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nlet isIE10 = undefined;\n\nexport default function() {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference.jquery ? reference[0] : reference;\n    this.popper = popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedule an update, it will run on the next UI update available\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport',\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement\n  );\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side = ['left', 'top'].indexOf(placement) !== -1\n      ? 'primary'\n      : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[placement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if the arrow style has been computed, apply the arrow style\n  if (data.offsets.arrow) {\n    setStyles(data.arrowElement, data.offsets.arrow);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: 'absolute' });\n\n  return options;\n}\n"]}