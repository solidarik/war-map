{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/node_modules/rbush/index.js","webpack://ol/node_modules/pbf/index.js","webpack://ol/node_modules/pixelworks/lib/index.js","webpack://ol/node_modules/quickselect/quickselect.js","webpack://ol/node_modules/ieee754/index.js","webpack://ol/node_modules/pixelworks/lib/processor.js","webpack://ol/node_modules/pixelworks/lib/util.js","webpack://ol/build/ol/util.js","webpack://ol/build/ol/AssertionError.js","webpack://ol/build/ol/CollectionEventType.js","webpack://ol/build/ol/ObjectEventType.js","webpack://ol/build/ol/obj.js","webpack://ol/build/ol/events.js","webpack://ol/build/ol/Disposable.js","webpack://ol/build/ol/functions.js","webpack://ol/build/ol/events/Event.js","webpack://ol/build/ol/events/Target.js","webpack://ol/build/ol/events/EventType.js","webpack://ol/build/ol/Observable.js","webpack://ol/build/ol/Object.js","webpack://ol/build/ol/Collection.js","webpack://ol/build/ol/asserts.js","webpack://ol/build/ol/Feature.js","webpack://ol/build/ol/array.js","webpack://ol/build/ol/extent/Corner.js","webpack://ol/build/ol/extent/Relationship.js","webpack://ol/build/ol/extent.js","webpack://ol/build/ol/geom/GeometryLayout.js","webpack://ol/build/ol/geom/GeometryType.js","webpack://ol/build/ol/geom/flat/transform.js","webpack://ol/build/ol/math.js","webpack://ol/build/ol/sphere.js","webpack://ol/build/ol/proj/Units.js","webpack://ol/build/ol/proj/Projection.js","webpack://ol/build/ol/proj/epsg3857.js","webpack://ol/build/ol/proj/epsg4326.js","webpack://ol/build/ol/proj/projections.js","webpack://ol/build/ol/proj/transforms.js","webpack://ol/build/ol/proj.js","webpack://ol/build/ol/transform.js","webpack://ol/build/ol/geom/Geometry.js","webpack://ol/build/ol/geom/SimpleGeometry.js","webpack://ol/build/ol/geom/flat/area.js","webpack://ol/build/ol/geom/flat/closest.js","webpack://ol/build/ol/geom/flat/deflate.js","webpack://ol/build/ol/geom/flat/inflate.js","webpack://ol/build/ol/geom/flat/simplify.js","webpack://ol/build/ol/geom/LinearRing.js","webpack://ol/build/ol/geom/Point.js","webpack://ol/build/ol/geom/flat/contains.js","webpack://ol/build/ol/geom/flat/interiorpoint.js","webpack://ol/build/ol/geom/flat/segments.js","webpack://ol/build/ol/geom/flat/intersectsextent.js","webpack://ol/build/ol/geom/flat/reverse.js","webpack://ol/build/ol/geom/flat/orient.js","webpack://ol/build/ol/geom/Polygon.js","webpack://ol/build/ol/has.js","webpack://ol/build/ol/Geolocation.js","webpack://ol/build/ol/string.js","webpack://ol/build/ol/coordinate.js","webpack://ol/build/ol/geom/flat/interpolate.js","webpack://ol/build/ol/geom/flat/length.js","webpack://ol/build/ol/geom/LineString.js","webpack://ol/build/ol/geom/flat/geodesic.js","webpack://ol/build/ol/render/EventType.js","webpack://ol/build/ol/color.js","webpack://ol/build/ol/style/Fill.js","webpack://ol/build/ol/style/Stroke.js","webpack://ol/build/ol/style/Text.js","webpack://ol/build/ol/style/TextPlacement.js","webpack://ol/build/ol/Graticule.js","webpack://ol/build/ol/Kinetic.js","webpack://ol/build/ol/MapEvent.js","webpack://ol/build/ol/MapBrowserEvent.js","webpack://ol/build/ol/MapBrowserEventType.js","webpack://ol/build/ol/MapBrowserPointerEvent.js","webpack://ol/build/ol/pointer/EventType.js","webpack://ol/build/ol/pointer/EventSource.js","webpack://ol/build/ol/pointer/MouseSource.js","webpack://ol/build/ol/pointer/MsSource.js","webpack://ol/build/ol/pointer/NativeSource.js","webpack://ol/build/ol/pointer/PointerEvent.js","webpack://ol/build/ol/pointer/TouchSource.js","webpack://ol/build/ol/pointer/PointerEventHandler.js","webpack://ol/build/ol/MapBrowserEventHandler.js","webpack://ol/build/ol/MapEventType.js","webpack://ol/build/ol/MapProperty.js","webpack://ol/build/ol/TileState.js","webpack://ol/build/ol/structs/PriorityQueue.js","webpack://ol/build/ol/TileQueue.js","webpack://ol/build/ol/tilegrid/common.js","webpack://ol/build/ol/centerconstraint.js","webpack://ol/build/ol/rotationconstraint.js","webpack://ol/build/ol/ViewHint.js","webpack://ol/build/ol/ViewProperty.js","webpack://ol/build/ol/easing.js","webpack://ol/build/ol/View.js","webpack://ol/build/ol/resolutionconstraint.js","webpack://ol/build/ol/dom.js","webpack://ol/build/ol/layer/Property.js","webpack://ol/build/ol/layer/Base.js","webpack://ol/build/ol/source/State.js","webpack://ol/build/ol/layer/Group.js","webpack://ol/build/ol/size.js","webpack://ol/build/ol/PluggableMap.js","webpack://ol/build/ol/control/Control.js","webpack://ol/build/ol/css.js","webpack://ol/build/ol/layer/Layer.js","webpack://ol/build/ol/control/Attribution.js","webpack://ol/build/ol/control/Rotate.js","webpack://ol/build/ol/control/Zoom.js","webpack://ol/build/ol/control/util.js","webpack://ol/build/ol/interaction/Property.js","webpack://ol/build/ol/interaction/Interaction.js","webpack://ol/build/ol/interaction/DoubleClickZoom.js","webpack://ol/build/ol/events/condition.js","webpack://ol/build/ol/interaction/Pointer.js","webpack://ol/build/ol/interaction/DragPan.js","webpack://ol/build/ol/interaction/DragRotate.js","webpack://ol/build/ol/render/Box.js","webpack://ol/build/ol/interaction/DragBox.js","webpack://ol/build/ol/interaction/DragZoom.js","webpack://ol/build/ol/events/KeyCode.js","webpack://ol/build/ol/interaction/KeyboardPan.js","webpack://ol/build/ol/interaction/KeyboardZoom.js","webpack://ol/build/ol/interaction/MouseWheelZoom.js","webpack://ol/build/ol/interaction/PinchRotate.js","webpack://ol/build/ol/interaction/PinchZoom.js","webpack://ol/build/ol/interaction.js","webpack://ol/build/ol/reproj/common.js","webpack://ol/build/ol/ImageBase.js","webpack://ol/build/ol/ImageState.js","webpack://ol/build/ol/ImageCanvas.js","webpack://ol/build/ol/LayerType.js","webpack://ol/build/ol/layer/VectorRenderType.js","webpack://ol/build/ol/render/Event.js","webpack://ol/build/ol/structs/LRUCache.js","webpack://ol/build/ol/render/canvas.js","webpack://ol/build/ol/colorlike.js","webpack://ol/build/ol/render/VectorContext.js","webpack://ol/build/ol/render/canvas/Immediate.js","webpack://ol/build/ol/style/IconImageCache.js","webpack://ol/build/ol/renderer/Map.js","webpack://ol/build/ol/renderer/canvas/Map.js","webpack://ol/build/ol/renderer/Layer.js","webpack://ol/build/ol/renderer/canvas/Layer.js","webpack://ol/build/ol/renderer/canvas/IntermediateCanvas.js","webpack://ol/build/ol/renderer/canvas/ImageLayer.js","webpack://ol/build/ol/TileRange.js","webpack://ol/build/ol/renderer/canvas/TileLayer.js","webpack://ol/build/ol/render/ReplayGroup.js","webpack://ol/build/ol/render/ReplayType.js","webpack://ol/build/ol/geom/flat/textpath.js","webpack://ol/build/ol/render/canvas/Instruction.js","webpack://ol/build/ol/render/replay.js","webpack://ol/build/ol/render/canvas/Replay.js","webpack://ol/build/ol/render/canvas/ImageReplay.js","webpack://ol/build/ol/render/canvas/LineStringReplay.js","webpack://ol/build/ol/render/canvas/PolygonReplay.js","webpack://ol/build/ol/geom/flat/straightchunk.js","webpack://ol/build/ol/render/canvas/ReplayGroup.js","webpack://ol/build/ol/render/canvas/TextReplay.js","webpack://ol/build/ol/renderer/vector.js","webpack://ol/build/ol/renderer/canvas/VectorLayer.js","webpack://ol/build/ol/layer/VectorTileRenderType.js","webpack://ol/build/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/build/ol/webgl.js","webpack://ol/build/ol/Map.js","webpack://ol/build/ol/OverlayPositioning.js","webpack://ol/build/ol/Overlay.js","webpack://ol/build/ol/webgl/Shader.js","webpack://ol/build/ol/webgl/Fragment.js","webpack://ol/build/ol/webgl/Vertex.js","webpack://ol/build/ol/render/webgl/circlereplay/defaultshader.js","webpack://ol/build/ol/render/webgl/circlereplay/defaultshader/Locations.js","webpack://ol/build/ol/vec/mat4.js","webpack://ol/build/ol/render/webgl/Replay.js","webpack://ol/build/ol/render/webgl.js","webpack://ol/build/ol/webgl/Buffer.js","webpack://ol/build/ol/render/webgl/CircleReplay.js","webpack://ol/build/ol/render/webgl/texturereplay/defaultshader.js","webpack://ol/build/ol/render/webgl/texturereplay/defaultshader/Locations.js","webpack://ol/build/ol/webgl/ContextEventType.js","webpack://ol/build/ol/webgl/Context.js","webpack://ol/build/ol/render/webgl/TextureReplay.js","webpack://ol/build/ol/render/webgl/ImageReplay.js","webpack://ol/build/ol/geom/flat/topology.js","webpack://ol/build/ol/render/webgl/linestringreplay/defaultshader.js","webpack://ol/build/ol/render/webgl/linestringreplay/defaultshader/Locations.js","webpack://ol/build/ol/render/webgl/LineStringReplay.js","webpack://ol/build/ol/render/webgl/polygonreplay/defaultshader.js","webpack://ol/build/ol/render/webgl/polygonreplay/defaultshader/Locations.js","webpack://ol/build/ol/structs/LinkedList.js","webpack://ol/build/ol/structs/RBush.js","webpack://ol/build/ol/render/webgl/PolygonReplay.js","webpack://ol/build/ol/style/Atlas.js","webpack://ol/build/ol/style/AtlasManager.js","webpack://ol/build/ol/render/webgl/TextReplay.js","webpack://ol/build/ol/render/webgl/ReplayGroup.js","webpack://ol/build/ol/render/webgl/Immediate.js","webpack://ol/build/ol/renderer/webgl/defaultmapshader.js","webpack://ol/build/ol/renderer/webgl/defaultmapshader/Locations.js","webpack://ol/build/ol/renderer/webgl/Layer.js","webpack://ol/build/ol/renderer/webgl/ImageLayer.js","webpack://ol/build/ol/renderer/webgl/Map.js","webpack://ol/build/ol/Tile.js","webpack://ol/build/ol/ImageTile.js","webpack://ol/build/ol/tilecoord.js","webpack://ol/build/ol/TileCache.js","webpack://ol/build/ol/source/Source.js","webpack://ol/build/ol/tilegrid/TileGrid.js","webpack://ol/build/ol/tilegrid.js","webpack://ol/build/ol/source/Tile.js","webpack://ol/build/ol/renderer/webgl/tilelayershader.js","webpack://ol/build/ol/renderer/webgl/tilelayershader/Locations.js","webpack://ol/build/ol/renderer/webgl/TileLayer.js","webpack://ol/build/ol/renderer/webgl/VectorLayer.js","webpack://ol/build/ol/WebGLMap.js","webpack://ol/build/ol/format/FormatType.js","webpack://ol/build/ol/featureloader.js","webpack://ol/build/ol/loadingstrategy.js","webpack://ol/build/ol/xml.js","webpack://ol/build/ol/tilegrid/WMTS.js","webpack://ol/build/ol/style/Image.js","webpack://ol/build/ol/style/RegularShape.js","webpack://ol/build/ol/style/Circle.js","webpack://ol/build/ol/style/IconAnchorUnits.js","webpack://ol/build/ol/style/IconImage.js","webpack://ol/build/ol/style/IconOrigin.js","webpack://ol/build/ol/style/Icon.js","webpack://ol/build/ol/style/Style.js","webpack://ol/build/ol/tileurlfunction.js","webpack://ol/build/ol/net.js","webpack://ol/build/ol/reproj.js","webpack://ol/build/ol/reproj/Triangulation.js","webpack://ol/build/ol/reproj/Tile.js","webpack://ol/build/ol/source/UrlTile.js","webpack://ol/build/ol/source/TileEventType.js","webpack://ol/build/ol/source/TileImage.js","webpack://ol/build/ol/source/BingMaps.js","webpack://ol/build/ol/source/XYZ.js","webpack://ol/build/ol/source/CartoDB.js","webpack://ol/build/ol/source/VectorEventType.js","webpack://ol/build/ol/source/Vector.js","webpack://ol/build/ol/source/Cluster.js","webpack://ol/build/ol/reproj/Image.js","webpack://ol/build/ol/source/Image.js","webpack://ol/build/ol/Image.js","webpack://ol/build/ol/uri.js","webpack://ol/build/ol/source/ImageArcGISRest.js","webpack://ol/build/ol/source/ImageCanvas.js","webpack://ol/build/ol/source/ImageMapGuide.js","webpack://ol/build/ol/source/ImageStatic.js","webpack://ol/build/ol/source/common.js","webpack://ol/build/ol/source/WMSServerType.js","webpack://ol/build/ol/source/ImageWMS.js","webpack://ol/build/ol/source/OSM.js","webpack://ol/build/ol/layer/Image.js","webpack://ol/build/ol/layer/TileProperty.js","webpack://ol/build/ol/layer/Tile.js","webpack://ol/build/ol/source/Raster.js","webpack://ol/build/ol/source/Stamen.js","webpack://ol/build/ol/source/TileArcGISRest.js","webpack://ol/build/ol/source/TileDebug.js","webpack://ol/build/ol/source/TileJSON.js","webpack://ol/build/ol/source/TileWMS.js","webpack://ol/build/ol/source/UTFGrid.js","webpack://ol/build/ol/VectorImageTile.js","webpack://ol/build/ol/VectorTile.js","webpack://ol/build/ol/source/VectorTile.js","webpack://ol/build/ol/source/WMTSRequestEncoding.js","webpack://ol/build/ol/source/WMTS.js","webpack://ol/build/ol/source/Zoomify.js","webpack://ol/build/ol/layer/Vector.js","webpack://ol/build/ol/layer/Heatmap.js","webpack://ol/build/ol/layer/VectorTile.js","webpack://ol/build/ol/interaction/DragAndDrop.js","webpack://ol/build/ol/interaction/DragRotateAndZoom.js","webpack://ol/build/ol/geom/Circle.js","webpack://ol/build/ol/geom/MultiLineString.js","webpack://ol/build/ol/geom/MultiPoint.js","webpack://ol/build/ol/geom/flat/center.js","webpack://ol/build/ol/geom/MultiPolygon.js","webpack://ol/build/ol/interaction/Draw.js","webpack://ol/build/ol/interaction/Extent.js","webpack://ol/build/ol/interaction/Modify.js","webpack://ol/build/ol/interaction/Select.js","webpack://ol/build/ol/interaction/Snap.js","webpack://ol/build/ol/interaction/Translate.js","webpack://ol/build/ol/geom/GeometryCollection.js","webpack://ol/build/ol/format/Feature.js","webpack://ol/build/ol/format/JSONFeature.js","webpack://ol/build/ol/format/EsriJSON.js","webpack://ol/build/ol/format/XMLFeature.js","webpack://ol/build/ol/format/GMLBase.js","webpack://ol/build/ol/format/xsd.js","webpack://ol/build/ol/format/GML3.js","webpack://ol/build/ol/format/GML.js","webpack://ol/build/ol/format/GML2.js","webpack://ol/build/ol/format/GML32.js","webpack://ol/build/ol/format/GPX.js","webpack://ol/build/ol/format/GeoJSON.js","webpack://ol/build/ol/format/TextFeature.js","webpack://ol/build/ol/format/KML.js","webpack://ol/build/ol/format/IGC.js","webpack://ol/build/ol/render/Feature.js","webpack://ol/build/ol/format/MVT.js","webpack://ol/build/ol/format/OSMXML.js","webpack://ol/build/ol/geom/flat/flip.js","webpack://ol/build/ol/format/Polyline.js","webpack://ol/build/ol/format/TopoJSON.js","webpack://ol/build/ol/format/filter/Filter.js","webpack://ol/build/ol/format/filter/LogicalNary.js","webpack://ol/build/ol/format/filter/And.js","webpack://ol/build/ol/format/filter/Bbox.js","webpack://ol/build/ol/format/filter/Spatial.js","webpack://ol/build/ol/format/filter/Contains.js","webpack://ol/build/ol/format/filter/Comparison.js","webpack://ol/build/ol/format/filter/During.js","webpack://ol/build/ol/format/filter/ComparisonBinary.js","webpack://ol/build/ol/format/filter/EqualTo.js","webpack://ol/build/ol/format/filter/GreaterThan.js","webpack://ol/build/ol/format/filter/GreaterThanOrEqualTo.js","webpack://ol/build/ol/format/filter/Intersects.js","webpack://ol/build/ol/format/filter/IsBetween.js","webpack://ol/build/ol/format/filter/IsLike.js","webpack://ol/build/ol/format/filter/IsNull.js","webpack://ol/build/ol/format/filter/LessThan.js","webpack://ol/build/ol/format/filter/LessThanOrEqualTo.js","webpack://ol/build/ol/format/filter/Not.js","webpack://ol/build/ol/format/filter/NotEqualTo.js","webpack://ol/build/ol/format/filter/Or.js","webpack://ol/build/ol/format/filter/Within.js","webpack://ol/build/ol/format/filter.js","webpack://ol/build/ol/format/WFS.js","webpack://ol/build/ol/format/WKT.js","webpack://ol/build/ol/format/XLink.js","webpack://ol/build/ol/format/XML.js","webpack://ol/build/ol/format/WMSCapabilities.js","webpack://ol/build/ol/format/WMSGetFeatureInfo.js","webpack://ol/build/ol/format/OWS.js","webpack://ol/build/ol/format/WMTSCapabilities.js","webpack://ol/build/ol/control/FullScreen.js","webpack://ol/build/ol/control/MousePosition.js","webpack://ol/build/ol/control/OverviewMap.js","webpack://ol/build/ol/control/ScaleLine.js","webpack://ol/build/ol/control/ZoomSlider.js","webpack://ol/build/ol/control/ZoomToExtent.js","webpack://ol/build/index.js","webpack://ol/build/ol/proj/proj4.js","webpack://ol/build/ol/render.js","eventEmitter.js","mapControl.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","readPackedEnd","pbf","Bytes","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","extraLen","LN2","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","Varint","Fixed64","Fixed32","destroy","readFields","readField","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","h","Error","readVarint64","readSVarint","num","readBoolean","Boolean","readString","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","set","finish","floor","lsb","writeString","lead","charCodeAt","write","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","width","output","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","array","pixel","createWorker","config","onMessage","lines","keys","lib","map","toString","concat","blob","Blob","source","URL","createObjectURL","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","_destroyed","job","shift","input","segmentLength","slices","jj","event","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","util_abstract","uidCounter_","getUid","ol_uid","VERSION","ol_AssertionError","AssertionError","code","message","split","__proto__","constructor","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","target","var_sources","arguments$1","arguments","TypeError","ii","obj_clear","getValues","values","obj_isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","listen","opt_once","callOnce","evt","unlistenByKey","listenOnce","unlisten","unlistenAll","Disposable_Disposable","disposed_","dispose","disposeInternal","ol_Disposable","TRUE","FALSE","VOID","Event_Event","propagationStopped","stopPropagation","preventDefault","events_Event","events_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","ol_Observable","EventTarget","Observable","revision_","changed","getRevision","on","isArray","once","un","ObjectEvent","Event","oldValue","changeEventTypeCache","getChangeEventType","ol_Object","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","opt_silent","unset","Property","CollectionEvent","opt_element","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","assert","assertion","errorCode","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","getZIndex","setId","id","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","extension","find","func","equals","arr1","arr2","len1","stableSort","compareFnc","findIndex","every","el","idx","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","extendCoordinate","extent_buffer","opt_extent","extent_clone","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","extent_getArea","extent_isEmpty","getWidth","getHeight","extent_getCenter","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","extent_applyTransform","transformFn","xs","ys","_boundingExtentXYs","GeometryLayout","XY","XYZ","XYM","XYZM","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","transform2D","transform","opt_dest","dest","transform_translate","clamp","cosh","squaredSegmentDistance","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","point","PROJECTIONS","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","cloneTransform","opt_output","opt_dimension","identityTransform","addProjection","projection","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","undefined","addEquivalentProjections","projections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","dimension","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","proj_getTransform","proj_transform","transformExtent","projections1","projections2","forwardTransform","inverseTransform","fromEPSG4326","halfSize","tan","epsg3857_toEPSG4326","atan","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","setFromArray","ol_transform_rotate","angle","ol_transform_scale","ol_transform_translate","transform_compose","dx1","dy1","sx","sy","dx2","dy2","invert","det","mat","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","rotate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","squaredTolerance","getType","applyTransform","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","anchorX","anchorY","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","i$1","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","snap","round","quantize","quantizeArray","simplifiedEnds","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsLinearRingArray","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","polygon","makeRegular","getRadius","startAngle","has_ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","error","ol_Geolocation","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getProjection","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","coordinate_add","delta","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_format","template","replace","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","coordinate_scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","toStringXY","interpolatePoint","fraction","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","found","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringLength","geom_LineString","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","geodesic_line","interpolate","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","render_EventType","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cache","cacheSize","g","exec","body","appendChild","rgb","getComputedStyle","removeChild","hasAlpha","substr","normalize","Number","asArray","Fill","color_","checksum_","getColor","setColor","getChecksum","style_Fill","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","Text_Text","font_","font","rotation_","rotateWithView_","rotateWithView","scale_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getScale","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","style_Text","DEFAULT_STROKE_STYLE","INTERVALS","Graticule_Graticule","map_","postcomposeListenerKey_","projection_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","strokeStyle_","strokeStyle","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","intervals_","intervals","setMap","addMeridian_","lon","minLat","maxLat","lineString","getMeridian_","textPoint","getMeridianPoint_","geom","clampedBottom","clampedTop","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","interval","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","p1","p2","getMap","frac","getMeridians","lon2","getParallels","handlePostCompose_","line","labelData","vectorContext","frameState","viewState","pixelRatio","updateProjectionInfo_","setFillStrokeStyle","drawGeometry","setTextStyle","epsg4326Projection","worldExtentP","render","ol_Graticule","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","ol_Kinetic","ol_MapEvent","MapEvent","opt_frameState","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","getCoordinateFromPixel","dragging","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","clientX","clientY","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","pressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","disable","rotationconstraint_none","ViewHint","ViewProperty","easeIn","easeOut","inAndOut","linear","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","power","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","constraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","createSnapToZero","theta","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","animate","var_args","animationCount","isDef","setCenter","setZoom","series","complete","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","calculateCenterZoom","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","centerX","centerY","hint","createCanvasContext2D","opt_width","opt_height","canvas","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base","BaseLayer","opacity","visible","zIndex","state_","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","ownLayerState","layerState","size_buffer","size_scale","ratio","toSize","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","previousFrameState","layerStatesArray","layerStates","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","control_Control","Control","target_","listenerKeys","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","fontFamily","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","renderEvent","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_render","autoHide_","add","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","interaction_Property","ACTIVE","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","Interaction_zoom","zoomWithoutConstraints","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_handleEvent","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altKeyOnly","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","never","condition_pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","interaction_DragRotate","DragRotate","lastAngle_","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","out_","mapExtent","boxPixelExtent","extendCoordinates","createOrUpdateFromCoordinates","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ol_ImageBase","ImageBase","getImage","getPixelRatio","ImageState","ol_ImageCanvas","ImageCanvas","opt_loader","loader_","canvas_","error_","getError","handleLoad_","err","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","prune","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","referenceWidth","retries","checked","referenceFonts","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","measureTextWidth","rotateAtOffset","resetTransform","drawImage","image","originX","originY","w","alpha","globalAlpha","setTransform","asColorLike","VectorContext_VectorContext","drawCustom","renderer","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","fillStyle","setImageStyle","imageStyle","opt_declutterGroup","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","beginPath","arc","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineWidth","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","expireIconCache","sortByZIndex","state1","state2","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","getWrapX","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerRendererConstructors","canvas_Map","CanvasMapRenderer","insertBefore","childNodes","getTransform","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","renderer_Layer","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","tileCoord","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","canvas_Layer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getRenderMode","mapRenderer","canvas_ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","drawTextOnPath","measure","startM","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_tmpTransform","Replay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","origin","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","textLength","textReplay","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","BATCH_CONSTRUCTORS","Circle","Default","Image","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","currentWidth","lineHeight","renderWidth","leftRight","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","getImageState","imageReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","unlistenImageChange","listenImageChange","renderGeometry","getGeometries","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styleFunction","dirty","forEachFeatureInExtent","canvas_VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","getFeatures","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","renderedTileRevision","wrappedTileCoord","pixelScale","canvas_VectorTileLayer","MAX_TEXTURE_SIZE","EXTENSIONS","ol_Map","Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_Property","ELEMENT","MAP","OFFSET","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","marginLeft","marginRight","marginTop","marginBottom","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","getOptions","LINEAR","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","CONTEXT_IDS","webgl_getContext","opt_attributes","webgl_gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","Shader_WebGLShader","source_","isAnimated","Shader","Fragment","WebGLShader","WebGLFragment","Vertex","WebGLVertex","fragment","defaultshader_vertex","defaultshader_Locations","gl","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","webgl_Replay","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","getGL","isEnabled","STENCIL_TEST","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FILLSTYLE","DEFAULT_LINEDASH","DEFAULT_STROKESTYLE","EPSILON","triangleIsCounterClockwise","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","Buffer","CircleReplay","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","radius_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","CanvasGradient","CanvasPattern","defaultshader_fragment","texturereplay_defaultshader_vertex","texturereplay_defaultshader_Locations","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","ContextEventType","LOST","RESTORED","createTextureInternal","opt_wrapS","opt_wrapT","texture","createTexture","bindTexture","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","createEmptyTexture","texImage2D","RGBA","UNSIGNED_BYTE","Context","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","getExtension","handleWebGLContextLost","handleWebGLContextRestored","bufferKey","bufferCacheEntry","arrayBuffer","createBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","key$1","deleteProgram","key$2","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","TextureReplay","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","imageHeight","imageWidth","defaultLocations","textures","getTextures","drawCoordinates","createTextures","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","webgl_ImageReplay","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","getImageSize","lineStringIsClosed","linestringreplay_defaultshader_fragment","linestringreplay_defaultshader_vertex","linestringreplay_defaultshader_Locations","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","webgl_LineStringReplay","WebGLLineStringReplay","startCoords","sign","p0","lastSign","addVertices_","product","isValid_","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","DEPTH_TEST","depthMask","depthFunc","polygonreplay_defaultshader_fragment","polygonreplay_defaultshader_vertex","polygonreplay_defaultshader_Locations","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","next","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","structs_LinkedList","RBush_RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","structs_RBush","webgl_PolygonReplay","WebGLPolygonReplay","outerRing","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","segments","createPoint_","insertItem_","seg","ccw","s0","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","dist","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ua","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holes","holeFlatCoords","lineDeleter","nullStrokeStyle","Atlas_Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","style_Atlas","AtlasManager_AtlasManager","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","info","getInfo_","hitInfo","mergeInfos_","atlases","hitImage","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","style_AtlasManager","TextReplay_WebGLTextReplay","WebGLTextReplay","measureCanvas_","currAtlas_","currX","currY","charArr","charInfo","glyphAtlas","textSize","getTextSize_","self","textHeight","sum","curr","addCharToAtlas_","reduce","mCtx","ctx","getAtlas_","params","hash","calculateHash_","HIT_DETECTION_SIZE","ReplayGroup_BATCH_CONSTRUCTORS","webgl_ReplayGroup","WebGLReplayGroup","functions","replayHitDetection_","readPixels","webgl_Immediate","WebGLImmediateRenderer","center_","size_","imageStyle_","fillStyle_","textStyle_","defaultmapshader_fragment","defaultmapshader_vertex","defaultmapshader_Locations","u_texCoordMatrix","u_texture","webgl_Layer","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","ImageLayer_WebGLImageLayerRenderer","WebGLImageLayerRenderer","hitTransformationMatrix_","createTexture_","imageElement","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","webgl_ImageLayer","webgl_Map","WebGLMapRenderer","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","depth","preserveDrawingBuffer","stencil","textureCache_","tileTextureQueue_","loadNextTileTexture_","tileSize","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","imageTile","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","clearColor","viewport","layerState$1","hasFeature","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getBlankImage","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","tilecoord_hash","ol_TileCache","TileCache","pruneExceptNewestZ","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","tmpTileCoord","TileGrid_TileGrid","opt_func","opt_strict","currentVal","res","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","tilegrid_TileGrid","getForProjection","createForProjection","createXYZ","xyzOptions","gridOptions","resolutionsFromExtent","opt_maxZoom","opt_tileSize","opt_corner","createForExtent","corner","extentFromProjection","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","opt_projection","worldsAway","TileSourceEvent","source_Tile","tilelayershader_fragment","tilelayershader_vertex","tilelayershader_Locations","u_tileOffset","TileLayer_WebGLTileLayerRenderer","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","framebufferExtent","tilePixelResolution","tileRangeSize","framebufferExtentDimension","allTilesLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","webgl_TileLayer","VectorLayer_WebGLVectorLayerRenderer","WebGLVectorLayerRenderer","layerState_","SCISSOR_TEST","scissor","webgl_VectorLayer","ol_WebGLMap","WebGLMap","FormatType","ARRAY_BUFFER","JSON","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","featureloader_xhr","dataProjection","addFeatures","loadingstrategy_all","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","isDocument","parse","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","WMTSTileGrid","TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","Image_ImageStyle","getSnapToPixel","getHitDetectionImageSize","setRotateWithView","setSnapToPixel","style_Image","style_RegularShape","ImageStyle","RegularShape","checksums_","hitDetectionCanvas_","points","radius1","radius2_","radius2","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getPoints","getRadius2","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","angle0","radiusC","strokeChecksum","fillChecksum","checksum","style_Circle","CircleStyle","setRadius","IconAnchorUnits","FRACTION","IconImage_IconImage","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","IconOrigin","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setImage","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","style_Style","tileurlfunction_createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","match","startCharCode","stopCharCode","stop","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad","sourceListenKey","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","defaultTileLoadFunction","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","source_XYZ","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","tilesUrl","cdn_url","https","layergroupid","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","VectorSourceEvent","opt_feature","Vector","VectorSource","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","source_Cluster","Cluster","geometryFunction","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","ol_Image","ImageWrapper","imageLoadFunction","imageLoadFunction_","appendParams","uri","keyParams","encodeURIComponent","qs","source_ImageArcGISRest","ImageArcGISRest","params_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic","Static","imageExtent_","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","WMSServerType","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","version","ATTRIBUTION","source_OSM","OSM","Image_ImageLayer","ImageLayer","layer_Image","TileProperty","Tile_TileLayer","TileLayer","setPreload","setUseInterimTilesOnError","layer_Tile","RasterOperationType","PIXEL","RasterSourceEvent","sharedContext","Raster_createRenderer","layerOrSource","Raster","RasterSource","worker_","operationType_","operationType","threads_","renderers_","requestedFrameState_","renderedImageCanvas_","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_tileUrlFunction","tmpExtent_","source_TileArcGISRest","TileArcGISRest","getKeyForParams_","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","attributionExtent","TileWMS_tileUrlFunction","source_TileWMS","TileWMS","transparent","UTFGrid_CustomTile","CustomTile","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","ol_VectorImageTile","VectorImageTile","sourceTiles","replayState_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","sourceTileKey","consumers","finishLoading_","errorSourceTiles","empty","defaultLoadFunction","onLoad","onError","DEFAULT_EXTENT","ol_VectorTile","VectorTile","features_","replayGroups_","setFeatures","source_VectorTile","tileGrids_","WMTSRequestEncoding","KVP","REST","source_WMTS","WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","TileCol","TileRow","TierSizeCalculation","TRUNCATED","Zoomify_CustomTile","zoomifyImage_","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileCoordZ","tileIndex","TileGroup","ZoomifyTileClass","Vector_Property","Vector_VectorLayer","VectorLayer","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","setDeclutter","setRenderOrder","layer_Vector","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","shadow","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","view8","VectorTile_VectorTileLayer","VectorTileLayer","layer_VectorTile","DragAndDropEvent","file","opt_features","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","interaction_DragRotateAndZoom","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","geom_MultiLineString","lineStrings","appendLineString","opt_interpolate","getLineString","getLineStrings","midpoints","douglasPeuckerArray","geom_MultiPoint","appendPoint","getPoint","center_linearRingss","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","ExtentEventType","EXTENTCHANGED","ExtentInteractionEvent","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","Extent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","SelectEventType","SELECT","SelectEvent","selected","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","interaction_Select","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","featureOverlay_","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","isCircle","TranslateEvent","interaction_Translate","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","oldMap","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","Feature_FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","format_Feature","transformWithOptions","transformed","decimals","getObject","format_JSONFeature","FeatureFormat","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","EsriJSON_readGeometry","esriJSONPolygon","flatRing","outerRings","matched","containsHole","hasZ","hasM","getHasZM","EsriJSON_writeGeometry","esriJSON","hasZM","multiPoint","multiLineString","format_EsriJSON","EsriJSON","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","wkid","objects","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","ft","featureTypes","ii$1","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS","readFeatureElementInternal","asFeature","test","_content_","attName","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","format_GML2","GML32","http://www.opengis.net/gml/3.2","format_GML32","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","GPX_appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","layoutOptions","applyLayoutOptions","href","format_GPX","GeoJSON_readGeometry","GeoJSON_writeGeometry","geoJSON","rightHanded","format_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_NO_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","KML_readLineString","KML_readLinearRing","KML_readPoint","KML_readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_IMAGE_STYLE","KML_DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","styleUri","baseURI","location","fs","readName","readNameFromDocument","readNameFromNode","n$1","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","coord","gxTrackObject","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","d$1","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","format_KML","Feature_tmpTransform","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","midpoint","render_Feature","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layerName","layers_","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","prevEndIndex","pbf_default","pbfLayers","pbfLayer","OSMXML_NAMESPACE_URIS","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","OSMXML_OSMXML","OSMXML","format_OSMXML","flipXY","opt_destOffset","destOffset","encodeDeltas","numbers","opt_factor","factor","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeUnsignedInteger","current","format_Polyline","Polyline","factor_","geometryLayout_","geometryLayout","TopoJSON_GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","readFeaturesFromGeometryCollection","readFeatureFromGeometry","geometryReader","transformArc","format_TopoJSON","TopoJSON","topoJSONTopology","topoJSONFeatures","objectName","Filter_Filter","tagName_","getTagName","filter_Filter","filter_LogicalNary","Filter","LogicalNary","conditions","filter_And","And","filter_Bbox","Bbox","filter_Spatial","Spatial","filter_Contains","Contains","filter_Comparison","Comparison","propertyName","filter_During","During","filter_ComparisonBinary","ComparisonBinary","expression","opt_matchCase","matchCase","filter_EqualTo","EqualTo","filter_GreaterThan","GreaterThan","filter_GreaterThanOrEqualTo","GreaterThanOrEqualTo","filter_Intersects","Intersects","filter_IsBetween","IsBetween","lowerBoundary","upperBoundary","filter_IsLike","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","filter_IsNull","IsNull","filter_LessThan","LessThan","filter_LessThanOrEqualTo","LessThanOrEqualTo","filter_Not","Not","filter_NotEqualTo","NotEqualTo","filter_Or","Or","filter_Within","Within","and","filter_bbox","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","SCHEMA_LOCATIONS","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","viewParams","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","WKTGeometryType","WKT_type","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","lexer","lexer_","token_","layout_","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","geomType","GeometryEncoder","components","geoms","encode","enc","format_WKT","WKT","splitCollection_","splitCollection","parse_","NAMESPACE_URI","readHref","XML_XML","readFromDocument","readFromNode","format_XML","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerElement","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","OWS_PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","OWS_HTTP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","isFullScreenSupported","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","isFullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreenWithKeys","handleFullScreenChange_","fullscreen","activeClassName","inactiveClassName","nextClassName","MousePosition_render","mapProjection_","control_MousePosition","MousePosition","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","pointResolutionUnits","nominalCount","suffix","metersPerDegree","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","getPositionForResolution_","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","ol","colorlike","featureloader","loadingstrategy","proj4","webgl","sphere","Graticule","unByKey","createStringXY","toStringHDMS","upAndDown","click","doubleClick","platformModifierKeyOnly","writeFilter","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","inherits","childCtor","parentCtor","createBox","boxCoordinates","createRegularPolygon","fromLonLat","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","toContext","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","sphere_getArea","sphere_getLength","AtlasManager","__webpack_exports__","EventEmitter","emitEvents","contexts","SuperCustomControl","kremlinLocation","MapControl","rasterLayer","lonLatCoords","console","draw","dragBox","addFeatureEnabled","activeButton","_addYearLayer","_addHistoryEventsLayer","_changeYear","_addYearControl","yearLayer","_getYearLayerUrl","historyEventsSource","historyEventsLayer","_getMedianXY","valuesX","valuesY","_getMedian","currentYearForMap","ano","anow","YearControl","caption","currentYear","emit","mo","kind","style_prop","_hexToRgbA","srcCoords","_createGeom","CustomControl","class","btn","_setActiveButton","$","removeClass","addClass","textColor","_createTextStyle","outlineWidth","maxreso","dom","maxangle","outlineColor","_getText","trunc","stringDivider","inputParams","getBSIconHTML","parentDiv","yearInput","_inputKeyUp","yearLeftButton","_leftButtonClick","yearRightButton","_rightButtonClick","_checkYear","_setNewYear","incr","intYear"],"mappings":"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","file":"mapControl.cc5061a8.map","sourceRoot":"..\\public-src","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = (function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = (function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this$1, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this$1.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = (function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this$1, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = (function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = (function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    var this$1 = this;\n\n    for (var key in values) {\n      this$1.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = (function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = (function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this$1.assertUnique_(this$1.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    var this$1 = this;\n\n    while (this.getLength() > 0) {\n      this$1.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    var this$1 = this;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this$1.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var this$1 = this;\n\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this$1.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var this$1 = this;\n\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this$1.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    var this$1 = this;\n\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this$1.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = (function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = (function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = (function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = (function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = (function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    var this$1 = this;\n\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this$1.layout = GeometryLayout.XY;\n          this$1.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = (function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = (function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = (function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/Geolocation\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport Event from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @enum {string}\n */\nvar Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nvar GeolocationError = (function (Event) {\n  function GeolocationError(error) {\n    Event.call(this, EventType.ERROR);\n\n    /**\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * @type {string}\n     */\n    this.message = error.message;\n  }\n\n  if ( Event ) GeolocationError.__proto__ = Event;\n  GeolocationError.prototype = Object.create( Event && Event.prototype );\n  GeolocationError.prototype.constructor = GeolocationError;\n\n  return GeolocationError;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nvar Geolocation = (function (BaseObject) {\n  function Geolocation(opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    listen(\n      this, getChangeEventType(Property.PROJECTION),\n      this.handleProjectionChanged_, this);\n    listen(\n      this, getChangeEventType(Property.TRACKING),\n      this.handleTrackingChanged_, this);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  if ( BaseObject ) Geolocation.__proto__ = BaseObject;\n  Geolocation.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geolocation.prototype.constructor = Geolocation;\n\n  /**\n   * @inheritDoc\n   */\n  Geolocation.prototype.disposeInternal = function disposeInternal () {\n    this.setTracking(false);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    var projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleTrackingChanged_ = function handleTrackingChanged_ () {\n    if (GEOLOCATION) {\n      var tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  Geolocation.prototype.positionChange_ = function positionChange_ (position) {\n    var coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(Property.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    var projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    var geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  };\n\n  /**\n   * Triggered when the Geolocation returns an error.\n   * @event error\n   * @api\n   */\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  Geolocation.prototype.positionError_ = function positionError_ (error) {\n    this.setTracking(false);\n    this.dispatchEvent(new GeolocationError(error));\n  };\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracy = function getAccuracy () {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  };\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracyGeometry = function getAccuracyGeometry () {\n    return (\n      /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null)\n    );\n  };\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitude = function getAltitude () {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  };\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitudeAccuracy = function getAltitudeAccuracy () {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\n  };\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getHeading = function getHeading () {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  };\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION))\n    );\n  };\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getSpeed = function getSpeed () {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  };\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTracking = function getTracking () {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  };\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTrackingOptions = function getTrackingOptions () {\n    return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\n  };\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setProjection = function setProjection (projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTracking = function setTracking (tracking) {\n    this.set(Property.TRACKING, tracking);\n  };\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTrackingOptions = function setTrackingOptions (options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  };\n\n  return Geolocation;\n}(BaseObject));\n\n\nexport default Geolocation;\n\n//# sourceMappingURL=Geolocation.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = (function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n\n  var geoA = interpolate(0);\n  var geoB = interpolate(1);\n\n  var a = transform(geoA);\n  var b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  var geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  var stack = [b, a];\n  /** @type {Array<number>} */\n  var fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  var fractions = {};\n\n  var maxIterations = 1e5;\n  var geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  var geoProjection = getProjection('EPSG:4326');\n\n  var cosLat1 = Math.cos(toRadians(lat1));\n  var sinLat1 = Math.sin(toRadians(lat1));\n  var cosLat2 = Math.cos(toRadians(lat2));\n  var sinLat2 = Math.sin(toRadians(lat2));\n  var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      var D = frac * Math.acos(d);\n      var cosD = Math.cos(D);\n      var sinD = Math.sin(D);\n      var y = sinDeltaLon * cosLat2;\n      var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      var theta = Math.atan2(y, x);\n      var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n//# sourceMappingURL=geodesic.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nvar INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./PluggableMap.js\").default} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @api\n */\nvar Graticule = function Graticule(opt_options) {\n  var options = opt_options || {};\n\n  /**\n   * @type {import(\"./PluggableMap.js\").default}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?import(\"./events.js\").EventsKey}\n   * @private\n   */\n  this.postcomposeListenerKey_ = null;\n\n  /**\n   * @type {import(\"./proj/Projection.js\").default}\n   */\n  this.projection_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLat_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLon_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLat_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLon_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLatP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLonP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLatP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLonP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n  /**\n   * @type {Array<LineString>}\n   * @private\n   */\n  this.meridians_ = [];\n\n  /**\n   * @type {Array<LineString>}\n   * @private\n   */\n  this.parallels_ = [];\n\n  /**\n   * @type {Stroke}\n   * @private\n   */\n  this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n  /**\n   * @type {import(\"./proj.js\").TransformFunction|undefined}\n   * @private\n   */\n  this.fromLonLatTransform_ = undefined;\n\n  /**\n   * @type {import(\"./proj.js\").TransformFunction|undefined}\n   * @private\n   */\n  this.toLonLatTransform_ = undefined;\n\n  /**\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @private\n   */\n  this.projectionCenterLonLat_ = null;\n\n  /**\n   * @type {Array<GraticuleLabelDataType>}\n   * @private\n   */\n  this.meridiansLabels_ = null;\n\n  /**\n   * @type {Array<GraticuleLabelDataType>}\n   * @private\n   */\n  this.parallelsLabels_ = null;\n\n  if (options.showLabels == true) {\n\n    /**\n     * @type {null|function(number):string}\n     * @private\n     */\n    this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n    /**\n     * @type {function(number):string}\n     * @private\n     */\n    this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n    /**\n     * Longitude label position in fractions (0..1) of view extent. 0 means\n     * bottom, 1 means top.\n     * @type {number}\n     * @private\n     */\n    this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n      options.lonLabelPosition;\n\n    /**\n     * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n     * means right.\n     * @type {number}\n     * @private\n     */\n    this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n      options.latLabelPosition;\n\n    /**\n     * @type {Text}\n     * @private\n     */\n    this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textBaseline: 'bottom',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    /**\n     * @type {Text}\n     * @private\n     */\n    this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textAlign: 'end',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    this.meridiansLabels_ = [];\n    this.parallelsLabels_ = [];\n  }\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\n\n  this.setMap(options.map !== undefined ? options.map : null);\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addMeridian_ = function addMeridian_ (lon, minLat, maxLat, squaredTolerance, extent, index) {\n  var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.meridiansLabels_) {\n      var textPoint = this.getMeridianPoint_(lineString, extent, index);\n      this.meridiansLabels_[index] = {\n        geom: textPoint,\n        text: this.lonLabelFormatter_(lon)\n      };\n    }\n    this.meridians_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {LineString} lineString Meridian\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {Point} Meridian point.\n * @private\n */\nGraticule.prototype.getMeridianPoint_ = function getMeridianPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n  var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n  var lat = clamp(\n    extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n    clampedBottom, clampedTop);\n  var coordinate = [flatCoordinates[0], lat];\n  var point;\n  if (index in this.meridiansLabels_) {\n    point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addParallel_ = function addParallel_ (lat, minLon, maxLon, squaredTolerance, extent, index) {\n  var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.parallelsLabels_) {\n      var textPoint = this.getParallelPoint_(lineString, extent, index);\n      this.parallelsLabels_[index] = {\n        geom: textPoint,\n        text: this.latLabelFormatter_(lat)\n      };\n    }\n    this.parallels_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {LineString} lineString Parallels.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {Point} Parallel point.\n * @private\n */\nGraticule.prototype.getParallelPoint_ = function getParallelPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n  var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n  var lon = clamp(\n    extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n    clampedLeft, clampedRight);\n  var coordinate = [lon, flatCoordinates[1]];\n  var point;\n  if (index in this.parallelsLabels_) {\n    point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\nGraticule.prototype.createGraticule_ = function createGraticule_ (extent, center, resolution, squaredTolerance) {\n    var this$1 = this;\n\n\n  var interval = this.getInterval_(resolution);\n  if (interval == -1) {\n    this.meridians_.length = this.parallels_.length = 0;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = 0;\n    }\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = 0;\n    }\n    return;\n  }\n\n  var centerLonLat = this.toLonLatTransform_(center);\n  var centerLon = centerLonLat[0];\n  var centerLat = centerLonLat[1];\n  var maxLines = this.maxLines_;\n  var cnt, idx, lat, lon;\n\n  var validExtent = [\n    Math.max(extent[0], this.minLonP_),\n    Math.max(extent[1], this.minLatP_),\n    Math.min(extent[2], this.maxLonP_),\n    Math.min(extent[3], this.maxLatP_)\n  ];\n\n  validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n  var maxLat = validExtent[3];\n  var maxLon = validExtent[2];\n  var minLat = validExtent[1];\n  var minLon = validExtent[0];\n\n  // Create meridians\n\n  centerLon = Math.floor(centerLon / interval) * interval;\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lon != this.minLon_ && cnt++ < maxLines) {\n    lon = Math.max(lon - interval, this$1.minLon_);\n    idx = this$1.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  cnt = 0;\n  while (lon != this.maxLon_ && cnt++ < maxLines) {\n    lon = Math.min(lon + interval, this$1.maxLon_);\n    idx = this$1.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  this.meridians_.length = idx;\n  if (this.meridiansLabels_) {\n    this.meridiansLabels_.length = idx;\n  }\n\n  // Create parallels\n\n  centerLat = Math.floor(centerLat / interval) * interval;\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lat != this.minLat_ && cnt++ < maxLines) {\n    lat = Math.max(lat - interval, this$1.minLat_);\n    idx = this$1.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  cnt = 0;\n  while (lat != this.maxLat_ && cnt++ < maxLines) {\n    lat = Math.min(lat + interval, this$1.maxLat_);\n    idx = this$1.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  this.parallels_.length = idx;\n  if (this.parallelsLabels_) {\n    this.parallelsLabels_.length = idx;\n  }\n\n};\n\n/**\n * @param {number} resolution Resolution.\n * @return {number} The interval in degrees.\n * @private\n */\nGraticule.prototype.getInterval_ = function getInterval_ (resolution) {\n    var this$1 = this;\n\n  var centerLon = this.projectionCenterLonLat_[0];\n  var centerLat = this.projectionCenterLonLat_[1];\n  var interval = -1;\n  var target = Math.pow(this.targetSize_ * resolution, 2);\n  /** @type {Array<number>} **/\n  var p1 = [];\n  /** @type {Array<number>} **/\n  var p2 = [];\n  for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\n    var delta = this$1.intervals_[i] / 2;\n    p1[0] = centerLon - delta;\n    p1[1] = centerLat - delta;\n    p2[0] = centerLon + delta;\n    p2[1] = centerLat + delta;\n    this$1.fromLonLatTransform_(p1, p1);\n    this$1.fromLonLatTransform_(p2, p2);\n    var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n    if (dist <= target) {\n      break;\n    }\n    interval = this$1.intervals_[i];\n  }\n  return interval;\n};\n\n/**\n * Get the map associated with this graticule.\n * @return {import(\"./PluggableMap.js\").default} The map.\n * @api\n */\nGraticule.prototype.getMap = function getMap () {\n  return this.map_;\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {LineString} The meridian line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getMeridian_ = function getMeridian_ (lon, minLat, maxLat, squaredTolerance, index) {\n  var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n  var lineString = this.meridians_[index];\n  if (!lineString) {\n    lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of meridians.Meridians are lines of equal longitude.\n * @return {Array<LineString>} The meridians.\n * @api\n */\nGraticule.prototype.getMeridians = function getMeridians () {\n  return this.meridians_;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {LineString} The parallel line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getParallel_ = function getParallel_ (lat, minLon, maxLon, squaredTolerance, index) {\n  var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n  var lineString = this.parallels_[index];\n  if (!lineString) {\n    lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of parallels.Parallels are lines of equal latitude.\n * @return {Array<LineString>} The parallels.\n * @api\n */\nGraticule.prototype.getParallels = function getParallels () {\n  return this.parallels_;\n};\n\n/**\n * @param {import(\"./render/Event.js\").default} e Event.\n * @private\n */\nGraticule.prototype.handlePostCompose_ = function handlePostCompose_ (e) {\n    var this$1 = this;\n\n  var vectorContext = e.vectorContext;\n  var frameState = e.frameState;\n  var extent = frameState.extent;\n  var viewState = frameState.viewState;\n  var center = viewState.center;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var squaredTolerance =\n      resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n  var updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n  if (updateProjectionInfo) {\n    this.updateProjectionInfo_(projection);\n  }\n\n  this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n  // Draw the lines\n  vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n  var i, l, line;\n  for (i = 0, l = this.meridians_.length; i < l; ++i) {\n    line = this$1.meridians_[i];\n    vectorContext.drawGeometry(line);\n  }\n  for (i = 0, l = this.parallels_.length; i < l; ++i) {\n    line = this$1.parallels_[i];\n    vectorContext.drawGeometry(line);\n  }\n  var labelData;\n  if (this.meridiansLabels_) {\n    for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n      labelData = this$1.meridiansLabels_[i];\n      this$1.lonLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this$1.lonLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n  if (this.parallelsLabels_) {\n    for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n      labelData = this$1.parallelsLabels_[i];\n      this$1.latLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this$1.latLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n};\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @private\n */\nGraticule.prototype.updateProjectionInfo_ = function updateProjectionInfo_ (projection) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n\n  var worldExtent = projection.getWorldExtent();\n  var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n  this.maxLat_ = worldExtent[3];\n  this.maxLon_ = worldExtent[2];\n  this.minLat_ = worldExtent[1];\n  this.minLon_ = worldExtent[0];\n\n  this.maxLatP_ = worldExtentP[3];\n  this.maxLonP_ = worldExtentP[2];\n  this.minLatP_ = worldExtentP[1];\n  this.minLonP_ = worldExtentP[0];\n\n  this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n  this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n  this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n  this.projection_ = projection;\n};\n\n/**\n * Set the map for this graticule.The graticule will be rendered on the\n * provided map.\n * @param {import(\"./PluggableMap.js\").default} map Map.\n * @api\n */\nGraticule.prototype.setMap = function setMap (map) {\n  if (this.map_) {\n    unlistenByKey(this.postcomposeListenerKey_);\n    this.postcomposeListenerKey_ = null;\n    this.map_.render();\n  }\n  if (map) {\n    this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n    map.render();\n  }\n  this.map_ = map;\n};\n\nexport default Graticule;\n\n//# sourceMappingURL=Graticule.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = (function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = (function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = (function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = (function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = (function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = (function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = (function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = (function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var this$1 = this;\n\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this$1.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this$1, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var this$1 = this;\n\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this$1.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this$1.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this$1.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = (function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = (function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n    var this$1 = this;\n\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this$1.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this$1.getLeftChildIndex_(index);\n    var rIndex = this$1.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this$1.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n    var this$1 = this;\n\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this$1.queuedElements_[this$1.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = (function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var this$1 = this;\n\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this$1.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this$1.tilesLoadingKeys_)) {\n        this$1.tilesLoadingKeys_[tileKey] = true;\n        ++this$1.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = (function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this$1.constrainResolution(\n          this$1.maxResolution_, options.zoom - this$1.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    var this$1 = this;\n\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this$1.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    var this$1 = this;\n\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this$1.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this$1.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this$1.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this$1.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this$1.animations_[i] = null;\n        this$1.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = (function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = (function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    var this$1 = this;\n\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this$1.listenerKeys_) {\n      this$1.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this$1.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this$1.handleLayerChange_, this$1),\n        listen(layer, EventType.CHANGE, this$1.handleLayerChange_, this$1)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = (function (BaseObject) {\n  function PluggableMap(options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this$1.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this$1.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this$1.handleMapBrowserEvent, this$1);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n    var this$1 = this;\n\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this$1, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    var this$1 = this;\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this$1.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = (function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    var this$1 = this;\n\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this$1.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = (function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = (function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    var this$1 = this;\n\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this$1.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this$1.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    var this$1 = this;\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this$1.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = (function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = (function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = (function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = (function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = (function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = (function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = (function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = (function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = (function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = (function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = (function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = (function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = (function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = (function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = (function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = (function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = (function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = (function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = (function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = (function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var this$1 = this;\n\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this$1);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      this$1.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = (function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this$1.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this$1.imageAnchorY_;\n      if (rotation !== 0 || this$1.imageScale_ != 1) {\n        var centerX = x + this$1.imageAnchorX_;\n        var centerY = y + this$1.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this$1.imageScale_, this$1.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this$1.image_, this$1.imageOriginX_, this$1.imageOriginY_,\n        this$1.imageWidth_, this$1.imageHeight_, x, y,\n        this$1.imageWidth_, this$1.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this$1.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this$1.textOffsetY_;\n      if (rotation !== 0 || this$1.textScale_ != 1) {\n        var localTransform = composeTransform(this$1.tmpLocalTransform_,\n          x, y,\n          this$1.textScale_, this$1.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this$1.textStrokeState_) {\n        context.strokeText(this$1.text_, x, y);\n      }\n      if (this$1.textFillState_) {\n        context.fillText(this$1.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var this$1 = this;\n\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    var this$1 = this;\n\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this$1.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n    var this$1 = this;\n\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this$1.cache_) {\n      var iconImage = this$1.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this$1.cache_[key];\n        --this$1.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = (function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    var this$1 = this;\n\n    for (var key in this$1.layerRenderers_) {\n      this$1.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var this$1 = this;\n\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this$1.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this$1, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this$1.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this$1.removeUnusedLayerRenderers_.bind(this$1))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = (function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this$1.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = (function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = (function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = (function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    var this$1 = this;\n\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this$1.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var this$1 = this;\n\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this$1.getTile(z, x, y, pixelRatio, projection);\n        if (this$1.isDrawableTile_(tile)) {\n          var uid = getUid(this$1);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this$1.newTiles_ && (inTransition || this$1.renderedTiles.indexOf(tile) === -1)) {\n              this$1.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this$1.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this$1.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = (function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n    var this$1 = this;\n\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this$1.coordinates[myEnd++] = lastCoord[0];\n          this$1.coordinates[myEnd++] = lastCoord[1];\n        }\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    var this$1 = this;\n\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this$1.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    var this$1 = this;\n\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this$1.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this$1.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this$1.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this$1);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this$1.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this$1.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this$1.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this$1.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var this$1 = this;\n\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this$1.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = (function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = (function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = (function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this$1.coordinates.length;\n      var myEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this$1.instructions.push(moveToLineToInstruction);\n      this$1.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this$1.instructions.push(closePathInstruction);\n        this$1.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = (function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    var this$1 = this;\n\n    for (var zIndex in this$1.replaysByZIndex_) {\n      var candidates = this$1.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    var this$1 = this;\n\n    for (var zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = (function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this$1.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this$1.coordinates.length;\n        flatOffset = ends[o];\n        this$1.drawChars_(begin, end, this$1.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this$1.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = (function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = (function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this$1.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this$1.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this$1.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = (function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = (function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/webgl/Shader\n */\nimport {abstract} from '../util.js';\n\n/**\n * @abstract\n */\nvar WebGLShader = function WebGLShader(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = function isAnimated () {\n  return false;\n};\n\n/**\n * @abstract\n * @return {number} Type.\n */\nWebGLShader.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * @return {string} Source.\n */\nWebGLShader.prototype.getSource = function getSource () {\n  return this.source_;\n};\n\n\nexport default WebGLShader;\n\n//# sourceMappingURL=Shader.js.map","/**\n * @module ol/webgl/Fragment\n */\n\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLFragment = (function (WebGLShader) {\n  function WebGLFragment(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLFragment.__proto__ = WebGLShader;\n  WebGLFragment.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLFragment.prototype.constructor = WebGLFragment;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLFragment.prototype.getType = function getType () {\n    return FRAGMENT_SHADER;\n  };\n\n  return WebGLFragment;\n}(WebGLShader));\n\n\nexport default WebGLFragment;\n\n//# sourceMappingURL=Fragment.js.map","/**\n * @module ol/webgl/Vertex\n */\n\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLVertex = (function (WebGLShader) {\n  function WebGLVertex(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLVertex.__proto__ = WebGLShader;\n  WebGLVertex.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLVertex.prototype.constructor = WebGLVertex;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVertex.prototype.getType = function getType () {\n    return VERTEX_SHADER;\n  };\n\n  return WebGLVertex;\n}(WebGLShader));\n\n\nexport default WebGLVertex;\n\n//# sourceMappingURL=Vertex.js.map","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_radius' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/render/webgl/Replay\n */\nimport {abstract} from '../../util.js';\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\nvar WebGLReplay = (function (VectorContext) {\n  function WebGLReplay(tolerance, maxExtent) {\n    VectorContext.call(this);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * The origin of the coordinate system for the point coordinates sent to\n     * the GPU. To eliminate jitter caused by precision problems in the GPU\n     * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n     * Engine Design for Virtual Globes\" book.\n     * @protected\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.origin = getCenter(maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.projectionMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.indices = [];\n\n    /**\n     * @protected\n     * @type {?import(\"../../webgl/Buffer.js\").default}\n     */\n    this.indicesBuffer = null;\n\n    /**\n     * Start index per feature (the index).\n     * @protected\n     * @type {Array<number>}\n     */\n    this.startIndices = [];\n\n    /**\n     * Start index per feature (the feature).\n     * @protected\n     * @type {Array<import(\"../../Feature.js\").default|import(\"../Feature.js\").default>}\n     */\n    this.startIndicesFeature = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.vertices = [];\n\n    /**\n     * @protected\n     * @type {?import(\"../../webgl/Buffer.js\").default}\n     */\n    this.verticesBuffer = null;\n\n    /**\n     * Optional parameter for PolygonReplay instances.\n     * @protected\n     * @type {import(\"./LineStringReplay.js\").default|undefined}\n     */\n    this.lineStringReplay = undefined;\n\n  }\n\n  if ( VectorContext ) WebGLReplay.__proto__ = VectorContext;\n  WebGLReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLReplay.prototype.constructor = WebGLReplay;\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   */\n  WebGLReplay.prototype.finish = function finish (context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import(\"./circlereplay/defaultshader/Locations.js\").default|\n     import(\"./linestringreplay/defaultshader/Locations.js\").default|\n     import(\"./polygonreplay/defaultshader/Locations.js\").default|\n     import(\"./texturereplay/defaultshader/Locations.js\").default} Locations.\n   */\n  WebGLReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"./circlereplay/defaultshader/Locations.js\").default|\n     import(\"./linestringreplay/defaultshader/Locations.js\").default|\n     import(\"./polygonreplay/defaultshader/Locations.js\").default|\n     import(\"./texturereplay/defaultshader/Locations.js\").default} locations Locations.\n   */\n  WebGLReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} hitDetection Hit detection mode.\n   */\n  WebGLReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    return abstract();\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplay = function drawHitDetectionReplay (gl, context, skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n    if (!oneByOne) {\n      // draw all hit-detection features in \"once\" (by texture group)\n      return this.drawHitDetectionReplayAll(gl, context,\n        skippedFeaturesHash, featureCallback);\n    } else {\n      // draw hit-detection features one by one\n      return this.drawHitDetectionReplayOneByOne(gl, context,\n        skippedFeaturesHash, featureCallback, opt_hitExtent);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayAll = function drawHitDetectionReplayAll (gl, context, skippedFeaturesHash, featureCallback) {\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n    var result = featureCallback(null);\n    if (result) {\n      return result;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    var gl = context.getGL();\n    var tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n        tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n    if (this.lineStringReplay) {\n      tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n      tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n      tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n      tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n      tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n      tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n      tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n      tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n      gl.enable(gl.STENCIL_TEST);\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilMask(255);\n      gl.stencilFunc(gl.ALWAYS, 1, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n      this.lineStringReplay.replay(context,\n        center, resolution, rotation, size, pixelRatio,\n        opacity, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n\n      gl.stencilMask(0);\n      gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n    context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n    var locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n    // set the \"uniform\" values\n    var projectionMatrix = resetTransform(this.projectionMatrix_);\n    scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n    rotateTransform(projectionMatrix, -rotation);\n    translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n    var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, projectionMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    gl.uniform1f(locations.u_opacity, opacity);\n\n    // draw!\n    var result;\n    if (featureCallback === undefined) {\n      this.drawReplay(gl, context, skippedFeaturesHash, false);\n    } else {\n      // draw feature by feature for the hit-detection\n      result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n    }\n\n    // disable the vertex attrib arrays\n    this.shutDownProgram(gl, locations);\n\n    if (this.lineStringReplay) {\n      if (!tmpStencil) {\n        gl.disable(gl.STENCIL_TEST);\n      }\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n        /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n      gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n      gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n        /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n    }\n\n    return result;\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  WebGLReplay.prototype.drawElements = function drawElements (gl, context, start, end) {\n    var elementType = context.hasOESElementIndexUint ?\n      UNSIGNED_INT : UNSIGNED_SHORT;\n    var elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n    var numItems = end - start;\n    var offsetInBytes = start * elementSize;\n    gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n  };\n\n  return WebGLReplay;\n}(VectorContext));\n\n\nexport default WebGLReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport var EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport var triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  var area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nvar BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n\nvar WebGLBuffer = function WebGLBuffer(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n};\n\n/**\n * @return {Array<number>} Array.\n */\nWebGLBuffer.prototype.getArray = function getArray () {\n  return this.arr_;\n};\n\n/**\n * @return {number} Usage.\n */\nWebGLBuffer.prototype.getUsage = function getUsage () {\n  return this.usage_;\n};\n\nexport default WebGLBuffer;\n\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from './circlereplay/defaultshader.js';\nimport Locations from './circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from './Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLCircleReplay = (function (WebGLReplay) {\n  function WebGLCircleReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"./circlereplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<Array<number>|number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.radius_ = 0;\n\n    /**\n     * @private\n     * @type {{fillColor: (Array<number>|null),\n     *         strokeColor: (Array<number>|null),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineWidth: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      strokeColor: null,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineWidth: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLCircleReplay.__proto__ = WebGLReplay;\n  WebGLCircleReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLCircleReplay.prototype.constructor = WebGLCircleReplay;\n\n  /**\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLCircleReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    var n = numVertices / 4;\n    var i, ii;\n    for (i = offset, ii = end; i < ii; i += stride) {\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 0;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 1;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 2;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 3;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 1;\n      this$1.indices[numIndices++] = n + 2;\n\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 3;\n      this$1.indices[numIndices++] = n;\n\n      n += 4;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var radius = circleGeometry.getRadius();\n    var stride = circleGeometry.getStride();\n    if (radius) {\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n\n      this.radius_ = radius;\n      var flatCoordinates = circleGeometry.getFlatCoordinates();\n      flatCoordinates = translate(flatCoordinates, 0, 2,\n        stride, -this.origin[0], -this.origin[1]);\n      this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n    } else {\n      if (this.state_.changed) {\n        this.styles_.pop();\n        if (this.styles_.length) {\n          var lastState = this.styles_[this.styles_.length - 1];\n          this.state_.fillColor = /** @type {Array<number>} */ (lastState[0]);\n          this.state_.strokeColor = /** @type {Array<number>} */ (lastState[1]);\n          this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n          this.state_.changed = false;\n        }\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLCircleReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    // We only delete our stuff here. The shaders and the program may\n    // be used by other CircleReplay instances (for other layers). And\n    // they will be deleted when disposing of the import(\"../../webgl/Context.js\").WebGLContext\n    // object.\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 16, 0);\n\n    gl.enableVertexAttribArray(locations.a_instruction);\n    gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n      false, 16, 8);\n\n    gl.enableVertexAttribArray(locations.a_radius);\n    gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n      false, 16, 12);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_instruction);\n    gl.disableVertexAttribArray(locations.a_radius);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n        this$1.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n          /** @type {number} */ (nextStyle[2]));\n        this$1.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n      this$1.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLCircleReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n      this$1.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   */\n  WebGLCircleReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   * @param {number} lineWidth Line width.\n   */\n  WebGLCircleReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth) {\n    gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleColor, strokeStyleWidth;\n    if (strokeStyle) {\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      this.state_.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash : DEFAULT_LINEDASH;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n      strokeStyleColor = strokeStyle.getColor();\n      if (!(strokeStyleColor instanceof CanvasGradient) &&\n          !(strokeStyleColor instanceof CanvasPattern)) {\n        strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n          return i != 3 ? c / 255 : c;\n        }) || DEFAULT_STROKESTYLE;\n      } else {\n        strokeStyleColor = DEFAULT_STROKESTYLE;\n      }\n      strokeStyleWidth = strokeStyle.getWidth();\n      strokeStyleWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : DEFAULT_LINEWIDTH;\n    } else {\n      strokeStyleColor = [0, 0, 0, 0];\n      strokeStyleWidth = 0;\n    }\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth) {\n      this.state_.changed = true;\n      this.state_.fillColor = fillStyleColor;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n    }\n  };\n\n  return WebGLCircleReplay;\n}(WebGLReplay));\n\n\nexport default WebGLCircleReplay;\n\n//# sourceMappingURL=CircleReplay.js.map","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/webgl/Context\n */\nimport {getUid} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n */\nvar WebGLContext = (function (Disposable) {\n  function WebGLContext(canvas, gl) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, WebGLShader>}\n     */\n    this.shaderCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, WebGLProgram>}\n     */\n    this.programCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.hitDetectionFramebuffer_ = null;\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.hitDetectionTexture_ = null;\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.hitDetectionRenderbuffer_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n    // use the OES_element_index_uint extension if available\n    if (this.hasOESElementIndexUint) {\n      gl.getExtension('OES_element_index_uint');\n    }\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n  }\n\n  if ( Disposable ) WebGLContext.__proto__ = Disposable;\n  WebGLContext.prototype = Object.create( Disposable && Disposable.prototype );\n  WebGLContext.prototype.constructor = WebGLContext;\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {number} target Target.\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  WebGLContext.prototype.bindBuffer = function bindBuffer (target, buf) {\n    var gl = this.getGL();\n    var arr = buf.getArray();\n    var bufferKey = getUid(buf);\n    if (bufferKey in this.bufferCache_) {\n      var bufferCacheEntry = this.bufferCache_[bufferKey];\n      gl.bindBuffer(target, bufferCacheEntry.buffer);\n    } else {\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(target, buffer);\n      var /** @type {ArrayBufferView} */ arrayBuffer;\n      if (target == ARRAY_BUFFER) {\n        arrayBuffer = new Float32Array(arr);\n      } else if (target == ELEMENT_ARRAY_BUFFER) {\n        arrayBuffer = this.hasOESElementIndexUint ?\n          new Uint32Array(arr) : new Uint16Array(arr);\n      }\n      gl.bufferData(target, arrayBuffer, buf.getUsage());\n      this.bufferCache_[bufferKey] = {\n        buf: buf,\n        buffer: buffer\n      };\n    }\n  };\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  WebGLContext.prototype.deleteBuffer = function deleteBuffer (buf) {\n    var gl = this.getGL();\n    var bufferKey = getUid(buf);\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (!gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.buffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLContext.prototype.disposeInternal = function disposeInternal () {\n    var this$1 = this;\n\n    unlistenAll(this.canvas_);\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      for (var key in this$1.bufferCache_) {\n        gl.deleteBuffer(this$1.bufferCache_[key].buffer);\n      }\n      for (var key$1 in this$1.programCache_) {\n        gl.deleteProgram(this$1.programCache_[key$1]);\n      }\n      for (var key$2 in this$1.shaderCache_) {\n        gl.deleteShader(this$1.shaderCache_[key$2]);\n      }\n      // delete objects for hit-detection\n      gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n      gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n      gl.deleteTexture(this.hitDetectionTexture_);\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  WebGLContext.prototype.getCanvas = function getCanvas () {\n    return this.canvas_;\n  };\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  WebGLContext.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * Get the frame buffer for hit detection.\n   * @return {WebGLFramebuffer} The hit detection frame buffer.\n   */\n  WebGLContext.prototype.getHitDetectionFramebuffer = function getHitDetectionFramebuffer () {\n    if (!this.hitDetectionFramebuffer_) {\n      this.initHitDetectionFramebuffer_();\n    }\n    return this.hitDetectionFramebuffer_;\n  };\n\n  /**\n   * Get shader from the cache if it's in the cache. Otherwise, create\n   * the WebGL shader, compile it, and add entry to cache.\n   * @param {import(\"./Shader.js\").default} shaderObject Shader object.\n   * @return {WebGLShader} Shader.\n   */\n  WebGLContext.prototype.getShader = function getShader (shaderObject) {\n    var shaderKey = getUid(shaderObject);\n    if (shaderKey in this.shaderCache_) {\n      return this.shaderCache_[shaderKey];\n    } else {\n      var gl = this.getGL();\n      var shader = gl.createShader(shaderObject.getType());\n      gl.shaderSource(shader, shaderObject.getSource());\n      gl.compileShader(shader);\n      this.shaderCache_[shaderKey] = shader;\n      return shader;\n    }\n  };\n\n  /**\n   * Get the program from the cache if it's in the cache. Otherwise create\n   * the WebGL program, attach the shaders to it, and add an entry to the\n   * cache.\n   * @param {import(\"./Fragment.js\").default} fragmentShaderObject Fragment shader.\n   * @param {import(\"./Vertex.js\").default} vertexShaderObject Vertex shader.\n   * @return {WebGLProgram} Program.\n   */\n  WebGLContext.prototype.getProgram = function getProgram (fragmentShaderObject, vertexShaderObject) {\n    var programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n    if (programKey in this.programCache_) {\n      return this.programCache_[programKey];\n    } else {\n      var gl = this.getGL();\n      var program = gl.createProgram();\n      gl.attachShader(program, this.getShader(fragmentShaderObject));\n      gl.attachShader(program, this.getShader(vertexShaderObject));\n      gl.linkProgram(program);\n      this.programCache_[programKey] = program;\n      return program;\n    }\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    clear(this.bufferCache_);\n    clear(this.shaderCache_);\n    clear(this.programCache_);\n    this.currentProgram_ = null;\n    this.hitDetectionFramebuffer_ = null;\n    this.hitDetectionTexture_ = null;\n    this.hitDetectionRenderbuffer_ = null;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n  };\n\n  /**\n   * Creates a 1x1 pixel framebuffer for the hit-detection.\n   * @private\n   */\n  WebGLContext.prototype.initHitDetectionFramebuffer_ = function initHitDetectionFramebuffer_ () {\n    var gl = this.gl_;\n    var framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    var texture = createEmptyTexture(gl, 1, 1);\n    var renderbuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER, renderbuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    this.hitDetectionFramebuffer_ = framebuffer;\n    this.hitDetectionTexture_ = texture;\n    this.hitDetectionRenderbuffer_ = renderbuffer;\n  };\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  WebGLContext.prototype.useProgram = function useProgram (program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      var gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      return true;\n    }\n  };\n\n  return WebGLContext;\n}(Disposable));\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n\n//# sourceMappingURL=Context.js.map","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {abstract, getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from './texturereplay/defaultshader.js';\nimport Locations from './texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from './Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\nvar WebGLTextureReplay = (function (WebGLReplay) {\n  function WebGLTextureReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorY = undefined;\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.groupIndices = [];\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.hitDetectionGroupIndices = [];\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.height = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageHeight = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageWidth = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"./texturereplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.opacity = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originY = undefined;\n\n    /**\n     * @protected\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.rotation = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.scale = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.width = undefined;\n  }\n\n  if ( WebGLReplay ) WebGLTextureReplay.__proto__ = WebGLReplay;\n  WebGLTextureReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLTextureReplay.prototype.constructor = WebGLTextureReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var textures = this.getTextures(true);\n    var gl = context.getGL();\n    return function() {\n      if (!gl.isContextLost()) {\n        var i, ii;\n        for (i = 0, ii = textures.length; i < ii; ++i) {\n          gl.deleteTexture(textures[i]);\n        }\n      }\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {number} My end.\n   * @protected\n   */\n  WebGLTextureReplay.prototype.drawCoordinates = function drawCoordinates (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    var anchorX = /** @type {number} */ (this.anchorX);\n    var anchorY = /** @type {number} */ (this.anchorY);\n    var height = /** @type {number} */ (this.height);\n    var imageHeight = /** @type {number} */ (this.imageHeight);\n    var imageWidth = /** @type {number} */ (this.imageWidth);\n    var opacity = /** @type {number} */ (this.opacity);\n    var originX = /** @type {number} */ (this.originX);\n    var originY = /** @type {number} */ (this.originY);\n    var rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n    // this.rotation_ is anti-clockwise, but rotation is clockwise\n    var rotation = /** @type {number} */ (-this.rotation);\n    var scale = /** @type {number} */ (this.scale);\n    var width = /** @type {number} */ (this.width);\n    var cos = Math.cos(rotation);\n    var sin = Math.sin(rotation);\n    var numIndices = this.indices.length;\n    var numVertices = this.vertices.length;\n    var i, n, offsetX, offsetY, x, y;\n    for (i = offset; i < end; i += stride) {\n      x = flatCoordinates[i] - this$1.origin[0];\n      y = flatCoordinates[i + 1] - this$1.origin[1];\n\n      // There are 4 vertices per [x, y] point, one for each corner of the\n      // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n      // WebGL supported Geometry Shaders (which can emit new vertices), but that\n      // is not currently the case.\n      //\n      // And each vertex includes 8 values: the x and y coordinates, the x and\n      // y offsets used to calculate the position of the corner, the u and\n      // v texture coordinates for the corner, the opacity, and whether the\n      // the image should be rotated with the view (rotateWithView).\n\n      n = numVertices / 8;\n\n      // bottom-left corner\n      offsetX = -scale * anchorX;\n      offsetY = -scale * (height - anchorY);\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = originX / imageWidth;\n      this$1.vertices[numVertices++] = (originY + height) / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // bottom-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = -scale * (height - anchorY);\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = (originX + width) / imageWidth;\n      this$1.vertices[numVertices++] = (originY + height) / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // top-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = scale * anchorY;\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = (originX + width) / imageWidth;\n      this$1.vertices[numVertices++] = originY / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // top-left corner\n      offsetX = -scale * anchorX;\n      offsetY = scale * anchorY;\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = originX / imageWidth;\n      this$1.vertices[numVertices++] = originY / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 1;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 3;\n    }\n\n    return numVertices;\n  };\n\n  /**\n   * @protected\n   * @param {Array<WebGLTexture>} textures Textures.\n   * @param {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n   * @param {!Object<string, WebGLTexture>} texturePerImage Texture cache.\n   * @param {WebGLRenderingContext} gl Gl.\n   */\n  WebGLTextureReplay.prototype.createTextures = function createTextures (textures, images, texturePerImage, gl) {\n    var texture, image, uid, i;\n    var ii = images.length;\n    for (i = 0; i < ii; ++i) {\n      image = images[i];\n\n      uid = getUid(image);\n      if (uid in texturePerImage) {\n        texture = texturePerImage[uid];\n      } else {\n        texture = createTexture(\n          gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n        texturePerImage[uid] = texture;\n      }\n      textures[i] = texture;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations) {\n      locations = new Locations(gl, program);\n      this.defaultLocations = locations;\n    } else {\n      locations = this.defaultLocations;\n    }\n\n    // use the program (FIXME: use the return value)\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 32, 0);\n\n    gl.enableVertexAttribArray(locations.a_offsets);\n    gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n      false, 32, 8);\n\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n      false, 32, 16);\n\n    gl.enableVertexAttribArray(locations.a_opacity);\n    gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n      false, 32, 24);\n\n    gl.enableVertexAttribArray(locations.a_rotateWithView);\n    gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n      false, 32, 28);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_offsets);\n    gl.disableVertexAttribArray(locations.a_texCoord);\n    gl.disableVertexAttribArray(locations.a_opacity);\n    gl.disableVertexAttribArray(locations.a_rotateWithView);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    var textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n    var groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n    } else {\n      var i, ii, start;\n      for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n        gl.bindTexture(TEXTURE_2D, textures[i]);\n        var end = groupIndices[i];\n        this$1.drawElements(gl, context, start, end);\n        start = end;\n      }\n    }\n  };\n\n  /**\n   * Draw the replay while paying attention to skipped features.\n   *\n   * This functions creates groups of features that can be drawn to together,\n   * so that the number of `drawElements` calls is minimized.\n   *\n   * For example given the following texture groups:\n   *\n   *    Group 1: A B C\n   *    Group 2: D [E] F G\n   *\n   * If feature E should be skipped, the following `drawElements` calls will be\n   * made:\n   *\n   *    drawElements with feature A, B and C\n   *    drawElements with feature D\n   *    drawElements with feature F and G\n   *\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *  to skip.\n   * @param {Array<WebGLTexture>} textures Textures.\n   * @param {Array<number>} groupIndices Texture group indices.\n   */\n  WebGLTextureReplay.prototype.drawReplaySkipping = function drawReplaySkipping (gl, context, skippedFeaturesHash, textures, groupIndices) {\n    var this$1 = this;\n\n    var featureIndex = 0;\n\n    var i, ii;\n    for (i = 0, ii = textures.length; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      var groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n      var groupEnd = groupIndices[i];\n\n      var start = groupStart;\n      var end = groupStart;\n      while (featureIndex < this.startIndices.length &&\n          this.startIndices[featureIndex] <= groupEnd) {\n        var feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] !== undefined) {\n          // feature should be skipped\n          if (start !== end) {\n            // draw the features so far\n            this$1.drawElements(gl, context, start, end);\n          }\n          // continue with the next feature\n          start = (featureIndex === this$1.startIndices.length - 1) ?\n            groupEnd : this$1.startIndices[featureIndex + 1];\n          end = start;\n        } else {\n          // the feature is not skipped, augment the end index\n          end = (featureIndex === this$1.startIndices.length - 1) ?\n            groupEnd : this$1.startIndices[featureIndex + 1];\n        }\n        featureIndex++;\n      }\n\n      if (start !== end) {\n        // draw the remaining features (in case there was no skipped feature\n        // in this texture group, all features of a group are drawn together)\n        this$1.drawElements(gl, context, start, end);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, groupStart, start, end, feature;\n    var featureIndex = this.startIndices.length - 1;\n    var hitDetectionTextures = this.getHitDetectionTextures();\n    for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n      gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n      groupStart = (i > 0) ? this$1.hitDetectionGroupIndices[i - 1] : 0;\n      end = this$1.hitDetectionGroupIndices[i];\n\n      // draw all features for this texture group\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n\n        end = start;\n        featureIndex--;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.finish = function finish (context) {\n    this.anchorX = undefined;\n    this.anchorY = undefined;\n    this.height = undefined;\n    this.imageHeight = undefined;\n    this.imageWidth = undefined;\n    this.indices = null;\n    this.opacity = undefined;\n    this.originX = undefined;\n    this.originY = undefined;\n    this.rotateWithView = undefined;\n    this.rotation = undefined;\n    this.scale = undefined;\n    this.vertices = null;\n    this.width = undefined;\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {boolean=} opt_all Return hit detection textures with regular ones.\n   * @return {Array<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getTextures = function getTextures (opt_all) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @return {Array<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return abstract();\n  };\n\n  return WebGLTextureReplay;\n}(WebGLReplay));\n\n\nexport default WebGLTextureReplay;\n\n//# sourceMappingURL=TextureReplay.js.map","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid} from '../../util.js';\nimport WebGLTextureReplay from './TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLImageReplay = (function (WebGLTextureReplay) {\n  function WebGLImageReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.images_ = [];\n\n    /**\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.hitDetectionImages_ = [];\n\n    /**\n     * @type {Array<WebGLTexture>}\n     * @private\n     */\n    this.textures_ = [];\n\n    /**\n     * @type {Array<WebGLTexture>}\n     * @private\n     */\n    this.hitDetectionTextures_ = [];\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLImageReplay.__proto__ = WebGLTextureReplay;\n  WebGLImageReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLImageReplay.prototype.constructor = WebGLImageReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices.push(this.indices.length);\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    var indices = this.indices;\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(indices);\n\n    // create textures\n    /** @type {Object<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n      texturePerImage, gl);\n\n    this.images_ = null;\n    this.hitDetectionImages_ = null;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    var anchor = imageStyle.getAnchor();\n    var image = imageStyle.getImage(1);\n    var imageSize = imageStyle.getImageSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var opacity = imageStyle.getOpacity();\n    var origin = imageStyle.getOrigin();\n    var rotateWithView = imageStyle.getRotateWithView();\n    var rotation = imageStyle.getRotation();\n    var size = imageStyle.getSize();\n    var scale = imageStyle.getScale();\n\n    var currentImage;\n    if (this.images_.length === 0) {\n      this.images_.push(image);\n    } else {\n      currentImage = this.images_[this.images_.length - 1];\n      if (getUid(currentImage) != getUid(image)) {\n        this.groupIndices.push(this.indices.length);\n        this.images_.push(image);\n      }\n    }\n\n    if (this.hitDetectionImages_.length === 0) {\n      this.hitDetectionImages_.push(hitDetectionImage);\n    } else {\n      currentImage =\n          this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n      if (getUid(currentImage) != getUid(hitDetectionImage)) {\n        this.hitDetectionGroupIndices.push(this.indices.length);\n        this.hitDetectionImages_.push(hitDetectionImage);\n      }\n    }\n\n    this.anchorX = anchor[0];\n    this.anchorY = anchor[1];\n    this.height = size[1];\n    this.imageHeight = imageSize[1];\n    this.imageWidth = imageSize[0];\n    this.opacity = opacity;\n    this.originX = origin[0];\n    this.originY = origin[1];\n    this.rotation = rotation;\n    this.rotateWithView = rotateWithView;\n    this.scale = scale;\n    this.width = size[0];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getTextures = function getTextures (opt_all) {\n    return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.hitDetectionTextures_;\n  };\n\n  return WebGLImageReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  var lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n\n//# sourceMappingURL=topology.js.map","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_direction' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from './Replay.js';\nimport {fragment, vertex} from './linestringreplay/defaultshader.js';\nimport Locations from './linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\nvar WebGLLineStringReplay = (function (WebGLReplay) {\n  function WebGLLineStringReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"./linestringreplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<?>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{strokeColor: (Array<number>|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: (number|undefined),\n     *         miterLimit: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: undefined,\n      miterLimit: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLLineStringReplay.__proto__ = WebGLReplay;\n  WebGLLineStringReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLLineStringReplay.prototype.constructor = WebGLLineStringReplay;\n\n  /**\n   * Draw one segment.\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n\n    var i, ii;\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n    //Instruction, and a rounding factor (1 or 2). If the product is even,\n    //we round it. If it is odd, we don't.\n    var lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n      this.state_.lineJoin === 'miter' ? 1 : 2;\n    var lineCap = this.state_.lineCap === 'butt' ? 0 :\n      this.state_.lineCap === 'square' ? 1 : 2;\n    var closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n    var startCoords, sign, n;\n    var lastIndex = numIndices;\n    var lastSign = 1;\n    //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n    var p0, p1, p2;\n\n    for (i = offset, ii = end; i < ii; i += stride) {\n\n      n = numVertices / 7;\n\n      p0 = p1;\n      p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n      //First vertex.\n      if (i === offset) {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n        if (end - offset === stride * 2 && equals(p1, p2)) {\n          break;\n        }\n        if (closed) {\n          //A closed line! Complete the circle.\n          p0 = [flatCoordinates[end - stride * 2],\n            flatCoordinates[end - stride * 2 + 1]];\n\n          startCoords = p2;\n        } else {\n          //Add the first two/four vertices.\n\n          if (lineCap) {\n            numVertices = this$1.addVertices_([0, 0], p1, p2,\n              lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this$1.addVertices_([0, 0], p1, p2,\n              -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            this$1.indices[numIndices++] = n + 2;\n            this$1.indices[numIndices++] = n;\n            this$1.indices[numIndices++] = n + 1;\n\n            this$1.indices[numIndices++] = n + 1;\n            this$1.indices[numIndices++] = n + 3;\n            this$1.indices[numIndices++] = n + 2;\n\n          }\n\n          numVertices = this$1.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this$1.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          lastIndex = numVertices / 7 - 1;\n\n          continue;\n        }\n      } else if (i === end - stride) {\n        //Last vertex.\n        if (closed) {\n          //Same as the first vertex.\n          p2 = startCoords;\n          break;\n        } else {\n          p0 = p0 || [0, 0];\n\n          numVertices = this$1.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this$1.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          this$1.indices[numIndices++] = n;\n          this$1.indices[numIndices++] = lastIndex - 1;\n          this$1.indices[numIndices++] = lastIndex;\n\n          this$1.indices[numIndices++] = lastIndex;\n          this$1.indices[numIndices++] = n + 1;\n          this$1.indices[numIndices++] = n;\n\n          if (lineCap) {\n            numVertices = this$1.addVertices_(p0, p1, [0, 0],\n              lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this$1.addVertices_(p0, p1, [0, 0],\n              -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            this$1.indices[numIndices++] = n + 2;\n            this$1.indices[numIndices++] = n;\n            this$1.indices[numIndices++] = n + 1;\n\n            this$1.indices[numIndices++] = n + 1;\n            this$1.indices[numIndices++] = n + 3;\n            this$1.indices[numIndices++] = n + 2;\n\n          }\n\n          break;\n        }\n      } else {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      }\n\n      // We group CW and straight lines, thus the not so inituitive CCW checking function.\n      sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n        ? -1 : 1;\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      if (i > offset) {\n        this$1.indices[numIndices++] = n;\n        this$1.indices[numIndices++] = lastIndex - 1;\n        this$1.indices[numIndices++] = lastIndex;\n\n        this$1.indices[numIndices++] = n + 2;\n        this$1.indices[numIndices++] = n;\n        this$1.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n      }\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 1;\n\n      lastIndex = n + 2;\n      lastSign = sign;\n\n      //Add miter\n      if (lineJoin) {\n        numVertices = this$1.addVertices_(p0, p1, p2,\n          sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n        this$1.indices[numIndices++] = n + 1;\n        this$1.indices[numIndices++] = n + 3;\n        this$1.indices[numIndices++] = n;\n      }\n    }\n\n    if (closed) {\n      n = n || numVertices / 7;\n      sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n        ? 1 : -1;\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n  };\n\n  /**\n   * @param {Array<number>} p0 Last coordinates.\n   * @param {Array<number>} p1 Current coordinates.\n   * @param {Array<number>} p2 Next coordinates.\n   * @param {number} product Sign, instruction, and rounding product.\n   * @param {number} numVertices Vertex counter.\n   * @return {number} Vertex counter.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.addVertices_ = function addVertices_ (p0, p1, p2, product, numVertices) {\n    this.vertices[numVertices++] = p0[0];\n    this.vertices[numVertices++] = p0[1];\n    this.vertices[numVertices++] = p1[0];\n    this.vertices[numVertices++] = p1[1];\n    this.vertices[numVertices++] = p2[0];\n    this.vertices[numVertices++] = p2[1];\n    this.vertices[numVertices++] = product;\n\n    return numVertices;\n  };\n\n  /**\n   * Check if the linestring can be drawn (i. e. valid).\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {boolean} The linestring can be drawn.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.isValid_ = function isValid_ (flatCoordinates, offset, end, stride) {\n    var range = end - offset;\n    if (range < stride * 2) {\n      return false;\n    } else if (range === stride * 2) {\n      var firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n      var lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n      return !equals(firstP, lastP);\n    }\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n        stride, -this.origin[0], -this.origin[1]);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      this.drawCoordinates_(\n        flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var indexCount = this.indices.length;\n    var ends = multiLineStringGeometry.getEnds();\n    ends.unshift(0);\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var i, ii;\n    if (ends.length > 1) {\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (this$1.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n          var lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n            stride, -this$1.origin[0], -this$1.origin[1]);\n          this$1.drawCoordinates_(\n            lineString, 0, lineString.length, stride);\n        }\n      }\n    }\n    if (this.indices.length > indexCount) {\n      this.startIndices.push(indexCount);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(indexCount);\n        this.state_.changed = false;\n      }\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawPolygonCoordinates = function drawPolygonCoordinates (flatCoordinates, holeFlatCoordinates, stride) {\n    var this$1 = this;\n\n    if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates.push(flatCoordinates[0]);\n      flatCoordinates.push(flatCoordinates[1]);\n    }\n    this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n        }\n        this$1.drawCoordinates_(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   * @param {number=} opt_index Index count.\n   */\n  WebGLLineStringReplay.prototype.setPolygonStyle = function setPolygonStyle (feature, opt_index) {\n    var index = opt_index === undefined ? this.indices.length : opt_index;\n    this.startIndices.push(index);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(index);\n      this.state_.changed = false;\n    }\n  };\n\n  /**\n   * @return {number} Current index.\n   */\n  WebGLLineStringReplay.prototype.getCurrentIndex = function getCurrentIndex () {\n    return this.indices.length;\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLLineStringReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_lastPos);\n    gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n      false, 28, 0);\n\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 28, 8);\n\n    gl.enableVertexAttribArray(locations.a_nextPos);\n    gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n      false, 28, 16);\n\n    gl.enableVertexAttribArray(locations.a_direction);\n    gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n      false, 28, 24);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_lastPos);\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_nextPos);\n    gl.disableVertexAttribArray(locations.a_direction);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLLineStringReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   * @param {number} lineWidth Line width.\n   * @param {number} miterLimit Miter limit.\n   */\n  WebGLLineStringReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth, miterLimit) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n    gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    this.state_.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : DEFAULT_LINECAP;\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : DEFAULT_LINEJOIN;\n    var strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    var strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n      this.state_.changed = true;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.state_.miterLimit = strokeStyleMiterLimit;\n      this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n    }\n  };\n\n  return WebGLLineStringReplay;\n}(WebGLReplay));\n\n\nexport default WebGLLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'a');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev]\n * @property {Item} [next]\n * @property {?} data\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nvar LinkedList = function LinkedList(opt_circular) {\n\n  /**\n   * @private\n   * @type {Item|undefined}\n   */\n  this.first_;\n\n  /**\n   * @private\n   * @type {Item|undefined}\n   */\n  this.last_;\n\n  /**\n   * @private\n   * @type {Item|undefined}\n   */\n  this.head_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\nLinkedList.prototype.insertItem = function insertItem (data) {\n\n  /** @type {Item} */\n  var item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  var head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    var next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\nLinkedList.prototype.removeItem = function removeItem () {\n  var head = this.head_;\n  if (head) {\n    var next = head.next;\n    var prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.firstItem = function firstItem () {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\nLinkedList.prototype.lastItem = function lastItem () {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.nextItem = function nextItem () {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getNextItem = function getNextItem () {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.prevItem = function prevItem () {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getPrevItem = function getPrevItem () {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getCurrItem = function getCurrItem () {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\nLinkedList.prototype.setFirstItem = function setFirstItem () {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {LinkedList} list List to merge into the current list.\n */\nLinkedList.prototype.concat = function concat (list) {\n  if (list.head_) {\n    if (this.head_) {\n      var end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\nLinkedList.prototype.getLength = function getLength () {\n  return this.length_;\n};\n\n\nexport default LinkedList;\n\n//# sourceMappingURL=LinkedList.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n    var this$1 = this;\n\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this$1.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n    var this$1 = this;\n\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this$1.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from './polygonreplay/defaultshader.js';\nimport Locations from './polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from './LineStringReplay.js';\nimport WebGLReplay from './Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {PolygonVertex} p0\n * @property {PolygonVertex} p1\n */\n\n\nvar WebGLPolygonReplay = (function (WebGLReplay) {\n  function WebGLPolygonReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    this.lineStringReplay = new WebGLLineStringReplay(\n      tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"./polygonreplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{fillColor: (Array<number>|null),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLPolygonReplay.__proto__ = WebGLReplay;\n  WebGLPolygonReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLPolygonReplay.prototype.constructor = WebGLPolygonReplay;\n\n  /**\n   * Draw one polygon.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   * @private\n   */\n  WebGLPolygonReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, holeFlatCoordinates, stride) {\n    var this$1 = this;\n\n    // Triangulate the polygon\n    var outerRing = new LinkedList();\n    var rtree = new RBush();\n    // Initialize the outer ring\n    this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n    var maxCoords = this.getMaxCoords_(outerRing);\n\n    // Eliminate holes, if there are any\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      var holeLists = [];\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        var holeList = {\n          list: new LinkedList(),\n          maxCoords: undefined,\n          rtree: new RBush()\n        };\n        holeLists.push(holeList);\n        this$1.processFlatCoordinates_(holeFlatCoordinates[i],\n          stride, holeList.list, holeList.rtree, false);\n        this$1.classifyPoints_(holeList.list, holeList.rtree, true);\n        holeList.maxCoords = this$1.getMaxCoords_(holeList.list);\n      }\n      holeLists.sort(function(a, b) {\n        return b.maxCoords[0] === a.maxCoords[0] ?\n          a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n      });\n      for (i = 0; i < holeLists.length; ++i) {\n        var currList = holeLists[i].list;\n        var start = currList.firstItem();\n        var currItem = start;\n        var intersection = (void 0);\n        do {\n          //TODO: Triangulate holes when they intersect the outer ring.\n          if (this$1.getIntersections_(currItem, rtree).length) {\n            intersection = true;\n            break;\n          }\n          currItem = currList.nextItem();\n        } while (start !== currItem);\n        if (!intersection) {\n          if (this$1.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n            rtree.concat(holeLists[i].rtree);\n            this$1.classifyPoints_(outerRing, rtree, false);\n          }\n        }\n      }\n    } else {\n      this.classifyPoints_(outerRing, rtree, false);\n    }\n    this.triangulate_(outerRing, rtree);\n  };\n\n  /**\n   * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} clockwise Coordinate order should be clockwise.\n   */\n  WebGLPolygonReplay.prototype.processFlatCoordinates_ = function processFlatCoordinates_ (flatCoordinates, stride, list, rtree, clockwise) {\n    var this$1 = this;\n\n    var isClockwise = linearRingIsClockwise(flatCoordinates,\n      0, flatCoordinates.length, stride);\n    var i, ii;\n    var n = this.vertices.length / 2;\n    /** @type {PolygonVertex} */\n    var start;\n    /** @type {PolygonVertex} */\n    var p0;\n    /** @type {PolygonVertex} */\n    var p1;\n    var extents = [];\n    var segments = [];\n    if (clockwise === isClockwise) {\n      start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n      p0 = start;\n      for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n        p1 = this$1.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this$1.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    } else {\n      var end = flatCoordinates.length - stride;\n      start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n      p0 = start;\n      for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n        p1 = this$1.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this$1.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    }\n    rtree.load(extents, segments);\n  };\n\n  /**\n   * Returns the rightmost coordinates of a polygon on the X axis.\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygons ring.\n   * @return {Array<number>} Max X coordinates.\n   */\n  WebGLPolygonReplay.prototype.getMaxCoords_ = function getMaxCoords_ (list) {\n    var start = list.firstItem();\n    var seg = start;\n    var maxCoords = [seg.p0.x, seg.p0.y];\n\n    do {\n      seg = list.nextItem();\n      if (seg.p0.x > maxCoords[0]) {\n        maxCoords = [seg.p0.x, seg.p0.y];\n      }\n    } while (seg !== start);\n\n    return maxCoords;\n  };\n\n  /**\n   * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were reclassified points.\n   */\n  WebGLPolygonReplay.prototype.classifyPoints_ = function classifyPoints_ (list, rtree, ccw) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var pointsReclassified = false;\n    do {\n      var reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n        triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n          s0.p1.y, s1.p1.x, s1.p1.y);\n      if (reflex === undefined) {\n        this$1.removeItem_(s0, s1, list, rtree);\n        pointsReclassified = true;\n        if (s1 === start) {\n          start = list.getNextItem();\n        }\n        s1 = s0;\n        list.prevItem();\n      } else if (s0.p1.reflex !== reflex) {\n        s0.p1.reflex = reflex;\n        pointsReclassified = true;\n      }\n      s0 = s1;\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return pointsReclassified;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} hole Linked list of the hole.\n   * @param {number} holeMaxX Maximum X value of the hole.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {number} listMaxX Maximum X value of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @return {boolean} Bridging was successful.\n   */\n  WebGLPolygonReplay.prototype.bridgeHole_ = function bridgeHole_ (hole, holeMaxX, list, listMaxX, rtree) {\n    var this$1 = this;\n\n    var seg = hole.firstItem();\n    while (seg.p1.x !== holeMaxX) {\n      seg = hole.nextItem();\n    }\n\n    var p1 = seg.p1;\n    /** @type {PolygonVertex} */\n    var p2 = {x: listMaxX, y: p1.y, i: -1};\n    var minDist = Infinity;\n    var i, ii, bestPoint;\n    /** @type {PolygonVertex} */\n    var p5;\n\n    var intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n    for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n      var currSeg = intersectingSegments[i];\n      var intersection = this$1.calculateIntersection_(p1, p2, currSeg.p0,\n        currSeg.p1, true);\n      var dist = Math.abs(p1.x - intersection[0]);\n      if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n        minDist = dist;\n        p5 = {x: intersection[0], y: intersection[1], i: -1};\n        seg = currSeg;\n      }\n    }\n    if (minDist === Infinity) {\n      return false;\n    }\n    bestPoint = seg.p1;\n\n    if (minDist > 0) {\n      var pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n      if (pointsInTriangle.length) {\n        var theta = Infinity;\n        for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n          var currPoint = pointsInTriangle[i];\n          var currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n          if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n            theta = currTheta;\n            bestPoint = currPoint;\n          }\n        }\n      }\n    }\n\n    seg = list.firstItem();\n    while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n      seg = list.nextItem();\n    }\n\n    //We clone the bridge points as they can have different convexity.\n    var p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n    var p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n    hole.getNextItem().p0 = p0Bridge;\n    this.insertItem_(p1, seg.p1, hole, rtree);\n    this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n    seg.p1 = p1Bridge;\n    hole.setFirstItem();\n    list.concat(hole);\n\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.triangulate_ = function triangulate_ (list, rtree) {\n    var this$1 = this;\n\n    var ccw = false;\n    var simple = this.isSimple_(list, rtree);\n\n    // Start clipping ears\n    while (list.getLength() > 3) {\n      if (simple) {\n        if (!this$1.clipEars_(list, rtree, simple, ccw)) {\n          if (!this$1.classifyPoints_(list, rtree, ccw)) {\n            // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n            // introduce touching segments. However, the original data may have some.\n            if (!this$1.resolveSelfIntersections_(list, rtree, true)) {\n              break;\n            }\n          }\n        }\n      } else {\n        if (!this$1.clipEars_(list, rtree, simple, ccw)) {\n          // We ran out of ears, try to reclassify.\n          if (!this$1.classifyPoints_(list, rtree, ccw)) {\n            // We have a bad polygon, try to resolve local self-intersections.\n            if (!this$1.resolveSelfIntersections_(list, rtree)) {\n              simple = this$1.isSimple_(list, rtree);\n              if (!simple) {\n                // We have a really bad polygon, try more time consuming methods.\n                this$1.splitPolygon_(list, rtree);\n                break;\n              } else {\n                ccw = !this$1.isClockwise_(list);\n                this$1.classifyPoints_(list, rtree, ccw);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (list.getLength() === 3) {\n      var numIndices = this.indices.length;\n      this.indices[numIndices++] = list.getPrevItem().p0.i;\n      this.indices[numIndices++] = list.getCurrItem().p0.i;\n      this.indices[numIndices++] = list.getNextItem().p0.i;\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} simple The polygon is simple.\n   * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were processed ears.\n   */\n  WebGLPolygonReplay.prototype.clipEars_ = function clipEars_ (list, rtree, simple, ccw) {\n    var this$1 = this;\n\n    var numIndices = this.indices.length;\n    var start = list.firstItem();\n    var s0 = list.getPrevItem();\n    var s1 = start;\n    var s2 = list.nextItem();\n    var s3 = list.getNextItem();\n    var p0, p1, p2;\n    var processedEars = false;\n    do {\n      p0 = s1.p0;\n      p1 = s1.p1;\n      p2 = s2.p1;\n      if (p1.reflex === false) {\n        // We might have a valid ear\n        var variableCriterion = (void 0);\n        if (simple) {\n          variableCriterion = this$1.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n        } else {\n          variableCriterion = ccw ? this$1.diagonalIsInside_(s3.p1, p2, p1, p0,\n            s0.p0) : this$1.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n        }\n        if ((simple || this$1.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n            variableCriterion) {\n          //The diagonal is completely inside the polygon\n          if (simple || p0.reflex === false || p2.reflex === false ||\n              linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n                p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n            //The diagonal is persumably valid, we have an ear\n            this$1.indices[numIndices++] = p0.i;\n            this$1.indices[numIndices++] = p1.i;\n            this$1.indices[numIndices++] = p2.i;\n            this$1.removeItem_(s1, s2, list, rtree);\n            if (s2 === start) {\n              start = s3;\n            }\n            processedEars = true;\n          }\n        }\n      }\n      // Else we have a reflex point.\n      s0 = list.getPrevItem();\n      s1 = list.getCurrItem();\n      s2 = list.nextItem();\n      s3 = list.getNextItem();\n    } while (s1 !== start && list.getLength() > 3);\n\n    return processedEars;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Resolve touching segments.\n   * @return {boolean} There were resolved intersections.\n  */\n  WebGLPolygonReplay.prototype.resolveSelfIntersections_ = function resolveSelfIntersections_ (list, rtree, opt_touch) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    list.nextItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var resolvedIntersections = false;\n\n    do {\n      var intersection = this$1.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n        opt_touch);\n      if (intersection) {\n        var breakCond = false;\n        var numVertices = this$1.vertices.length;\n        var numIndices = this$1.indices.length;\n        var n = numVertices / 2;\n        var seg = list.prevItem();\n        list.removeItem();\n        rtree.remove(seg);\n        breakCond = (seg === start);\n        var p = (void 0);\n        if (opt_touch) {\n          if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n            list.prevItem();\n            p = s0.p0;\n            s1.p0 = p;\n            rtree.remove(s0);\n            breakCond = breakCond || (s0 === start);\n          } else {\n            p = s1.p1;\n            s0.p1 = p;\n            rtree.remove(s1);\n            breakCond = breakCond || (s1 === start);\n          }\n          list.removeItem();\n        } else {\n          p = this$1.createPoint_(intersection[0], intersection[1], n);\n          s0.p1 = p;\n          s1.p0 = p;\n          rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n            Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n          rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n            Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n        }\n\n        this$1.indices[numIndices++] = seg.p0.i;\n        this$1.indices[numIndices++] = seg.p1.i;\n        this$1.indices[numIndices++] = p.i;\n\n        resolvedIntersections = true;\n        if (breakCond) {\n          break;\n        }\n      }\n\n      s0 = list.getPrevItem();\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return resolvedIntersections;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @return {boolean} The polygon is simple.\n   */\n  WebGLPolygonReplay.prototype.isSimple_ = function isSimple_ (list, rtree) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var seg = start;\n    do {\n      if (this$1.getIntersections_(seg, rtree).length) {\n        return false;\n      }\n      seg = list.nextItem();\n    } while (seg !== start);\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @return {boolean} Orientation is clockwise.\n   */\n  WebGLPolygonReplay.prototype.isClockwise_ = function isClockwise_ (list) {\n    var length = list.getLength() * 2;\n    var flatCoordinates = new Array(length);\n    var start = list.firstItem();\n    var seg = start;\n    var i = 0;\n    do {\n      flatCoordinates[i++] = seg.p0.x;\n      flatCoordinates[i++] = seg.p0.y;\n      seg = list.nextItem();\n    } while (seg !== start);\n    return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.splitPolygon_ = function splitPolygon_ (list, rtree) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var s0 = start;\n    do {\n      var intersections = this$1.getIntersections_(s0, rtree);\n      if (intersections.length) {\n        var s1 = intersections[0];\n        var n = this$1.vertices.length / 2;\n        var intersection = this$1.calculateIntersection_(s0.p0,\n          s0.p1, s1.p0, s1.p1);\n        var p = this$1.createPoint_(intersection[0], intersection[1], n);\n        var newPolygon = new LinkedList();\n        var newRtree = new RBush();\n        this$1.insertItem_(p, s0.p1, newPolygon, newRtree);\n        s0.p1 = p;\n        rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n          Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n        var currItem = list.nextItem();\n        while (currItem !== s1) {\n          this$1.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n          rtree.remove(currItem);\n          list.removeItem();\n          currItem = list.getCurrItem();\n        }\n        this$1.insertItem_(s1.p0, p, newPolygon, newRtree);\n        s1.p0 = p;\n        rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n          Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n        this$1.classifyPoints_(list, rtree, false);\n        this$1.triangulate_(list, rtree);\n        this$1.classifyPoints_(newPolygon, newRtree, false);\n        this$1.triangulate_(newPolygon, newRtree);\n        break;\n      }\n      s0 = list.nextItem();\n    } while (s0 !== start);\n  };\n\n  /**\n   * @private\n   * @param {number} x X coordinate.\n   * @param {number} y Y coordinate.\n   * @param {number} i Index.\n   * @return {PolygonVertex} List item.\n   */\n  WebGLPolygonReplay.prototype.createPoint_ = function createPoint_ (x, y, i) {\n    var numVertices = this.vertices.length;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    /** @type {PolygonVertex} */\n    var p = {\n      x: x,\n      y: y,\n      i: i,\n      reflex: undefined\n    };\n    return p;\n  };\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 First point of segment.\n   * @param {PolygonVertex} p1 Second point of segment.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n   * @param {import(\"../../structs/RBush.js\").default=} opt_rtree Insert the segment into the R-Tree.\n   * @return {PolygonSegment} segment.\n   */\n  WebGLPolygonReplay.prototype.insertItem_ = function insertItem_ (p0, p1, list, opt_rtree) {\n    var seg = {\n      p0: p0,\n      p1: p1\n    };\n    list.insertItem(seg);\n    if (opt_rtree) {\n      opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n        Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n    }\n    return seg;\n  };\n\n  /**\n    * @private\n    * @param {PolygonSegment} s0 Segment before the remove candidate.\n    * @param {PolygonSegment} s1 Remove candidate segment.\n    * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n    * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n    */\n  WebGLPolygonReplay.prototype.removeItem_ = function removeItem_ (s0, s1, list, rtree) {\n    if (list.getCurrItem() === s1) {\n      list.removeItem();\n      s0.p1 = s1.p1;\n      rtree.remove(s1);\n      rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n        Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n    }\n  };\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 First point.\n   * @param {PolygonVertex} p1 Second point.\n   * @param {PolygonVertex} p2 Third point.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_reflex Only include reflex points.\n   * @return {Array<PolygonVertex>} Points in the triangle.\n   */\n  WebGLPolygonReplay.prototype.getPointsInTriangle_ = function getPointsInTriangle_ (p0, p1, p2, rtree, opt_reflex) {\n    var result = [];\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n      Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n        p1.y, p2.y)]);\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      for (var j in segmentsInExtent[i]) {\n        var p = segmentsInExtent[i][j];\n        if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n          if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n              (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n              linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n            result.push(p);\n          }\n        }\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @private\n   * @param {PolygonSegment} segment Segment.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<PolygonSegment>} Intersecting segments.\n   */\n  WebGLPolygonReplay.prototype.getIntersections_ = function getIntersections_ (segment, rtree, opt_touch) {\n    var this$1 = this;\n\n    var p0 = segment.p0;\n    var p1 = segment.p1;\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n      Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n    var result = [];\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      var currSeg = segmentsInExtent[i];\n      if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n          this$1.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n        result.push(currSeg);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Line intersection algorithm by Paul Bourke.\n   * See http://paulbourke.net/geometry/pointlineplane/.\n   *\n   * @private\n   * @param {PolygonVertex} p0 First point.\n   * @param {PolygonVertex} p1 Second point.\n   * @param {PolygonVertex} p2 Third point.\n   * @param {PolygonVertex} p3 Fourth point.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<number>|undefined} Intersection coordinates.\n   */\n  WebGLPolygonReplay.prototype.calculateIntersection_ = function calculateIntersection_ (p0, p1, p2, p3, opt_touch) {\n    var denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n    if (denom !== 0) {\n      var ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n      var ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n      if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n          ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n          ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n        return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 Point before the start of the diagonal.\n   * @param {PolygonVertex} p1 Start point of the diagonal.\n   * @param {PolygonVertex} p2 Ear candidate.\n   * @param {PolygonVertex} p3 End point of the diagonal.\n   * @param {PolygonVertex} p4 Point after the end of the diagonal.\n   * @return {boolean} Diagonal is inside the polygon.\n   */\n  WebGLPolygonReplay.prototype.diagonalIsInside_ = function diagonalIsInside_ (p0, p1, p2, p3, p4) {\n    if (p1.reflex === undefined || p3.reflex === undefined) {\n      return false;\n    }\n    var p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n    var p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n    var p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n    var p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n    var p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n    var p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n    return p1InCone && p3InCone;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var endss = multiPolygonGeometry.getEndss();\n    var stride = multiPolygonGeometry.getStride();\n    var currIndex = this.indices.length;\n    var currLineIndex = this.lineStringReplay.getCurrentIndex();\n    var flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n    var i, ii, j, jj;\n    var start = 0;\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i];\n      if (ends.length > 0) {\n        var outerRing = translate(flatCoordinates, start, ends[0],\n          stride, -this$1.origin[0], -this$1.origin[1]);\n        if (outerRing.length) {\n          var holes = [];\n          var holeFlatCoords = (void 0);\n          for (j = 1, jj = ends.length; j < jj; ++j) {\n            if (ends[j] !== ends[j - 1]) {\n              holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n                ends[j], stride, -this$1.origin[0], -this$1.origin[1]);\n              holes.push(holeFlatCoords);\n            }\n          }\n          this$1.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n          this$1.drawCoordinates_(outerRing, holes, stride);\n        }\n      }\n      start = ends[ends.length - 1];\n    }\n    if (this.indices.length > currIndex) {\n      this.startIndices.push(currIndex);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(currIndex);\n        this.state_.changed = false;\n      }\n    }\n    if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n      this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var this$1 = this;\n\n    var ends = polygonGeometry.getEnds();\n    var stride = polygonGeometry.getStride();\n    if (ends.length > 0) {\n      var flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n      var outerRing = translate(flatCoordinates, 0, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        var holes = [];\n        var i, ii, holeFlatCoords;\n        for (i = 1, ii = ends.length; i < ii; ++i) {\n          if (ends[i] !== ends[i - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n              ends[i], stride, -this$1.origin[0], -this$1.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n\n        this.startIndices.push(this.indices.length);\n        this.startIndicesFeature.push(feature);\n        if (this.state_.changed) {\n          this.styleIndices_.push(this.indices.length);\n          this.state_.changed = false;\n        }\n        this.lineStringReplay.setPolygonStyle(feature);\n\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLPolygonReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    this.lineStringReplay.finish(context);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n      lineDeleter();\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 8, 0);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setFillStyle_(gl, nextStyle);\n        this$1.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, nextStyle);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLPolygonReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, nextStyle);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   */\n  WebGLPolygonReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n      this.state_.fillColor = fillStyleColor;\n      this.state_.changed = true;\n      this.styles_.push(fillStyleColor);\n    }\n    //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n    if (strokeStyle) {\n      this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    } else {\n      var nullStrokeStyle = new Stroke({\n        color: [0, 0, 0, 0],\n        width: 0\n      });\n      this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n    }\n  };\n\n  return WebGLPolygonReplay;\n}(WebGLReplay));\n\n\nexport default WebGLPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array<AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object<string, AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this$1.emptyBlocks_[i];\n    if (block.width >= width + this$1.space_ &&\n        block.height >= height + this$1.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this$1.space_,\n        offsetY: block.y + this$1.space_,\n        image: this$1.canvas_\n      };\n      this$1.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this$1.context_,\n        block.x + this$1.space_, block.y + this$1.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this$1.split_(i, block, width + this$1.space_, height + this$1.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {AtlasBlock} */\n  var newBlock1;\n  /** @type {AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {AtlasBlock} newBlock1 The 1st block to add.\n * @param {AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = /** @type {Array<*>} */ ([index, 1]);\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\n//# sourceMappingURL=Atlas.js.map","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {VOID} from '../functions.js';\nimport Atlas from './Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array<import(\"./Atlas.js\").default>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?import(\"./Atlas.js\").AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {import(\"./Atlas.js\").AtlasInfo} info The info for the real image.\n * @param {import(\"./Atlas.js\").AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=} opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : VOID;\n\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?import(\"./Atlas.js\").AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this$1.currentHitSize_ * 2, this$1.maxSize_);\n        this$1.currentHitSize_ = size;\n      } else {\n        size = Math.min(this$1.currentSize_ * 2, this$1.maxSize_);\n        this$1.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this$1.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\n//# sourceMappingURL=AtlasManager.js.map","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from './TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {import(\"../../style/AtlasManager.js\").default} atlas\n * @property {Object<string, number>} width\n * @property {number} height\n */\n\n\nvar WebGLTextReplay = (function (WebGLTextureReplay) {\n  function WebGLTextReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.images_ = [];\n\n    /**\n     * @private\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures_ = [];\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n    /**\n     * @private\n     * @type {{strokeColor: (import(\"../../colorlike.js\").ColorLike|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: number,\n     *         miterLimit: (number|undefined),\n     *         fillColor: (import(\"../../colorlike.js\").ColorLike|null),\n     *         font: (string|undefined),\n     *         scale: (number|undefined)}}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textAlign_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textBaseline_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetY_ = undefined;\n\n    /**\n     * @private\n     * @type {Object<string, GlyphAtlas>}\n     */\n    this.atlases_ = {};\n\n    /**\n     * @private\n     * @type {GlyphAtlas|undefined}\n     */\n    this.currAtlas_ = undefined;\n\n    this.scale = 1;\n\n    this.opacity = 1;\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLTextReplay.__proto__ = WebGLTextureReplay;\n  WebGLTextReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLTextReplay.prototype.constructor = WebGLTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    if (this.text_) {\n      var flatCoordinates = null;\n      var offset = 0;\n      var end = 2;\n      var stride = 2;\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          stride = geometry.getStride();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          break;\n        case GeometryType.MULTI_POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          end = flatCoordinates.length;\n          break;\n        default:\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n\n      var glyphAtlas = this.currAtlas_;\n      var lines = this.text_.split('\\n');\n      var textSize = this.getTextSize_(lines);\n      var i, ii, j, jj, currX, currY, charArr, charInfo;\n      var anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n      var anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n      var lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n      for (i = 0, ii = lines.length; i < ii; ++i) {\n        currX = 0;\n        currY = glyphAtlas.height * i;\n        charArr = lines[i].split('');\n\n        for (j = 0, jj = charArr.length; j < jj; ++j) {\n          charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n          if (charInfo) {\n            var image = charInfo.image;\n\n            this$1.anchorX = anchorX - currX;\n            this$1.anchorY = anchorY - currY;\n            this$1.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n            this$1.originY = charInfo.offsetY;\n            this$1.height = glyphAtlas.height;\n            this$1.width = j === 0 || j === charArr.length - 1 ?\n              glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n            this$1.imageHeight = image.height;\n            this$1.imageWidth = image.width;\n\n            if (this$1.images_.length === 0) {\n              this$1.images_.push(image);\n            } else {\n              var currentImage = this$1.images_[this$1.images_.length - 1];\n              if (getUid(currentImage) != getUid(image)) {\n                this$1.groupIndices.push(this$1.indices.length);\n                this$1.images_.push(image);\n              }\n            }\n\n            this$1.drawText_(flatCoordinates, offset, end, stride);\n          }\n          currX += this$1.width;\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Array<string>} lines Label to draw split to lines.\n   * @return {Array<number>} Size of the label in pixels.\n   */\n  WebGLTextReplay.prototype.getTextSize_ = function getTextSize_ (lines) {\n    var self = this;\n    var glyphAtlas = this.currAtlas_;\n    var textHeight = lines.length * glyphAtlas.height;\n    //Split every line to an array of chars, sum up their width, and select the longest.\n    var textWidth = lines.map(function(str) {\n      var sum = 0;\n      for (var i = 0, ii = str.length; i < ii; ++i) {\n        var curr = str[i];\n        if (!glyphAtlas.width[curr]) {\n          self.addCharToAtlas_(curr);\n        }\n        sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n      }\n      return sum;\n    }).reduce(function(max, curr) {\n      return Math.max(max, curr);\n    });\n\n    return [textWidth, textHeight];\n  };\n\n  /**\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLTextReplay.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    for (var i = offset, ii = end; i < ii; i += stride) {\n      this$1.drawCoordinates(flatCoordinates, offset, end, stride);\n    }\n  };\n\n  /**\n   * @private\n   * @param {string} char Character.\n   */\n  WebGLTextReplay.prototype.addCharToAtlas_ = function addCharToAtlas_ (char) {\n    if (char.length === 1) {\n      var glyphAtlas = this.currAtlas_;\n      var state = this.state_;\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n      var info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n        function(ctx, x, y) {\n          //Parameterize the canvas\n          ctx.font = /** @type {string} */ (state.font);\n          ctx.fillStyle = state.fillColor;\n          ctx.strokeStyle = state.strokeColor;\n          ctx.lineWidth = state.lineWidth;\n          ctx.lineCap = /** @type {CanvasLineCap} */ (state.lineCap);\n          ctx.lineJoin = /** @type {CanvasLineJoin} */ (state.lineJoin);\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          if (CANVAS_LINE_DASH && state.lineDash) {\n            //FIXME: use pixelRatio\n            ctx.setLineDash(state.lineDash);\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n          }\n          if (state.scale !== 1) {\n            //FIXME: use pixelRatio\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n              /** @type {number} */ (state.scale), 0, 0);\n          }\n\n          //Draw the character on the canvas\n          if (state.strokeColor) {\n            ctx.strokeText(char, x, y);\n          }\n          if (state.fillColor) {\n            ctx.fillText(char, x, y);\n          }\n        });\n\n      if (info) {\n        glyphAtlas.width[char] = width;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices = this.groupIndices;\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    // create textures\n    /** @type {Object<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n    this.text_ = '';\n    this.textAlign_ = undefined;\n    this.textBaseline_ = undefined;\n    this.offsetX_ = undefined;\n    this.offsetY_ = undefined;\n    this.images_ = null;\n    this.atlases_ = {};\n    this.currAtlas_ = undefined;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.setTextStyle = function setTextStyle (textStyle) {\n    var state = this.state_;\n    var textFillStyle = textStyle.getFill();\n    var textStrokeStyle = textStyle.getStroke();\n    if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n      this.text_ = '';\n    } else {\n      if (!textFillStyle) {\n        state.fillColor = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        state.fillColor = asColorLike(textFillStyleColor ?\n          textFillStyleColor : DEFAULT_FILLSTYLE);\n      }\n      if (!textStrokeStyle) {\n        state.strokeColor = null;\n        state.lineWidth = 0;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        state.strokeColor = asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : DEFAULT_STROKESTYLE);\n        state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n        state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n        state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n        state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n        state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n        var lineDash = textStrokeStyle.getLineDash();\n        state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n      }\n      state.font = textStyle.getFont() || DEFAULT_FONT;\n      state.scale = textStyle.getScale() || 1;\n      this.text_ = /** @type {string} */ (textStyle.getText());\n      var textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n      var textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n      this.textAlign_ = textAlign === undefined ?\n        DEFAULT_TEXTALIGN : textAlign;\n      this.textBaseline_ = textBaseline === undefined ?\n        DEFAULT_TEXTBASELINE : textBaseline;\n      this.offsetX_ = textStyle.getOffsetX() || 0;\n      this.offsetY_ = textStyle.getOffsetY() || 0;\n      this.rotateWithView = !!textStyle.getRotateWithView();\n      this.rotation = textStyle.getRotation() || 0;\n\n      this.currAtlas_ = this.getAtlas_(state);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Object} state Font attributes.\n   * @return {GlyphAtlas} Glyph atlas.\n   */\n  WebGLTextReplay.prototype.getAtlas_ = function getAtlas_ (state) {\n    var params = [];\n    for (var i in state) {\n      if (state[i] || state[i] === 0) {\n        if (Array.isArray(state[i])) {\n          params = params.concat(state[i]);\n        } else {\n          params.push(state[i]);\n        }\n      }\n    }\n    var hash = this.calculateHash_(params);\n    if (!this.atlases_[hash]) {\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n          state.lineWidth / 2) * state.scale);\n\n      this.atlases_[hash] = {\n        atlas: new AtlasManager({\n          space: state.lineWidth + 1\n        }),\n        width: {},\n        height: height\n      };\n    }\n    return this.atlases_[hash];\n  };\n\n  /**\n   * @private\n   * @param {Array<string|number>} params Array of parameters.\n   * @return {string} Hash string.\n   */\n  WebGLTextReplay.prototype.calculateHash_ = function calculateHash_ (params) {\n    //TODO: Create a more performant, reliable, general hash function.\n    var hash = '';\n    for (var i = 0, ii = params.length; i < ii; ++i) {\n      hash += params[i];\n    }\n    return hash;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getTextures = function getTextures (opt_all) {\n    return this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.textures_;\n  };\n\n  return WebGLTextReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/webgl/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from './CircleReplay.js';\nimport WebGLImageReplay from './ImageReplay.js';\nimport WebGLLineStringReplay from './LineStringReplay.js';\nimport WebGLPolygonReplay from './PolygonReplay.js';\nimport WebGLTextReplay from './TextReplay.js';\n\n/**\n * @type {Array<number>}\n */\nvar HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object<import(\"../ReplayType.js\").default, typeof import(\"./Replay.js\").default>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\nvar WebGLReplayGroup = (function (ReplayGroup) {\n  function WebGLReplayGroup(tolerance, maxExtent, opt_renderBuffer) {\n    ReplayGroup.call(this);\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     * @private\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string,\n     *        Object<import(\"../ReplayType.js\").default, import(\"./Replay.js\").default>>}\n     */\n    this.replaysByZIndex_ = {};\n\n  }\n\n  if ( ReplayGroup ) WebGLReplayGroup.__proto__ = ReplayGroup;\n  WebGLReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  WebGLReplayGroup.prototype.constructor = WebGLReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    return [];\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplayGroup.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var this$1 = this;\n\n    var functions = [];\n    var zKey;\n    for (zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        functions.push(\n          replays[replayKey].getDeleteResourcesFunction(context));\n      }\n    }\n    return function() {\n      var arguments$1 = arguments;\n      var this$1 = this;\n\n      var length = functions.length;\n      var result;\n      for (var i = 0; i < length; i++) {\n        result = functions[i].apply(this$1, arguments$1);\n      }\n      return result;\n    };\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   */\n  WebGLReplayGroup.prototype.finish = function finish (context) {\n    var this$1 = this;\n\n    var zKey;\n    for (zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish(context);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLReplayGroup.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    var this$1 = this;\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this$1.replaysByZIndex_[zs[i].toString()];\n      for (j = 0, jj = ORDER.length; j < jj; ++j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          replay.replay(context,\n            center, resolution, rotation, size, pixelRatio,\n            opacity, skippedFeaturesHash,\n            undefined, false);\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting\n   *  this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.replayHitDetection_ = function replayHitDetection_ (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(function(a, b) {\n      return b - a;\n    });\n\n    var i, ii, j, replays, replay, result;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this$1.replaysByZIndex_[zs[i].toString()];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          result = replay.replay(context,\n            center, resolution, rotation, size, pixelRatio, opacity,\n            skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} callback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    callback\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      // build an extent around the coordinate, so that only features that\n      // intersect this extent are checked\n      hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n    }\n\n    return this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n        if (imageData[3] > 0) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }, true, hitExtent);\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  WebGLReplayGroup.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n    var hasFeature = this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n       * @return {boolean} Is there a feature?\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n        return imageData[3] > 0;\n      }, false);\n\n    return hasFeature !== undefined;\n  };\n\n  return WebGLReplayGroup;\n}(ReplayGroup));\n\n\nexport default WebGLReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/webgl/Immediate\n */\n\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from './ReplayGroup.js';\n\nvar WebGLImmediateRenderer = (function (VectorContext) {\n  function WebGLImmediateRenderer(context, center, resolution, rotation, size, extent, pixelRatio) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     */\n    this.center_ = center;\n\n    /**\n     * @private\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     */\n    this.rotation_ = rotation;\n\n    /**\n     * @private\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Image.js\").default}\n     */\n    this.imageStyle_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Fill.js\").default}\n     */\n    this.fillStyle_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Stroke.js\").default}\n     */\n    this.strokeStyle_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Text.js\").default}\n     */\n    this.textStyle_ = null;\n\n  }\n\n  if ( VectorContext ) WebGLImmediateRenderer.__proto__ = VectorContext;\n  WebGLImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLImmediateRenderer.prototype.constructor = WebGLImmediateRenderer;\n\n  /**\n   * @param {import(\"./ReplayGroup.js\").default} replayGroup Replay group.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @private\n   */\n  WebGLImmediateRenderer.prototype.drawText_ = function drawText_ (replayGroup, geometry) {\n    var context = this.context_;\n    var replay = /** @type {import(\"./TextReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.TEXT));\n    replay.setTextStyle(this.textStyle_);\n    replay.drawText(geometry, null);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry), null);\n        break;\n      default:\n        // pass\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry, data) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPoint = function drawPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./ImageReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawPoint(geometry, data);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./ImageReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawMultiPoint(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawLineString = function drawLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./LineStringReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./LineStringReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawMultiLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./PolygonReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./PolygonReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawMultiPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawCircle = function drawCircle (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./CircleReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.CIRCLE));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawCircle(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    this.imageStyle_ = imageStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    this.fillStyle_ = fillStyle;\n    this.strokeStyle_ = strokeStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    this.textStyle_ = textStyle;\n  };\n\n  return WebGLImmediateRenderer;\n}(VectorContext));\n\n\nexport default WebGLImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n\n//# sourceMappingURL=defaultmapshader.js.map","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/renderer/webgl/Layer\n */\nimport {abstract} from '../../util.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from './defaultmapshader.js';\nimport Locations from './defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\n/**\n * @abstract\n */\nvar WebGLLayerRenderer = (function (LayerRenderer) {\n  function WebGLLayerRenderer(mapRenderer, layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"./Map.js\").default}\n     */\n    this.mapRenderer = mapRenderer;\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Buffer.js\").default}\n     */\n    this.arrayBuffer_ = new WebGLBuffer([\n      -1, -1, 0, 0,\n      1, -1, 1, 0,\n      -1, 1, 0, 1,\n      1, 1, 1, 1\n    ]);\n\n    /**\n     * @protected\n     * @type {WebGLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * @protected\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.framebufferDimension = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.texCoordMatrix = createTransform();\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.projectionMatrix = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {import(\"./defaultmapshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n  }\n\n  if ( LayerRenderer ) WebGLLayerRenderer.__proto__ = LayerRenderer;\n  WebGLLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  WebGLLayerRenderer.prototype.constructor = WebGLLayerRenderer;\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} framebufferDimension Framebuffer dimension.\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.bindFramebuffer = function bindFramebuffer (frameState, framebufferDimension) {\n\n    var gl = this.mapRenderer.getGL();\n\n    if (this.framebufferDimension === undefined ||\n        this.framebufferDimension != framebufferDimension) {\n      /**\n       * @param {WebGLRenderingContext} gl GL.\n       * @param {WebGLFramebuffer} framebuffer Framebuffer.\n       * @param {WebGLTexture} texture Texture.\n       */\n      var postRenderFunction = function(gl, framebuffer, texture) {\n        if (!gl.isContextLost()) {\n          gl.deleteFramebuffer(framebuffer);\n          gl.deleteTexture(texture);\n        }\n      }.bind(null, gl, this.framebuffer, this.texture);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n\n      var texture = createEmptyTexture(\n        gl, framebufferDimension, framebufferDimension);\n\n      var framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(FRAMEBUFFER,\n        COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n      this.texture = texture;\n      this.framebuffer = framebuffer;\n      this.framebufferDimension = framebufferDimension;\n\n    } else {\n      gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n    }\n\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   */\n  WebGLLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n    context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n    var gl = context.getGL();\n\n    var program = context.getProgram(fragment, vertex);\n\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    if (context.useProgram(program)) {\n      gl.enableVertexAttribArray(locations.a_position);\n      gl.vertexAttribPointer(\n        locations.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(locations.a_texCoord);\n      gl.vertexAttribPointer(\n        locations.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(locations.u_texture, 0);\n    }\n\n    gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n      fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n    gl.uniform1f(locations.u_opacity, layerState.opacity);\n    gl.bindTexture(TEXTURE_2D, this.getTexture());\n    gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var viewState = frameState.viewState;\n      var resolution = viewState.resolution;\n      var pixelRatio = frameState.pixelRatio;\n      var extent = frameState.extent;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n      var size = frameState.size;\n\n      var render = new WebGLImmediateRenderer(\n        context, center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(\n        type, render, frameState, null, context);\n      layer.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @return {!import(\"../../transform.js\").Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getTexCoordMatrix = function getTexCoordMatrix () {\n    return this.texCoordMatrix;\n  };\n\n  /**\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLLayerRenderer.prototype.getTexture = function getTexture () {\n    return this.texture;\n  };\n\n  /**\n   * @return {!import(\"../../transform.js\").Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getProjectionMatrix = function getProjectionMatrix () {\n    return this.projectionMatrix;\n  };\n\n  /**\n   * Handle webglcontextlost.\n   */\n  WebGLLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    this.texture = null;\n    this.framebuffer = null;\n    this.framebufferDimension = undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  WebGLLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  WebGLLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    return abstract();\n  };\n\n  return WebGLLayerRenderer;\n}(LayerRenderer));\n\n\nexport default WebGLLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @classdesc\n * WebGL renderer for image layers.\n * @api\n */\nvar WebGLImageLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLImageLayerRenderer(mapRenderer, imageLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, imageLayer);\n\n    /**\n     * The last rendered image.\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../../transform.js\").Transform}\n     */\n    this.hitTransformationMatrix_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLImageLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLImageLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLImageLayerRenderer.prototype.constructor = WebGLImageLayerRenderer;\n\n  /**\n   * @param {import(\"../../ImageBase.js\").default} image Image.\n   * @private\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLImageLayerRenderer.prototype.createTexture_ = function createTexture_ (image) {\n\n    // We meet the conditions to work with non-power of two textures.\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n    // http://learningwebgl.com/blog/?p=2101\n\n    var imageElement = image.getImage();\n    var gl = this.mapRenderer.getGL();\n\n    return createTexture(\n      gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n\n    var gl = this.mapRenderer.getGL();\n\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var viewRotation = viewState.rotation;\n\n    var image = this.image_;\n    var texture = this.texture;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var image_ = imageSource.getImage(renderedExtent, viewResolution,\n        pixelRatio, projection);\n      if (image_) {\n        var loaded = this.loadImage(image_);\n        if (loaded) {\n          image = image_;\n          texture = this.createTexture_(image_);\n          if (this.texture) {\n            /**\n             * @param {WebGLRenderingContext} gl GL.\n             * @param {WebGLTexture} texture Texture.\n             */\n            var postRenderFunction = function(gl, texture) {\n              if (!gl.isContextLost()) {\n                gl.deleteTexture(texture);\n              }\n            }.bind(null, gl, this.texture);\n            frameState.postRenderFunctions.push(\n              /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n            );\n          }\n        }\n      }\n    }\n\n    if (image) {\n      var canvas = this.mapRenderer.getContext().getCanvas();\n\n      this.updateProjectionMatrix_(canvas.width, canvas.height,\n        pixelRatio, viewCenter, viewResolution, viewRotation,\n        image.getExtent());\n      this.hitTransformationMatrix_ = null;\n\n      // Translate and scale to flip the Y coord.\n      var texCoordMatrix = this.texCoordMatrix;\n      resetTransform(texCoordMatrix);\n      scaleTransform(texCoordMatrix, 1, -1);\n      translateTransform(texCoordMatrix, 0, -1);\n\n      this.image_ = image;\n      this.texture = texture;\n    }\n\n    return !!image;\n  };\n\n  /**\n   * @param {number} canvasWidth Canvas width.\n   * @param {number} canvasHeight Canvas height.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../coordinate.js\").Coordinate} viewCenter View center.\n   * @param {number} viewResolution View resolution.\n   * @param {number} viewRotation View rotation.\n   * @param {import(\"../../extent.js\").Extent} imageExtent Image extent.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.updateProjectionMatrix_ = function updateProjectionMatrix_ (\n    canvasWidth,\n    canvasHeight,\n    pixelRatio,\n    viewCenter,\n    viewResolution,\n    viewRotation,\n    imageExtent\n  ) {\n\n    var canvasExtentWidth = canvasWidth * viewResolution;\n    var canvasExtentHeight = canvasHeight * viewResolution;\n\n    var projectionMatrix = this.projectionMatrix;\n    resetTransform(projectionMatrix);\n    scaleTransform(projectionMatrix,\n      pixelRatio * 2 / canvasExtentWidth,\n      pixelRatio * 2 / canvasExtentHeight);\n    rotateTransform(projectionMatrix, -viewRotation);\n    translateTransform(projectionMatrix,\n      imageExtent[0] - viewCenter[0],\n      imageExtent[1] - viewCenter[1]);\n    scaleTransform(projectionMatrix,\n      (imageExtent[2] - imageExtent[0]) / 2,\n      (imageExtent[3] - imageExtent[1]) / 2);\n    translateTransform(projectionMatrix, 1, 1);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.image_ || !this.image_.getImage()) {\n      return undefined;\n    }\n\n    var imageSize =\n        [this.image_.getImage().width, this.image_.getImage().height];\n\n    if (!this.hitTransformationMatrix_) {\n      this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n        frameState.size, imageSize);\n    }\n\n    var pixelOnFrameBuffer = applyTransform(\n      this.hitTransformationMatrix_, pixel.slice());\n\n    if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n        pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n      // outside the image, no need to check\n      return undefined;\n    }\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.image_.getImage(),\n      pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * The transformation matrix to get the pixel on the image for a\n   * pixel on the map.\n   * @param {import(\"../../size.js\").Size} mapSize The map size.\n   * @param {import(\"../../size.js\").Size} imageSize The image size.\n   * @return {import(\"../../transform.js\").Transform} The transformation matrix.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.getHitTransformationMatrix_ = function getHitTransformationMatrix_ (mapSize, imageSize) {\n    // the first matrix takes a map pixel, flips the y-axis and scales to\n    // a range between -1 ... 1\n    var mapCoordTransform = createTransform();\n    translateTransform(mapCoordTransform, -1, -1);\n    scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n    translateTransform(mapCoordTransform, 0, mapSize[1]);\n    scaleTransform(mapCoordTransform, 1, -1);\n\n    // the second matrix is the inverse of the projection matrix used in the\n    // shader for drawing\n    var projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n    // the third matrix scales to the image dimensions and flips the y-axis again\n    var transform = createTransform();\n    translateTransform(transform, 0, imageSize[1]);\n    scaleTransform(transform, 1, -1);\n    scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n    translateTransform(transform, 1, 1);\n\n    multiplyTransform(transform, projectionMatrixInv);\n    multiplyTransform(transform, mapCoordTransform);\n\n    return transform;\n  };\n\n  return WebGLImageLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {WebGLImageLayerRenderer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\n    /** @type {import(\"../../layer/Image.js\").default} */ (layer)\n  );\n};\n\n\nexport default WebGLImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nvar WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @classdesc\n * WebGL map renderer.\n * @api\n */\nvar WebGLMapRenderer = (function (MapRenderer) {\n  function WebGLMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = /** @type {HTMLCanvasElement} */\n      (document.createElement('canvas'));\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasWidth_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasHeight_ = 0;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.clipTileContext_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_, {\n      antialias: true,\n      depth: true,\n      failIfMajorPerformanceCaveat: true,\n      preserveDrawingBuffer: false,\n      stencil: true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Context.js\").default}\n     */\n    this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n    /**\n     * @private\n     * @type {import(\"../../structs/LRUCache.js\").default<TextureCacheEntry|null>}\n     */\n    this.textureCache_ = new LRUCache();\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../structs/PriorityQueue.js\").default<Array>}\n     */\n    this.tileTextureQueue_ = new PriorityQueue(\n      /**\n       * @param {Array<*>} element Element.\n       * @return {number} Priority.\n       * @this {WebGLMapRenderer}\n       */\n      (function(element) {\n        var tileCenter = /** @type {import(\"../../coordinate.js\").Coordinate} */ (element[1]);\n        var tileResolution = /** @type {number} */ (element[2]);\n        var deltaX = tileCenter[0] - this.focus_[0];\n        var deltaY = tileCenter[1] - this.focus_[1];\n        return 65536 * Math.log(tileResolution) +\n              Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n      }).bind(this),\n      /**\n       * @param {Array<*>} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (\n          /** @type {import(\"../../Tile.js\").default} */ (element[0]).getKey()\n        );\n      });\n\n\n    /**\n     * @param {import(\"../../PluggableMap.js\").default} map Map.\n     * @param {?import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} false.\n     * @this {WebGLMapRenderer}\n     */\n    this.loadNextTileTexture_ =\n        function(map, frameState) {\n          if (!this.tileTextureQueue_.isEmpty()) {\n            this.tileTextureQueue_.reprioritize();\n            var element = this.tileTextureQueue_.dequeue();\n            var tile = /** @type {import(\"../../Tile.js\").default} */ (element[0]);\n            var tileSize = /** @type {import(\"../../size.js\").Size} */ (element[3]);\n            var tileGutter = /** @type {number} */ (element[4]);\n            this.bindTileTexture(\n              tile, tileSize, tileGutter, LINEAR, LINEAR);\n          }\n          return false;\n        }.bind(this);\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    this.initializeGL_();\n  }\n\n  if ( MapRenderer ) WebGLMapRenderer.__proto__ = MapRenderer;\n  WebGLMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  WebGLMapRenderer.prototype.constructor = WebGLMapRenderer;\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../size.js\").Size} tileSize Tile size.\n   * @param {number} tileGutter Tile gutter.\n   * @param {number} magFilter Mag filter.\n   * @param {number} minFilter Min filter.\n   */\n  WebGLMapRenderer.prototype.bindTileTexture = function bindTileTexture (tile, tileSize, tileGutter, magFilter, minFilter) {\n    var gl = this.getGL();\n    var tileKey = tile.getKey();\n    if (this.textureCache_.containsKey(tileKey)) {\n      var textureCacheEntry = this.textureCache_.get(tileKey);\n      gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n      if (textureCacheEntry.magFilter != magFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n        textureCacheEntry.magFilter = magFilter;\n      }\n      if (textureCacheEntry.minFilter != minFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n        textureCacheEntry.minFilter = minFilter;\n      }\n    } else {\n      var texture = gl.createTexture();\n      var imageTile = /** @type {import(\"../../ImageTile.js\").default} */ (tile);\n      gl.bindTexture(TEXTURE_2D, texture);\n      if (tileGutter > 0) {\n        var clipTileCanvas = this.clipTileContext_.canvas;\n        var clipTileContext = this.clipTileContext_;\n        if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n            this.clipTileCanvasHeight_ !== tileSize[1]) {\n          clipTileCanvas.width = tileSize[0];\n          clipTileCanvas.height = tileSize[1];\n          this.clipTileCanvasWidth_ = tileSize[0];\n          this.clipTileCanvasHeight_ = tileSize[1];\n        } else {\n          clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n        }\n        clipTileContext.drawImage(imageTile.getImage(), tileGutter, tileGutter,\n          tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, clipTileCanvas);\n      } else {\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, imageTile.getImage());\n      }\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n        CLAMP_TO_EDGE);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n        CLAMP_TO_EDGE);\n      this.textureCache_.set(tileKey, {\n        texture: texture,\n        magFilter: magFilter,\n        minFilter: minFilter\n      });\n    }\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  WebGLMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    if (map.hasListener(type)) {\n      var context = this.context_;\n\n      var extent = frameState.extent;\n      var size = frameState.size;\n      var viewState = frameState.viewState;\n      var pixelRatio = frameState.pixelRatio;\n\n      var resolution = viewState.resolution;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n\n      var vectorContext = new WebGLImmediateRenderer(context,\n        center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, null, context);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.disposeInternal = function disposeInternal () {\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      this.textureCache_.forEach(\n        /**\n         * @param {?TextureCacheEntry} textureCacheEntry\n         *     Texture cache entry.\n         */\n        function(textureCacheEntry) {\n          if (textureCacheEntry) {\n            gl.deleteTexture(textureCacheEntry.texture);\n          }\n        });\n    }\n    this.context_.dispose();\n    MapRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").default} map Map.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLMapRenderer.prototype.expireCache_ = function expireCache_ (map, frameState) {\n    var this$1 = this;\n\n    var gl = this.getGL();\n    var textureCacheEntry;\n    while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      textureCacheEntry = this$1.textureCache_.peekLast();\n      if (!textureCacheEntry) {\n        if (+this$1.textureCache_.peekLastKey() == frameState.index) {\n          break;\n        } else {\n          --this$1.textureCacheFrameMarkerCount_;\n        }\n      } else {\n        gl.deleteTexture(textureCacheEntry.texture);\n      }\n      this$1.textureCache_.pop();\n    }\n  };\n\n  /**\n   * @return {import(\"../../webgl/Context.js\").default} The context.\n   */\n  WebGLMapRenderer.prototype.getContext = function getContext () {\n    return this.context_;\n  };\n\n  /**\n   * @return {WebGLRenderingContext} GL.\n   */\n  WebGLMapRenderer.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * @return {import(\"../../structs/PriorityQueue.js\").default<Array>} Tile texture queue.\n   */\n  WebGLMapRenderer.prototype.getTileTextureQueue = function getTileTextureQueue () {\n    return this.tileTextureQueue_;\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost (event) {\n    event.preventDefault();\n    this.textureCache_.clear();\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    var renderers = this.getLayerRenderers();\n    for (var id in renderers) {\n      var renderer = /** @type {import(\"./Layer.js\").default} */ (renderers[id]);\n      renderer.handleWebGLContextLost();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n    this.initializeGL_();\n    this.getMap().render();\n  };\n\n  /**\n   * @private\n   */\n  WebGLMapRenderer.prototype.initializeGL_ = function initializeGL_ () {\n    var gl = this.gl_;\n    gl.activeTexture(TEXTURE0);\n    gl.blendFuncSeparate(\n      SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n      ONE, ONE_MINUS_SRC_ALPHA);\n    gl.disable(CULL_FACE);\n    gl.disable(DEPTH_TEST);\n    gl.disable(SCISSOR_TEST);\n    gl.disable(STENCIL_TEST);\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Is tile texture loaded.\n   */\n  WebGLMapRenderer.prototype.isTileTextureLoaded = function isTileTextureLoaded (tile) {\n    return this.textureCache_.containsKey(tile.getKey());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    var context = this.getContext();\n    var gl = this.getGL();\n\n    if (gl.isContextLost()) {\n      return false;\n    }\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return false;\n    }\n\n    this.focus_ = frameState.focus;\n\n    this.textureCache_.set((-frameState.index).toString(), null);\n    ++this.textureCacheFrameMarkerCount_;\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    /** @type {Array<import(\"../../layer/Layer.js\").State>} */\n    var layerStatesToDraw = [];\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (visibleAtResolution(layerState, viewResolution) &&\n          layerState.sourceState == SourceState.READY) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this$1.getLayerRenderer(layerState.layer));\n        if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n          layerStatesToDraw.push(layerState);\n        }\n      }\n    }\n\n    var width = frameState.size[0] * frameState.pixelRatio;\n    var height = frameState.size[1] * frameState.pixelRatio;\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    }\n\n    gl.bindFramebuffer(FRAMEBUFFER, null);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.enable(BLEND);\n    gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n    for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n      var layerState$1 = layerStatesToDraw[i];\n      var layerRenderer$1 = /** @type {import(\"./Layer.js\").default} */ (this$1.getLayerRenderer(layerState$1.layer));\n      layerRenderer$1.composeFrame(frameState, layerState$1, context);\n    }\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.calculateMatrices2D(frameState);\n\n    if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (this.expireCache_.bind(this))\n      );\n    }\n\n    if (!this.tileTextureQueue_.isEmpty()) {\n      frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n      frameState.animate = true;\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          coordinate, frameState, hitTolerance, callback);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var this$1 = this;\n\n    var hasFeature = false;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        hasFeature =\n            layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n        if (hasFeature) {\n          return true;\n        }\n      }\n    }\n    return hasFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n    var result;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtPixel(\n          pixel, frameState, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  return WebGLMapRenderer;\n}(MapRenderer));\n\n\nexport default WebGLMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = (function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = (function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = (function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      var tile = this$1.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this$1.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = (function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n  var this$1 = this;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this$1.resolutions_[i] / this$1.resolutions_[i + 1];\n      } else {\n        if (this$1.resolutions_[i] / this$1.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n    var this$1 = this;\n\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this$1.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this$1.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n    var this$1 = this;\n\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this$1.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = (function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = (function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n\n//# sourceMappingURL=tilelayershader.js.map","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport LayerType from '../../LayerType.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport TileSource from '../../source/Tile.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {fragment, vertex} from './tilelayershader.js';\nimport Locations from './tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @api\n */\nvar WebGLTileLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLTileLayerRenderer(mapRenderer, tileLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, tileLayer);\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Fragment.js\").default}\n     */\n    this.fragmentShader_ = fragment;\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Vertex.js\").default}\n     */\n    this.vertexShader_ = vertex;\n\n    /**\n     * @private\n     * @type {import(\"./tilelayershader/Locations.js\").default}\n     */\n    this.locations_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Buffer.js\").default}\n     */\n    this.renderArrayBuffer_ = new WebGLBuffer([\n      0, 0, 0, 1,\n      1, 0, 1, 1,\n      0, 1, 0, 0,\n      1, 1, 1, 0\n    ]);\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.renderedTileRange_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedFramebufferExtent_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLTileLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLTileLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLTileLayerRenderer.prototype.constructor = WebGLTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var context = this.mapRenderer.getContext();\n    context.deleteBuffer(this.renderArrayBuffer_);\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    var mapRenderer = this.mapRenderer;\n\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          var loaded = mapRenderer.isTileTextureLoaded(tile);\n          if (loaded) {\n            if (!tiles[zoom]) {\n              tiles[zoom] = {};\n            }\n            tiles[zoom][tile.tileCoord.toString()] = tile;\n          }\n          return loaded;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\n    this.locations_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    var this$1 = this;\n\n\n    var mapRenderer = this.mapRenderer;\n    var gl = context.getGL();\n\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = tileLayer.getSource();\n    if (!(tileSource instanceof TileSource)) {\n      return true;\n    }\n\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewState.resolution);\n    var tileResolution = tileGrid.getResolution(z);\n\n    var tilePixelSize =\n        tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n    var pixelRatio = tilePixelSize[0] /\n        toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n    var tilePixelResolution = tileResolution / pixelRatio;\n    var tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutterForProjection(projection);\n\n    var center = viewState.center;\n    var extent = frameState.extent;\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    var framebufferExtent;\n    if (this.renderedTileRange_ &&\n        this.renderedTileRange_.equals(tileRange) &&\n        this.renderedRevision_ == tileSource.getRevision()) {\n      framebufferExtent = this.renderedFramebufferExtent_;\n    } else {\n\n      var tileRangeSize = tileRange.getSize();\n\n      var maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n      var framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n      var framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n      var origin = tileGrid.getOrigin(z);\n      var minX = origin[0] +\n          tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n      var minY = origin[1] +\n          tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n      framebufferExtent = [\n        minX, minY,\n        minX + framebufferExtentDimension, minY + framebufferExtentDimension\n      ];\n\n      this.bindFramebuffer(frameState, framebufferDimension);\n      gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n      gl.clearColor(0, 0, 0, 0);\n      gl.clear(COLOR_BUFFER_BIT);\n      gl.disable(BLEND);\n\n      var program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n      context.useProgram(program);\n      if (!this.locations_) {\n        this.locations_ = new Locations(gl, program);\n      }\n\n      context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n      gl.enableVertexAttribArray(this.locations_.a_position);\n      gl.vertexAttribPointer(\n        this.locations_.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(this.locations_.a_texCoord);\n      gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(this.locations_.u_texture, 0);\n\n      /**\n       * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n       */\n      var tilesToDrawByZ = {};\n      tilesToDrawByZ[z] = {};\n\n      var findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n      var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n      var allTilesLoaded = true;\n      var tmpExtent = createEmpty();\n      var tmpTileRange = new TileRange(0, 0, 0, 0);\n      var childTileRange, drawable, fullyLoaded, tile, tileState;\n      var x, y, tileExtent;\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (layerState.extent !== undefined) {\n            // ignore tiles outside layer extent\n            tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n            if (!intersects(tileExtent, layerState.extent)) {\n              continue;\n            }\n          }\n          tileState = tile.getState();\n          drawable = tileState == TileState.LOADED ||\n              tileState == TileState.EMPTY ||\n              tileState == TileState.ERROR && !useInterimTilesOnError;\n          if (!drawable) {\n            tile = tile.getInterimTile();\n          }\n          tileState = tile.getState();\n          if (tileState == TileState.LOADED) {\n            if (mapRenderer.isTileTextureLoaded(tile)) {\n              tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n              continue;\n            }\n          } else if (tileState == TileState.EMPTY ||\n                     (tileState == TileState.ERROR &&\n                      !useInterimTilesOnError)) {\n            continue;\n          }\n\n          allTilesLoaded = false;\n          fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n          if (!fullyLoaded) {\n            childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n            if (childTileRange) {\n              findLoadedTiles(z + 1, childTileRange);\n            }\n          }\n\n        }\n\n      }\n\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(numberSafeCompareFunction);\n      var u_tileOffset = new Float32Array(4);\n      for (var i = 0, ii = zs.length; i < ii; ++i) {\n        var tilesToDraw = tilesToDrawByZ[zs[i]];\n        for (var tileKey in tilesToDraw) {\n          tile = tilesToDraw[tileKey];\n\n          if (!(tile instanceof ImageTile)) {\n            continue;\n          }\n\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n              framebufferExtentDimension;\n          u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n              framebufferExtentDimension;\n          u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n              framebufferExtentDimension - 1;\n          u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n              framebufferExtentDimension - 1;\n          gl.uniform4fv(this$1.locations_.u_tileOffset, u_tileOffset);\n          mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, LINEAR, LINEAR);\n          gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n        }\n      }\n\n      if (allTilesLoaded) {\n        this.renderedTileRange_ = tileRange;\n        this.renderedFramebufferExtent_ = framebufferExtent;\n        this.renderedRevision_ = tileSource.getRevision();\n      } else {\n        this.renderedTileRange_ = null;\n        this.renderedFramebufferExtent_ = null;\n        this.renderedRevision_ = -1;\n        frameState.animate = true;\n      }\n\n    }\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    var tileTextureQueue = mapRenderer.getTileTextureQueue();\n    this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {import(\"../../Tile.js\").default} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == TileState.LOADED &&\n              !mapRenderer.isTileTextureLoaded(tile) &&\n              !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n    this.scheduleExpireCache(frameState, tileSource);\n\n    var texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    translateTransform(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    if (viewState.rotation !== 0) {\n      rotateTransform(texCoordMatrix, viewState.rotation);\n    }\n    scaleTransform(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    translateTransform(texCoordMatrix, -0.5, -0.5);\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.framebuffer) {\n      return undefined;\n    }\n\n    var pixelOnMapScaled = [\n      pixel[0] / frameState.size[0],\n      (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n    var pixelOnFrameBufferScaled = applyTransform(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n    var pixelOnFrameBuffer = [\n      pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n      pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n    var gl = this.mapRenderer.getContext().getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    var imageData = new Uint8Array(4);\n    gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return WebGLTileLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {WebGLTileLayerRenderer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\n    /** @type {import(\"../../layer/Tile.js\").default} */ (layer)\n  );\n};\n\n\nexport default WebGLTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n\n/**\n * @classdesc\n * WebGL renderer for vector layers.\n * @api\n */\nvar WebGLVectorLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLVectorLayerRenderer(mapRenderer, vectorLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, vectorLayer);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/webgl/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * The last layer state.\n     * @private\n     * @type {?import(\"../../layer/Layer.js\").State}\n     */\n    this.layerState_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLVectorLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLVectorLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLVectorLayerRenderer.prototype.constructor = WebGLVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    this.layerState_ = layerState;\n    var viewState = frameState.viewState;\n    var replayGroup = this.replayGroup_;\n    var size = frameState.size;\n    var pixelRatio = frameState.pixelRatio;\n    var gl = this.mapRenderer.getGL();\n    if (replayGroup && !replayGroup.isEmpty()) {\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n      replayGroup.replay(context,\n        viewState.center, viewState.resolution, viewState.rotation,\n        size, pixelRatio, layerState.opacity,\n        layerState.managed ? frameState.skippedFeatureUids : {});\n      gl.disable(gl.SCISSOR_TEST);\n    }\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var replayGroup = this.replayGroup_;\n    if (replayGroup) {\n      var context = this.mapRenderer.getContext();\n      replayGroup.getDeleteResourcesFunction(context)();\n      this.replayGroup_ = null;\n    }\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return undefined;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layer = this.getLayer();\n      var layerState = this.layerState_;\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        });\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return false;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layerState = this.layerState_;\n      return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        frameState.skippedFeatureUids);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    var hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  WebGLVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      return true;\n    }\n\n    if (this.replayGroup_) {\n      frameState.postRenderFunctions.push(\n        this.replayGroup_.getDeleteResourcesFunction(context));\n    }\n\n    this.dirty_ = false;\n\n    var replayGroup = new WebGLReplayGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {WebGLVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      features.forEach(render.bind(this));\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish(context);\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of\n   *     styles.\n   * @param {import(\"../../render/webgl/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  WebGLVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = styles.length - 1, ii = 0; i >= ii; --i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n    return loading;\n  };\n\n  return WebGLVectorLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {WebGLVectorLayerRenderer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer)\n  );\n};\n\n\nexport default WebGLVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/WebGLMap\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar WebGLMap = (function (PluggableMap) {\n  function WebGLMap(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) WebGLMap.__proto__ = PluggableMap;\n  WebGLMap.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  WebGLMap.prototype.constructor = WebGLMap;\n\n  WebGLMap.prototype.createRenderer = function createRenderer () {\n    var renderer = new WebGLMapRenderer(this);\n    renderer.registerLayerRenderers([\n      WebGLImageLayerRenderer,\n      WebGLTileLayerRenderer,\n      WebGLVectorLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return WebGLMap;\n}(PluggableMap));\n\n\nexport default WebGLMap;\n\n//# sourceMappingURL=WebGLMap.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Element, Array<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Element, *, Array<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    var n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        var array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    var parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  var serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      var serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  var fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      var node = context.node;\n      var nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  var length = orderedKeys.length;\n  var sequence = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  var i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      var parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  var this$1 = this;\n\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\n  var value, node;\n  for (var i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this$1, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = (function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  var resolutions = [];\n  /** @type {!Array<string>} */\n  var matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  var origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = (function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = (function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = (function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = (function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n//# sourceMappingURL=net.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = (function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    var this$1 = this;\n\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this$1.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this$1.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = (function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = (function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this$1.tileCacheForProjection) {\n        if (this$1.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this$1.tileCacheForProjection) {\n      var tileCache = this$1.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this$1.tileCacheForProjection) {\n      this$1.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = (function (TileImage) {\n  function BingMaps(options) {\n\n    var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    TileImage.call(this, {\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  if ( TileImage ) BingMaps.__proto__ = TileImage;\n  BingMaps.prototype = Object.create( TileImage && TileImage.prototype );\n  BingMaps.prototype.constructor = BingMaps;\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  BingMaps.prototype.getApiKey = function getApiKey () {\n    return this.apiKey_;\n  };\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  BingMaps.prototype.getImagerySet = function getImagerySet () {\n    return this.imagerySet_;\n  };\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  BingMaps.prototype.handleImageryMetadataResponse = function handleImageryMetadataResponse (response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    var resource = response.resourceSets[0].resources[0];\n    var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    var sourceProjection = this.getProjection();\n    var extent = extentFromProjection(sourceProjection);\n    var scale = this.hidpi_ ? 2 : 1;\n    var tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth / scale :\n      [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    var tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize\n    });\n    this.tileGrid = tileGrid;\n\n    var culture = this.culture_;\n    var hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        var quadKeyTileCoord = [0, 0, 0];\n        var imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n              var url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      var transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        var attributions = [];\n        var viewState = frameState.viewState;\n        var tileGrid = this.getTileGrid();\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n        var zoom = tileCoord[0];\n        resource.imageryProviders.map(function(imageryProvider) {\n          var intersecting = false;\n          var coverageAreas = imageryProvider.coverageAreas;\n          for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            var coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              var bbox = coverageArea.bbox;\n              var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              var extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      }.bind(this));\n    }\n\n    this.setState(SourceState.READY);\n  };\n\n  return BingMaps;\n}(TileImage));\n\nexport default BingMaps;\n\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = (function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/CartoDB\n */\n\nimport {assign} from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = (function (XYZ) {\n  function CartoDB(options) {\n    XYZ.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  if ( XYZ ) CartoDB.__proto__ = XYZ;\n  CartoDB.prototype = Object.create( XYZ && XYZ.prototype );\n  CartoDB.prototype.constructor = CartoDB;\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  CartoDB.prototype.getConfig = function getConfig () {\n    return this.config_;\n  };\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  CartoDB.prototype.updateConfig = function updateConfig (config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  };\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  CartoDB.prototype.setConfig = function setConfig (config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  };\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  CartoDB.prototype.initializeMap_ = function initializeMap_ () {\n    var paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    var client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  };\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  CartoDB.prototype.handleInitResponse_ = function handleInitResponse_ (paramHash, event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  CartoDB.prototype.handleInitError_ = function handleInitError_ (event) {\n    this.setState(SourceState.ERROR);\n  };\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  CartoDB.prototype.applyTemplate_ = function applyTemplate_ (data) {\n    var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  };\n\n  return CartoDB;\n}(XYZ));\n\n\nexport default CartoDB;\n\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = (function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = (function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var this$1 = this;\n\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this$1.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this$1.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this$1.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this$1.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    var this$1 = this;\n\n    if (opt_fast) {\n      for (var featureId in this$1.featureChangeKeys_) {\n        var keys = this$1.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this$1.nullGeometryFeatures_) {\n          this$1.removeFeatureInternal(this$1.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var this$1 = this;\n\n    var removed = false;\n    for (var id in this$1.idIndex_) {\n      if (this$1.idIndex_[id] === feature) {\n        delete this$1.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = (function (VectorSource) {\n  function Cluster(options) {\n    VectorSource.call(this, {\n      attributions: options.attributions,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction = options.geometryFunction || function(feature) {\n      var geometry = /** @type {Point} */ (feature.getGeometry());\n      assert(geometry.getType() == GeometryType.POINT,\n        10); // The default `geometryFunction` can only handle `Point` geometries\n      return geometry;\n    };\n\n    /**\n     * @type {VectorSource}\n     * @protected\n     */\n    this.source = options.source;\n\n    listen(this.source, EventType.CHANGE, this.refresh, this);\n  }\n\n  if ( VectorSource ) Cluster.__proto__ = VectorSource;\n  Cluster.prototype = Object.create( VectorSource && VectorSource.prototype );\n  Cluster.prototype.constructor = Cluster;\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  Cluster.prototype.getDistance = function getDistance () {\n    return this.distance;\n  };\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource} Source.\n   * @api\n   */\n  Cluster.prototype.getSource = function getSource () {\n    return this.source;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Cluster.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.clear();\n      this.resolution = resolution;\n      this.cluster();\n      this.addFeatures(this.features);\n    }\n  };\n\n  /**\n   * Set the distance in pixels between clusters.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  Cluster.prototype.setDistance = function setDistance (distance) {\n    this.distance = distance;\n    this.refresh();\n  };\n\n  /**\n   * handle the source changing\n   * @override\n   */\n  Cluster.prototype.refresh = function refresh () {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n    VectorSource.prototype.refresh.call(this);\n  };\n\n  /**\n   * @protected\n   */\n  Cluster.prototype.cluster = function cluster () {\n    var this$1 = this;\n\n    if (this.resolution === undefined) {\n      return;\n    }\n    this.features.length = 0;\n    var extent = createEmpty();\n    var mapDistance = this.distance * this.resolution;\n    var features = this.source.getFeatures();\n\n    /**\n     * @type {!Object<string, boolean>}\n     */\n    var clustered = {};\n\n    for (var i = 0, ii = features.length; i < ii; i++) {\n      var feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        var geometry = this$1.geometryFunction(feature);\n        if (geometry) {\n          var coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          var neighbors = this$1.source.getFeaturesInExtent(extent);\n          neighbors = neighbors.filter(function(neighbor) {\n            var uid = getUid(neighbor);\n            if (!(uid in clustered)) {\n              clustered[uid] = true;\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this$1.features.push(this$1.createCluster(neighbors));\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  Cluster.prototype.createCluster = function createCluster (features) {\n    var this$1 = this;\n\n    var centroid = [0, 0];\n    for (var i = features.length - 1; i >= 0; --i) {\n      var geometry = this$1.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n\n    var cluster = new Feature(new Point(centroid));\n    cluster.set('features', features);\n    return cluster;\n  };\n\n  return Cluster;\n}(VectorSource));\n\n\nexport default Cluster;\n\n//# sourceMappingURL=Cluster.js.map","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = (function (ImageBase) {\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    var maxSourceExtent = sourceProj.getExtent();\n    var maxTargetExtent = targetProj.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n\n    var triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    ImageBase.call(this, targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  if ( ImageBase ) ReprojImage.__proto__ = ImageBase;\n  ReprojImage.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ReprojImage.prototype.constructor = ReprojImage;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    ImageBase.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  ReprojImage.prototype.getProjection = function getProjection () {\n    return this.targetProj_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.reproject_ = function reproject_ () {\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      var sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.unlistenSource_ = function unlistenSource_ () {\n    unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  };\n\n  return ReprojImage;\n}(ImageBase));\n\n\nexport default ReprojImage;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Image\n */\nimport {abstract} from '../util.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n\n\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = (function (Event) {\n  function ImageSourceEvent(type, image) {\n\n    Event.call(this, type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n  if ( Event ) ImageSourceEvent.__proto__ = Event;\n  ImageSourceEvent.prototype = Object.create( Event && Event.prototype );\n  ImageSourceEvent.prototype.constructor = ImageSourceEvent;\n\n  return ImageSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @api\n */\nvar ImageSource = (function (Source) {\n  function ImageSource(options) {\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  if ( Source ) ImageSource.__proto__ = Source;\n  ImageSource.prototype = Object.create( Source && Source.prototype );\n  ImageSource.prototype.constructor = ImageSource;\n\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n  ImageSource.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  ImageSource.prototype.findNearestResolution = function findNearestResolution (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  ImageSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  ImageSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  ImageSource.prototype.handleImageChange = function handleImageChange (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  };\n\n  return ImageSource;\n}(Source));\n\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n\nexport default ImageSource;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string)} LoadFunction\n * @api\n */\n\n\nvar ImageWrapper = (function (ImageBase) {\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  if ( ImageBase ) ImageWrapper.__proto__ = ImageBase;\n  ImageWrapper.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageWrapper.prototype.constructor = ImageWrapper;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageWrapper.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  ImageWrapper.prototype.load = function load () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  ImageWrapper.prototype.setImage = function setImage (image) {\n    this.image_ = image;\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageWrapper;\n}(ImageBase));\n\n\nexport default ImageWrapper;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = (function (ImageSource) {\n  function ImageArcGISRest(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageArcGISRest.__proto__ = ImageSource;\n  ImageArcGISRest.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageArcGISRest.prototype.constructor = ImageArcGISRest;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageArcGISRest.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    var params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    var centerX = (extent[0] + extent[2]) / 2;\n    var centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      var halfWidth = this.ratio_ * getWidth(extent) / 2;\n      var halfHeight = this.ratio_ * getHeight(extent) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    var width = Math.ceil(getWidth(extent) / imageResolution);\n    var height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - imageResolution * width / 2;\n    extent[2] = centerX + imageResolution * width / 2;\n    extent[1] = centerY - imageResolution * height / 2;\n    extent[3] = centerY + imageResolution * height / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    var url = this.url_;\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  };\n\n  return ImageArcGISRest;\n}(ImageSource));\n\n\nexport default ImageArcGISRest;\n\n//# sourceMappingURL=ImageArcGISRest.js.map","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from './Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = (function (ImageSource) {\n  function ImageCanvasSource(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state\n    });\n\n    /**\n    * @private\n    * @type {FunctionType}\n    */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n    * @private\n    * @type {import(\"../ImageCanvas.js\").default}\n    */\n    this.canvas_ = null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.renderedRevision_ = 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.ratio_ = options.ratio !== undefined ?\n      options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageCanvasSource.__proto__ = ImageSource;\n  ImageCanvasSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageCanvasSource.prototype.constructor = ImageCanvasSource;\n\n  /**\n  * @inheritDoc\n  */\n  ImageCanvasSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    var canvas = this.canvas_;\n    if (canvas &&\n       this.renderedRevision_ == this.getRevision() &&\n       canvas.getResolution() == resolution &&\n       canvas.getPixelRatio() == pixelRatio &&\n       containsExtent(canvas.getExtent(), extent)) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    var canvasElement = this.canvasFunction_.call(\n      this, extent, resolution, pixelRatio, size, projection);\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  };\n\n  return ImageCanvasSource;\n}(ImageSource));\n\n\nexport default ImageCanvasSource;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = (function (ImageSource) {\n  function ImageMapGuide(options) {\n\n    ImageSource.call(this, {\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ = options.displayDpi !== undefined ?\n      options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n      options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ = options.useOverlay !== undefined ?\n      options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n  }\n\n  if ( ImageSource ) ImageMapGuide.__proto__ = ImageSource;\n  ImageMapGuide.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageMapGuide.prototype.constructor = ImageMapGuide;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageMapGuide.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageMapGuide.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      var imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n        projection);\n      image = new ImageWrapper(extent, resolution, pixelRatio,\n        imageUrl, this.crossOrigin_,\n        this.imageLoadFunction_);\n      listen(image, EventType.CHANGE,\n        this.handleImageChange, this);\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageMapGuide.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.changed();\n  };\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  ImageMapGuide.prototype.getUrl = function getUrl (baseUrl, params, extent, size, projection) {\n    var scale = getScale(extent, size,\n      this.metersPerUnit_, this.displayDpi_);\n    var center = getCenter(extent);\n    var baseParams = {\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1]\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  };\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  return ImageMapGuide;\n}(ImageSource));\n\n\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  var mcsW = getWidth(extent);\n  var mcsH = getHeight(extent);\n  var devW = size[0];\n  var devH = size[1];\n  var mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\nexport default ImageMapGuide;\n\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = (function (ImageSource) {\n  function Static(options) {\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : null;\n\n    var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined ?\n          options.imageLoadFunction : defaultImageLoadFunction;\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: getProjection(options.projection)\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(this.imageExtent_, undefined, 1, this.url_, crossOrigin, imageLoadFunction);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  }\n\n  if ( ImageSource ) Static.__proto__ = ImageSource;\n  Static.prototype = Object.create( ImageSource && ImageSource.prototype );\n  Static.prototype.constructor = Static;\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  Static.prototype.getImageExtent = function getImageExtent () {\n    return this.imageExtent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  };\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  Static.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.handleImageChange = function handleImageChange (evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      var imageExtent = this.image_.getExtent();\n      var image = this.image_.getImage();\n      var imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      var resolution = getHeight(imageExtent) / imageHeight;\n      var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        var context = createCanvasContext2D(targetWidth, imageHeight);\n        var canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight,\n          0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    ImageSource.prototype.handleImageChange.call(this, evt);\n  };\n\n  return Static;\n}(ImageSource));\n\n\nexport default Static;\n\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageWMS = (function (ImageSource) {\n  function ImageWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageWMS.__proto__ = ImageSource;\n  ImageWMS.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageWMS.prototype.constructor = ImageWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  ImageWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageWMS.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    var center = getCenter(extent);\n    var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageWMS.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageWMS.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  };\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageWMS.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageWMS.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageWMS.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  ImageWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return ImageWMS;\n}(ImageSource));\n\n\nexport default ImageWMS;\n\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = (function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar ImageLayer = (function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {import(\"../LayerType.js\").default}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {import(\"../source/Image.js\").default} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = (function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/Raster\n */\nimport {getUid} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from './Image.js';\nimport SourceState from './State.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = (function (Event) {\n  function RasterSourceEvent(type, frameState, data) {\n    Event.call(this, type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n\n  }\n\n  if ( Event ) RasterSourceEvent.__proto__ = Event;\n  RasterSourceEvent.prototype = Object.create( Event && Event.prototype );\n  RasterSourceEvent.prototype.constructor = RasterSourceEvent;\n\n  return RasterSourceEvent;\n}(Event));\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires ol/source/Raster~RasterSourceEvent\n * @api\n */\nvar RasterSource = (function (ImageSource) {\n  function RasterSource(options) {\n    var this$1 = this;\n\n    ImageSource.call(this, {\n      projection: null\n    });\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.worker_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ = options.operationType !== undefined ?\n      options.operationType : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../renderer/canvas/Layer.js\").default>}\n     */\n    this.renderers_ = createRenderers(options.sources);\n\n    for (var r = 0, rr = this.renderers_.length; r < rr; ++r) {\n      listen(this$1.renderers_[r], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(\n      function() {\n        return 1;\n      },\n      this.changed.bind(this));\n\n    var layerStatesArray = getLayerStatesArray(this.renderers_);\n\n    /**\n     * @type {Object<string, import(\"../layer/Layer.js\").State>}\n     */\n    var layerStates = {};\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      extent: null,\n      focus: null,\n      index: 0,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      skippedFeatureUids: {},\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0\n      }),\n      viewHints: [],\n      wantedTiles: {}\n    };\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n\n  }\n\n  if ( ImageSource ) RasterSource.__proto__ = ImageSource;\n  RasterSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  RasterSource.prototype.constructor = RasterSource;\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object=} opt_lib Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  RasterSource.prototype.setOperation = function setOperation (operation, opt_lib) {\n    this.worker_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_\n    });\n    this.changed();\n  };\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n   * @private\n   */\n  RasterSource.prototype.updateFrameState_ = function updateFrameState_ (extent, resolution, projection) {\n\n    var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n\n    var center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.focus = center;\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n    frameState.animate = false;\n\n    var viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  };\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  RasterSource.prototype.allSourcesReady_ = function allSourcesReady_ () {\n    var this$1 = this;\n\n    var ready = true;\n    var source;\n    for (var i = 0, ii = this.renderers_.length; i < ii; ++i) {\n      source = this$1.renderers_[i].getLayer().getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RasterSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    var frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      var renderedResolution = this.renderedImageCanvas_.getResolution();\n      var renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  };\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  RasterSource.prototype.processSources_ = function processSources_ () {\n    var this$1 = this;\n\n    var frameState = this.requestedFrameState_;\n    var len = this.renderers_.length;\n    var imageDatas = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var imageData = getImageData(\n        this$1.renderers_[i], frameState, frameState.layerStatesArray[i]);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    var data = {};\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n  };\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  RasterSource.prototype.onWorkerComplete_ = function onWorkerComplete_ (frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    var extent = frameState.extent;\n    var resolution = frameState.viewState.resolution;\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\n        !equals(extent, this.requestedFrameState_.extent)) {\n      return;\n    }\n\n    var context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      var width = Math.round(getWidth(extent) / resolution);\n      var height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n  };\n\n  /**\n   * @override\n   */\n  RasterSource.prototype.getImageInternal = function getImageInternal () {\n    return null; // not implemented\n  };\n\n  return RasterSource;\n}(ImageSource));\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {import(\"../renderer/canvas/Layer.js\").default} renderer Layer renderer.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  var width = frameState.size[0];\n  var height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    var canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array<import(\"../renderer/canvas/Layer.js\").default>} renderers Layer renderers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../renderer/canvas/Layer.js\").default>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  var len = sources.length;\n  var renderers = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createRenderer(layerOrSource) {\n  var tileSource = /** @type {import(\"./Tile.js\").default} */ (layerOrSource);\n  var imageSource = /** @type {import(\"./Image.js\").default} */ (layerOrSource);\n  var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerOrSource);\n  var renderer = null;\n  if (typeof tileSource.getTile === 'function') {\n    renderer = createTileRenderer(tileSource);\n  } else if (typeof imageSource.getImage === 'function') {\n    renderer = createImageRenderer(imageSource);\n  } else if (layer.getType() === LayerType.TILE) {\n    renderer = new CanvasTileLayerRenderer(/** @type {import(\"../layer/Tile.js\").default} */ (layer));\n  } else if (layer.getType() == LayerType.IMAGE || layer.getType() == LayerType.VECTOR) {\n    renderer = new CanvasImageLayerRenderer(/** @type {import(\"../layer/Image.js\").default} */ (layer));\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {import(\"./Image.js\").default} source The source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createImageRenderer(source) {\n  var layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {import(\"./Tile.js\").default} source The source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createTileRenderer(source) {\n  var layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\nexport default RasterSource;\n\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\nimport XYZ from './XYZ.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = (function (XYZ) {\n  function Stamen(options) {\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n\n    var layerConfig = LayerConfig[options.layer];\n\n    var url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    XYZ.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) Stamen.__proto__ = XYZ;\n  Stamen.prototype = Object.create( XYZ && XYZ.prototype );\n  Stamen.prototype.constructor = Stamen;\n\n  return Stamen;\n}(XYZ));\n\nexport default Stamen;\n\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n * for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = (function (TileImage) {\n  function TileArcGISRest(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  if ( TileImage ) TileArcGISRest.__proto__ = TileImage;\n  TileArcGISRest.prototype = Object.create( TileImage && TileImage.prototype );\n  TileArcGISRest.prototype.constructor = TileArcGISRest;\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileArcGISRest.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.params_) {\n      res[i++] = key + '-' + this$1.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  };\n\n  return TileArcGISRest;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileExtent = tileGrid.getTileCoordExtent(\n    tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  // Apply default params and override with user specified values.\n  var baseParams = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileArcGISRest;\n\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\nvar LabeledTile = (function (Tile) {\n  function LabeledTile(tileCoord, tileSize, text) {\n\n    Tile.call(this, tileCoord, TileState.LOADED);\n\n    /**\n    * @private\n    * @type {import(\"../size.js\").Size}\n    */\n    this.tileSize_ = tileSize;\n\n    /**\n    * @private\n    * @type {string}\n    */\n    this.text_ = text;\n\n    /**\n    * @private\n    * @type {HTMLCanvasElement}\n    */\n    this.canvas_ = null;\n\n  }\n\n  if ( Tile ) LabeledTile.__proto__ = Tile;\n  LabeledTile.prototype = Object.create( Tile && Tile.prototype );\n  LabeledTile.prototype.constructor = LabeledTile;\n\n  /**\n  * Get the image element for this tile.\n  * @return {HTMLCanvasElement} Image.\n  */\n  LabeledTile.prototype.getImage = function getImage () {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      var tileSize = this.tileSize_;\n      var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'black';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'black';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  };\n\n  /**\n  * @override\n  */\n  LabeledTile.prototype.load = function load () {};\n\n  return LabeledTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = (function (TileSource) {\n  function TileDebug(options) {\n\n    TileSource.call(this, {\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n  }\n\n  if ( TileSource ) TileDebug.__proto__ = TileSource;\n  TileDebug.prototype = Object.create( TileSource && TileSource.prototype );\n  TileDebug.prototype.constructor = TileDebug;\n\n  /**\n  * @inheritDoc\n  */\n  TileDebug.prototype.getTile = function getTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      var tileSize = toSize(this.tileGrid.getTileSize(z));\n      var tileCoord = [z, x, y];\n      var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      var text = !textTileCoord ? '' :\n        this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n      var tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n  return TileDebug;\n}(TileSource));\n\n\nexport default TileDebug;\n\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = (function (TileImage) {\n  function TileJSON(options) {\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\n    return this.tileJSON_;\n  };\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  };\n\n  /**\n   * @protected\n   */\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n  return TileJSON;\n}(TileImage));\n\n\nexport default TileJSON;\n\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = (function (TileImage) {\n  function TileWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    var params = options.params || {};\n\n    var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  if ( TileImage ) TileWMS.__proto__ = TileImage;\n  TileWMS.prototype = Object.create( TileImage && TileImage.prototype );\n  TileWMS.prototype.constructor = TileWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  TileWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getGutter = function getGutter () {\n    return this.gutter_;\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileWMS.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      var tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileWMS.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.params_) {\n      res[i++] = key + '-' + this$1.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  };\n\n  /**\n   * @private\n   */\n  TileWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return TileWMS;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileWMS;\n\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\n\nexport var CustomTile = (function (Tile) {\n  function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    Tile.call(this, tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n  if ( Tile ) CustomTile.__proto__ = Tile;\n  CustomTile.prototype = Object.create( Tile && Tile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    return null;\n  };\n\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  CustomTile.prototype.getData = function getData (coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    var xRelative = (coordinate[0] - this.extent_[0]) /\n        (this.extent_[2] - this.extent_[0]);\n    var yRelative = (coordinate[1] - this.extent_[1]) /\n        (this.extent_[3] - this.extent_[1]);\n\n    var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    var code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    var data = null;\n    if (code in this.keys_) {\n      var id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(this: T, *)} callback Callback.\n   * @param {T=} opt_this The object to use as `this` in the callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @template T\n   */\n  CustomTile.prototype.forDataAtCoordinate = function forDataAtCoordinate (coordinate, callback, opt_this, opt_request) {\n    if (this.state == TileState.IDLE && opt_request === true) {\n      listenOnce(this, EventType.CHANGE, function(e) {\n        callback.call(opt_this, this.getData(coordinate));\n      }, this);\n      this.loadInternal_();\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback.call(opt_this, this.getData(coordinate));\n        }.bind(this), 0);\n      } else {\n        callback.call(opt_this, this.getData(coordinate));\n      }\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.handleError_ = function handleError_ () {\n    this.state = TileState.ERROR;\n    this.changed();\n  };\n\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  CustomTile.prototype.handleLoad_ = function handleLoad_ (json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.EMPTY;\n    this.changed();\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.loadInternal_ = function loadInternal_ () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(this.src_, this.handleLoad_.bind(this),\n          this.handleError_.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  CustomTile.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  CustomTile.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleError_();\n  };\n\n\n  /**\n   * @override\n   */\n  CustomTile.prototype.load = function load () {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    }\n  };\n\n  return CustomTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = (function (TileSource) {\n  function UTFGrid(options) {\n    TileSource.call(this, {\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileSource ) UTFGrid.__proto__ = TileSource;\n  UTFGrid.prototype = Object.create( TileSource && TileSource.prototype );\n  UTFGrid.prototype.constructor = UTFGrid;\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  UTFGrid.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  UTFGrid.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  UTFGrid.prototype.getTemplate = function getTemplate () {\n    return this.template_;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*)} callback Callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  UTFGrid.prototype.forDataAtCoordinateAndResolution = function forDataAtCoordinateAndResolution (\n    coordinate, resolution, callback, opt_request) {\n    if (this.tileGrid) {\n      var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n        coordinate, resolution);\n      var tile = /** @type {!CustomTile} */(this.getTile(\n        tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n      tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  };\n\n\n  /**\n   * @protected\n   */\n  UTFGrid.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  UTFGrid.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    var grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState(SourceState.READY);\n\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      var tileCoord = [z, x, y];\n      var urlTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n      var tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UTFGrid;\n}(TileSource));\n\n\nexport default UTFGrid;\n\n//# sourceMappingURL=UTFGrid.js.map","/**\n * @module ol/VectorImageTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {VOID} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\nvar VectorImageTile = (function (Tile) {\n  function VectorImageTile(tileCoord, state, sourceRevision, format, tileLoadFunction,\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\n    var this$1 = this;\n\n\n    Tile.call(this, tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles_ = sourceTiles;\n\n    /**\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\n     * @type {Array<string>}\n     */\n    this.tileKeys = [];\n\n    /**\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @type {number}\n     */\n    this.sourceRevision_ = sourceRevision;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n\n    /**\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.loadListenerKeys_ = [];\n\n    /**\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.sourceTileListenerKeys_ = [];\n\n    if (urlTileCoord) {\n      var extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      var resolution = tileGrid.getResolution(zoom);\n      var sourceZ = sourceTileGrid.getZForResolution(resolution);\n      var useLoadedOnly = zoom != tileCoord[0];\n      var loadCount = 0;\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n        var sharedExtent = getIntersection(extent,\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n        var sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n        }\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\n            getHeight(sharedExtent) / resolution >= 0.5) {\n          // only include source tile if overlap is at least 1 pixel\n          ++loadCount;\n          var sourceTileKey = sourceTileCoord.toString();\n          var sourceTile = sourceTiles[sourceTileKey];\n          if (!sourceTile && !useLoadedOnly) {\n            var tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n              tileUrl == undefined ? '' : tileUrl,\n              format, tileLoadFunction);\n            this.sourceTileListenerKeys_.push(\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\n          }\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n            sourceTile.consumers++;\n            this.tileKeys.push(sourceTileKey);\n          }\n        }\n      }.bind(this));\n\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\n        this.finishLoading_();\n      }\n\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n        while (zoom > tileGrid.getMinZoom()) {\n          var tile = new VectorImageTile(tileCoord, state, sourceRevision,\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n            tileClass, VOID, --zoom);\n          if (tile.state == TileState.LOADED) {\n            this$1.interimTile = tile;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  if ( Tile ) VectorImageTile.__proto__ = Tile;\n  VectorImageTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorImageTile.prototype.constructor = VectorImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.disposeInternal = function disposeInternal () {\n    var this$1 = this;\n\n    this.state = TileState.ABORT;\n    this.changed();\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n\n    for (var i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n      var sourceTileKey = this$1.tileKeys[i];\n      var sourceTile = this$1.getTile(sourceTileKey);\n      sourceTile.consumers--;\n      if (sourceTile.consumers == 0) {\n        delete this$1.sourceTiles_[sourceTileKey];\n        sourceTile.dispose();\n      }\n    }\n    this.tileKeys.length = 0;\n    this.sourceTiles_ = null;\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\n    this.sourceTileListenerKeys_.length = 0;\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  VectorImageTile.prototype.getContext = function getContext (layer) {\n    var key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D();\n    }\n    return this.context_[key];\n  };\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  VectorImageTile.prototype.getImage = function getImage (layer) {\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\n      null : this.getContext(layer).canvas;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  VectorImageTile.prototype.getReplayState = function getReplayState (layer) {\n    var key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedRevision: -1,\n        renderedTileRevision: -1\n      };\n    }\n    return this.replayState_[key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.getKey = function getKey () {\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n  };\n\n  /**\n   * @param {string} tileKey Key (tileCoord) of the source tile.\n   * @return {import(\"./VectorTile.js\").default} Source tile.\n   */\n  VectorImageTile.prototype.getTile = function getTile (tileKey) {\n    return this.sourceTiles_[tileKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.load = function load () {\n    // Source tiles with LOADED state - we just count them because once they are\n    // loaded, we're no longer listening to state changes.\n    var leftToLoad = 0;\n    // Source tiles with ERROR state - we track them because they can still have\n    // an ERROR state after another load attempt.\n    var errorSourceTiles = {};\n\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n    }\n    if (this.state == TileState.LOADING) {\n      this.tileKeys.forEach(function(sourceTileKey) {\n        var sourceTile = this.getTile(sourceTileKey);\n        if (sourceTile.state == TileState.IDLE) {\n          sourceTile.setLoader(this.loader_);\n          sourceTile.load();\n        }\n        if (sourceTile.state == TileState.LOADING) {\n          var key = listen(sourceTile, EventType.CHANGE, function(e) {\n            var state = sourceTile.getState();\n            if (state == TileState.LOADED ||\n                state == TileState.ERROR) {\n              var uid = getUid(sourceTile);\n              if (state == TileState.ERROR) {\n                errorSourceTiles[uid] = true;\n              } else {\n                --leftToLoad;\n                delete errorSourceTiles[uid];\n              }\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n                this.finishLoading_();\n              }\n            }\n          }.bind(this));\n          this.loadListenerKeys_.push(key);\n          ++leftToLoad;\n        }\n      }.bind(this));\n    }\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n      setTimeout(this.finishLoading_.bind(this), 0);\n    }\n  };\n\n  /**\n   * @private\n   */\n  VectorImageTile.prototype.finishLoading_ = function finishLoading_ () {\n    var this$1 = this;\n\n    var loaded = this.tileKeys.length;\n    var empty = 0;\n    for (var i = loaded - 1; i >= 0; --i) {\n      var state = this$1.getTile(this$1.tileKeys[i]).getState();\n      if (state != TileState.LOADED) {\n        --loaded;\n      }\n      if (state == TileState.EMPTY) {\n        ++empty;\n      }\n    }\n    if (loaded == this.tileKeys.length) {\n      this.loadListenerKeys_.forEach(unlistenByKey);\n      this.loadListenerKeys_.length = 0;\n      this.setState(TileState.LOADED);\n    } else {\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n    }\n  };\n\n  return VectorImageTile;\n}(Tile));\n\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"./VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n\n//# sourceMappingURL=VectorImageTile.js.map","/**\n * @module ol/VectorTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @const\n * @type {import(\"./extent.js\").Extent}\n */\nvar DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\nvar VectorTile = (function (Tile) {\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @type {number}\n     */\n    this.consumers = 0;\n\n    /**\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Data projection\n     * @private\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"./render/ReplayGroup.js\").default>}\n     */\n    this.replayGroups_ = {};\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n  }\n\n  if ( Tile ) VectorTile.__proto__ = Tile;\n  VectorTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.disposeInternal = function disposeInternal () {\n    this.features_ = null;\n    this.replayGroups_ = {};\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Gets the extent of the vector tile.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @api\n   */\n  VectorTile.prototype.getExtent = function getExtent () {\n    return this.extent_ || DEFAULT_EXTENT;\n  };\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  VectorTile.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n  /**\n   * Get the features for this tile. Geometries will be in the projection returned\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  VectorTile.prototype.getFeatures = function getFeatures () {\n    return this.features_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getKey = function getKey () {\n    return this.url_;\n  };\n\n  /**\n   * Get the feature projection of features returned by\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n   * @return {import(\"./proj/Projection.js\").default} Feature projection.\n   * @api\n   */\n  VectorTile.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @param {string} key Key.\n   * @return {import(\"./render/ReplayGroup.js\").default} Replay group.\n   */\n  VectorTile.prototype.getReplayGroup = function getReplayGroup (layer, key) {\n    return this.replayGroups_[getUid(layer) + ',' + key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      this.loader_(null, NaN, null);\n    }\n  };\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   */\n  VectorTile.prototype.onLoad = function onLoad (features, dataProjection, extent) {\n    this.setProjection(dataProjection);\n    this.setFeatures(features);\n    this.setExtent(extent);\n  };\n\n  /**\n   * Handler for tile load errors.\n   */\n  VectorTile.prototype.onError = function onError () {\n    this.setState(TileState.ERROR);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n   * for tiles in projections with `tile-pixels` as units. The extent should be\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n   * calculated by multiplying the tile size with the tile pixel ratio. For\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n   * extent. The default is `[0, 0, 4096, 4096]`.\n   * @param {import(\"./extent.js\").Extent} extent The extent.\n   * @api\n   */\n  VectorTile.prototype.setExtent = function setExtent (extent) {\n    this.extent_ = extent;\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  VectorTile.prototype.setFeatures = function setFeatures (features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the projection of the features that were added with\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n   * @param {import(\"./proj/Projection.js\").default} projection Feature projection.\n   * @api\n   */\n  VectorTile.prototype.setProjection = function setProjection (projection) {\n    this.projection_ = projection;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @param {string} key Key.\n   * @param {import(\"./render/ReplayGroup.js\").default} replayGroup Replay group.\n   */\n  VectorTile.prototype.setReplayGroup = function setReplayGroup (layer, key, replayGroup) {\n    this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n  };\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  VectorTile.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorTile;\n}(Tile));\n\nexport default VectorTile;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorImageTile, {defaultLoadFunction} from '../VectorImageTile.js';\nimport Tile from '../VectorTile.js';\nimport {toSize} from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function() {\n *     var data = // ... fetch data\n *     var format = tile.getFormat();\n *     tile.setProjection(format.readProjection(data));\n *     tile.setFeatures(format.readFeatures(data, {\n *       // featureProjection is not required for ol/format/MVT\n *       featureProjection: map.getView().getProjection()\n *     }));\n *     // the line below is only required for ol/format/MVT\n *     tile.setExtent(format.getLastExtent());\n *   }\n * });\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = (function (UrlTile) {\n  function VectorTile(options) {\n    var projection = options.projection || 'EPSG:3857';\n\n    var extent = options.extent || extentFromProjection(projection);\n\n    var tileGrid = options.tileGrid || createXYZ({\n      extent: extent,\n      maxZoom: options.maxZoom || 22,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize || 512\n    });\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize !== undefined ? options.cacheSize : 128,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n       * @private\n       * @type {Object<string, Tile>}\n       */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n\n  }\n\n  if ( UrlTile ) VectorTile.__proto__ = UrlTile;\n  VectorTile.prototype = Object.create( UrlTile && UrlTile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorTile.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  VectorTile.prototype.clear = function clear () {\n    this.tileCache.clear();\n    this.sourceTiles_ = {};\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      var tileCoord = [z, x, y];\n      var urlTileCoord = this.getTileCoordForTileUrlFunction(\n        tileCoord, projection);\n      var tile = new VectorImageTile(\n        tileCoord,\n        urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY,\n        this.getRevision(),\n        this.format_, this.tileLoadFunction, urlTileCoord, this.tileUrlFunction,\n        this.tileGrid, this.getTileGridForProjection(projection),\n        this.sourceTiles_, pixelRatio, projection, this.tileClass,\n        this.handleTileChange.bind(this), tileCoord[0]);\n\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTileGridForProjection = function getTileGridForProjection (projection) {\n    var code = projection.getCode();\n    var tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      var sourceTileGrid = this.tileGrid;\n      tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined,\n        sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n    }\n    return tileGrid;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return pixelRatio;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n  };\n\n  return VectorTile;\n}(UrlTile));\n\n\nexport default VectorTile;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = (function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  WMTS.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  };\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  WMTS.prototype.getDimensions = function getDimensions () {\n    return this.dimensions_;\n  };\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  WMTS.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  WMTS.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  WMTS.prototype.getMatrixSet = function getMatrixSet () {\n    return this.matrixSet_;\n  };\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  WMTS.prototype.getRequestEncoding = function getRequestEncoding () {\n    return this.requestEncoding_;\n  };\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  WMTS.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  WMTS.prototype.getVersion = function getVersion () {\n    return this.version_;\n  };\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  WMTS.prototype.getKeyForDimensions_ = function getKeyForDimensions_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.dimensions_) {\n      res[i++] = key + '-' + this$1.dimensions_[key];\n    }\n    return res.join('/');\n  };\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  WMTS.prototype.updateDimensions = function updateDimensions (dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  };\n\n  return WMTS;\n}(TileImage));\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n    this.tileGrid);\n  var dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, dimensions);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\nexport var CustomTile = (function (ImageTile) {\n  function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n\n  }\n\n  if ( ImageTile ) CustomTile.__proto__ = ImageTile;\n  CustomTile.prototype = Object.create( ImageTile && ImageTile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    var image = ImageTile.prototype.getImage.call(this);\n    if (this.state == TileState.LOADED) {\n      var tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  };\n\n  return CustomTile;\n}(ImageTile));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = (function (TileImage) {\n  function Zoomify(opt_options) {\n\n    var options = opt_options || {};\n\n    var size = options.size;\n    var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n      options.tierSizeCalculation :\n      TierSizeCalculation.DEFAULT;\n\n    var imageWidth = size[0];\n    var imageHeight = size[1];\n    var extent = options.extent || [0, -size[1], size[0], 0];\n    var tierSizeInTiles = [];\n    var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    var tileSizeForTierSizeCalculation = tileSize;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        var width = imageWidth;\n        var height = imageHeight;\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation)\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    var resolutions = [1];\n    var tileCountUpToTier = [0];\n    for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(1 << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    var tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions\n    });\n\n    var url = options.url;\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    var urls = expandUrl(url);\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            var tileCoordZ = tileCoord[0];\n            var tileCoordX = tileCoord[1];\n            var tileCoordY = -tileCoord[2] - 1;\n            var tileIndex =\n                tileCoordX +\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            var tileSize = tileGrid.getTileSize(tileCoordZ);\n            var tileWidth = Array.isArray(tileSize) ? tileSize[0] : tileSize;\n            var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n            var localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n    var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) Zoomify.__proto__ = TileImage;\n  Zoomify.prototype = Object.create( TileImage && TileImage.prototype );\n  Zoomify.prototype.constructor = Zoomify;\n\n  return Zoomify;\n}(TileImage));\n\nexport default Zoomify;\n\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = (function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = (function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array<Array<import(\"../style/Style.js\").default>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var this$1 = this;\n\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this$1.gradient_[alpha];\n        view8[i + 1] = this$1.gradient_[alpha + 1];\n        view8[i + 2] = this$1.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from './TileProperty.js';\nimport VectorLayer from './Vector.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar VectorTileLayer = (function (VectorLayer) {\n  function VectorTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    var baseOptions = /** @type {Object} */ (assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    VectorLayer.call(/** @type {import(\"./Vector.js\").Options} */ this, (baseOptions));\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  if ( VectorLayer ) VectorTileLayer.__proto__ = VectorLayer;\n  VectorTileLayer.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return VectorTileLayer;\n}(VectorLayer));\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {import(\"../source/VectorTile.js\").default} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = (function (Event) {\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n\n    Event.call(this, type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n  if ( Event ) DragAndDropEvent.__proto__ = Event;\n  DragAndDropEvent.prototype = Object.create( Event && Event.prototype );\n  DragAndDropEvent.prototype.constructor = DragAndDropEvent;\n\n  return DragAndDropEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = (function (Interaction) {\n  function DragAndDrop(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"../format/Feature.js\").default>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  if ( Interaction ) DragAndDrop.__proto__ = Interaction;\n  DragAndDrop.prototype = Object.create( Interaction && Interaction.prototype );\n  DragAndDrop.prototype.constructor = DragAndDrop;\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  DragAndDrop.prototype.handleResult_ = function handleResult_ (file, event) {\n    var this$1 = this;\n\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n\n    var formatConstructors = this.formatConstructors_;\n    var features = [];\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      var format = new formatConstructors[i]();\n      features = this$1.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.registerListeners_ = function registerListeners_ () {\n    var map = this.getMap();\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setActive = function setActive (active) {\n    Interaction.prototype.setActive.call(this, active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setMap = function setMap (map) {\n    this.unregisterListeners_();\n    Interaction.prototype.setMap.call(this, map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_ (format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.unregisterListeners_ = function unregisterListeners_ () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n\n  return DragAndDrop;\n}(Interaction));\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n  var this$1 = this;\n\n  var files = event.dataTransfer.files;\n  for (var i = 0, ii = files.length; i < ii; ++i) {\n    var file = files.item(i);\n    var reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this$1.handleResult_.bind(this$1, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n\n//# sourceMappingURL=DragAndDrop.js.map","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = (function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  if ( PointerInteraction ) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var deltaX = offset[0] - size[0] / 2;\n    var deltaY = size[1] / 2 - offset[1];\n    var theta = Math.atan2(deltaY, deltaX);\n    var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    var view = map.getView();\n    if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n      var angleDelta = theta - this.lastAngle_;\n      rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n      zoomWithoutConstraints(view, resolution);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var direction = this.lastScaleDelta_ - 1;\n    rotate(view, view.getRotation());\n    zoom(view, view.getResolution(), undefined, this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotateAndZoom;\n}(PointerInteraction));\n\nexport default DragRotateAndZoom;\n\n//# sourceMappingURL=DragRotateAndZoom.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = (function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = (function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = (function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = (function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this$1.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = (function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = (function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var this$1 = this;\n\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this$1.freehand_ ? 1 : this$1.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this$1.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~ExtentInteraction} instances are\n * instances of this type.\n */\nvar ExtentInteractionEvent = (function (Event) {\n  function ExtentInteractionEvent(extent) {\n    Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n  if ( Event ) ExtentInteractionEvent.__proto__ = Event;\n  ExtentInteractionEvent.prototype = Object.create( Event && Event.prototype );\n  ExtentInteractionEvent.prototype.constructor = ExtentInteractionEvent;\n\n  return ExtentInteractionEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires Event\n * @api\n */\nvar ExtentInteraction = (function (PointerInteraction) {\n  function ExtentInteraction(opt_options) {\n\n    var options = opt_options || {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  if ( PointerInteraction ) ExtentInteraction.__proto__ = PointerInteraction;\n  ExtentInteraction.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  ExtentInteraction.prototype.constructor = ExtentInteraction;\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  ExtentInteraction.prototype.snapToVertex_ = function snapToVertex_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtent();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n\n      var vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  ExtentInteraction.prototype.handlePointerMove_ = function handlePointerMove_ (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixel(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @returns {Feature} extent as featrue\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function createOrUpdateExtentFeature_ (extent) {\n    var extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      /** @type {VectorSource} */ (this.extentOverlay_.getSource()).addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @returns {Feature} vertex as feature\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function createOrUpdatePointerFeature_ (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      /** @type {VectorSource} */ (this.vertexOverlay_.getSource()).addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var extent = this.getExtent();\n    var vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    var getOpposingPoint = function(point) {\n      var x_ = null;\n      var y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n      var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n      //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n    //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixel(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      var pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    var extent = this.getExtent();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.setMap = function setMap (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  ExtentInteraction.prototype.getExtent = function getExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  ExtentInteraction.prototype.setExtent = function setExtent (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n  };\n\n  return ExtentInteraction;\n}(PointerInteraction));\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default ExtentInteraction;\n\n//# sourceMappingURL=Extent.js.map","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport var ModifyEvent = (function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\n    Event.call(this, type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = (function (PointerInteraction) {\n  function Modify(options) {\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    var features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\n    var rBush = this.rBush_;\n    var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setActive = function setActive (active) {\n    if (this.vertexFeature_ && !active) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    PointerInteraction.prototype.setActive.call(this, active);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setMap = function setMap (map) {\n    this.overlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Modify.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    var centerSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var circumferenceSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      this$1.SEGMENT_WRITERS_[geometries[i].getType()].call(this$1, feature, geometries[i]);\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @override\n   */\n  Modify.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    var handled;\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n        !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDragEvent = function handleDragEvent (evt) {\n    var this$1 = this;\n\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt);\n\n    var vertex = evt.coordinate;\n    for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      var dragSegment = this$1.dragSegments_[i];\n      var segmentData = dragSegment[0];\n      var depth = segmentData.depth;\n      var geometry = segmentData.geometry;\n      var coordinates = (void 0);\n      var segment = segmentData.segment;\n      var index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this$1.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this$1.changingFeature_ = false;\n          } else { // We're dragging the circle's circumference:\n            this$1.changingFeature_ = true;\n            geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n            this$1.changingFeature_ = false;\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (coordinates) {\n        this$1.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDownEvent = function handleDownEvent (evt) {\n    var this$1 = this;\n\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n    var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n    this.dragSegments_.length = 0;\n    this.modified_ = false;\n    var vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      var insertVertices = [];\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      var vertex = geometry.getCoordinates();\n      var vertexExtent = boundingExtent([vertex]);\n      var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      var componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        var segmentDataMatch = segmentDataMatches[i];\n        var segment = segmentDataMatch.segment;\n        var uid = getUid(segmentDataMatch.feature);\n        var depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this$1.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n        } else if (coordinatesEqual(segment[0], vertex) &&\n            !componentSegments[uid][0]) {\n          this$1.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        } else if (coordinatesEqual(segment[1], vertex) &&\n            !componentSegments[uid][1]) {\n\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() ===\n              GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n              GeometryType.MULTI_LINE_STRING) &&\n              componentSegments[uid][0] &&\n              componentSegments[uid][0].index === 0) {\n            continue;\n          }\n\n          this$1.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n        } else if (this$1.insertVertexCondition_(evt) && getUid(segment) in this$1.vertexSegments_ &&\n            (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n          insertVertices.push([segmentDataMatch, vertex]);\n        }\n      }\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt);\n      }\n      for (var j = insertVertices.length - 1; j >= 0; --j) {\n        this$1.insertVertex_.apply(this$1, insertVertices[j]);\n      }\n    }\n    return !!this.vertexFeature_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleUpEvent = function handleUpEvent (evt) {\n    var this$1 = this;\n\n    for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n      var segmentData = this$1.dragSegments_[i][0];\n      var geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = segmentData.featureSegments[0];\n        var circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n        this$1.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this$1.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this$1.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.modified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n    }\n    return false;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    var rBush = this.rBush_;\n    var nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      var node = nodes[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        var vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = /** @type {number} */ (segmentData.index);\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    var newSegmentData = /** @type {SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    var newSegmentData2 = /** @type {SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function removePoint () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\n    var this$1 = this;\n\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this$1.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this$1.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this$1.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          var newSegmentData = /** @type {SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this$1.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this$1.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this$1.vertexFeature_) {\n          /** @type {VectorSource} */ (this$1.overlay_.getSource()).removeFeature(this$1.vertexFeature_);\n          this$1.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction));\n\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\n//# sourceMappingURL=Modify.js.map","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = (function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = (function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {VectorLayer}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.getFeatures();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return /** @type {VectorSource} */ (this.featureOverlay_.getSource()).getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {VectorLayer} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    return (\n      /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)])\n    );\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders selected features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Select.prototype.getOverlay = function getOverlay () {\n    return this.featureOverlay_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures = this.getFeatures();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.getFeatures();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n  }\n\n}\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = (function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(SegmentData, SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleEvent = function handleEvent (evt) {\n    var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return PointerInteraction.prototype.handleEvent.call(this, evt);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleUpEvent = function handleUpEvent (evt) {\n    var featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this$1.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this$1, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport var TranslateEvent = (function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n\n    Event.call(this, type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n  if ( Event ) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create( Event && Event.prototype );\n  TranslateEvent.prototype.constructor = TranslateEvent;\n\n  return TranslateEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = (function (PointerInteraction) {\n  function Translate(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  if ( PointerInteraction ) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Translate.prototype.constructor = Translate;\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleUpEvent = function handleUpEvent (event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleDragEvent = function handleDragEvent (event) {\n    if (this.lastCoordinate_) {\n      var newCoordinate = event.coordinate;\n      var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function(feature) {\n        var geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING, features,\n          newCoordinate));\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleMoveEvent = function handleMoveEvent (event) {\n    var elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  };\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_ (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_ () {\n    this.updateState_(null);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function updateState_ (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction));\n\nexport default Translate;\n\n//# sourceMappingURL=Translate.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = (function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    var this$1 = this;\n\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this$1.geometries_[i], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    var this$1 = this;\n\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this$1.geometries_[i], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = (function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = (function (JSONFeature) {\n  function EsriJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n  }\n\n  if ( JSONFeature ) EsriJSON.__proto__ = JSONFeature;\n  EsriJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  EsriJSON.prototype.constructor = EsriJSON;\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (opt_options && opt_options.idField &&\n      esriJSONFeature.attributes[opt_options.idField]) {\n      feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n    }\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    var options = opt_options ? opt_options : {};\n    if (object['features']) {\n      var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      var features = [];\n      var esriJSONFeatures = esriJSONFeatureSet.features;\n      options.idField = object.objectIdFieldName;\n      for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(this$1.readFeatureFromObject(esriJSONFeatures[i], options));\n      }\n      return features;\n    } else {\n      return [this.readFeatureFromObject(object, options)];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\n      var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\n      var crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var object = {};\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, opt_options);\n      if (opt_options && opt_options.featureProjection) {\n        object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */({\n          wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\n        });\n      }\n    }\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} EsriJSON Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    var this$1 = this;\n\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this$1.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {EsriJSONFeatureSet} */ ({\n      'features': objects\n    });\n  };\n\n  return EsriJSON;\n}(JSONFeature));\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/GeometryType.js\").default} */\n  var type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = GeometryType.POINT;\n  } else if (object['points']) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object['paths']) {\n    var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object['rings']) {\n    var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    var layout = getGeometryLayout(esriJSONPolygon);\n    var rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object['rings'] = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object['rings'] = rings;\n    }\n  }\n  var geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  var flatRing = [];\n  var outerRings = [];\n  var holes = [];\n  var i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    var clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    var hole = holes.shift();\n    var matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      var outerRing = outerRings[i][0];\n      var containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  var point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  var layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  var coordinates = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getCoordinates();\n  var esriJSON;\n  var layout = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  var layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  var lineString = /** @type {import(\"../geom/LineString.js\").default} */ (geometry);\n  var hasZM = getHasZM(lineString);\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var polygon = /** @type {import(\"../geom/Polygon.js\").default} */ (geometry);\n  // Esri geometries use the left-hand rule\n  var hasZM = getHasZM(polygon);\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  var multiLineString = /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry);\n  var hasZM = getHasZM(multiLineString);\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  var multiPoint = /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry);\n  var hasZM = getHasZM(multiPoint);\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {import(\"../geom/MultiPolygon.js\").default} */(geometry));\n  var coordinates = /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry).getCoordinates(false);\n  var output = [];\n  for (var i = 0; i < coordinates.length; i++) {\n    for (var x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {import(\"../geom/Geometry.js\").default} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\nexport default EsriJSON;\n\n//# sourceMappingURL=EsriJSON.js.map","/**\n * @module ol/format/XMLFeature\n */\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = (function (FeatureFormat) {\n  function XMLFeature() {\n    FeatureFormat.call(this);\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = new XMLSerializer();\n  }\n\n  if ( FeatureFormat ) XMLFeature.__proto__ = FeatureFormat;\n  XMLFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  XMLFeature.prototype.constructor = XMLFeature;\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.getType = function getType () {\n    return FormatType.XML;\n  };\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  XMLFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromDocument = function readFeatureFromDocument (doc, opt_options) {\n    var features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  XMLFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromDocument = function readFeaturesFromDocument (doc, opt_options) {\n    var this$1 = this;\n\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = [];\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(features, this$1.readFeaturesFromNode(n, opt_options));\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromDocument = function readGeometryFromDocument (doc, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  XMLFeature.prototype.readProjection = function readProjection (source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Node} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    var node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeatureNode = function writeFeatureNode (feature, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n  XMLFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    var node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    var node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    return null; // not implemented\n  };\n\n  return XMLFeature;\n}(FeatureFormat));\n\n\nexport default XMLFeature;\n\n//# sourceMappingURL=XMLFeature.js.map","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nvar GMLBase = (function (XMLFeature) {\n  function GMLBase(opt_options) {\n    XMLFeature.call(this);\n\n    var options = /** @type {Options} */ (opt_options ? opt_options : {});\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\n    };\n  }\n\n  if ( XMLFeature ) GMLBase.__proto__ = XMLFeature;\n  GMLBase.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GMLBase.prototype.constructor = GMLBase;\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  GMLBase.prototype.readFeaturesInternal = function readFeaturesInternal (node, objectStack) {\n    var this$1 = this;\n\n    var localName = node.localName;\n    var features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\n      var context = objectStack[0];\n      var featureType = context['featureType'];\n      var featureNS = context['featureNS'];\n      var prefix = 'p';\n      var defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        featureType = [], featureNS = {};\n        for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          var child = node.childNodes[i];\n          if (child.nodeType === 1) {\n            var ft = child.nodeName.split(':').pop();\n            if (featureType.indexOf(ft) === -1) {\n              var key = '';\n              var count = 0;\n              var uri = child.namespaceURI;\n              for (var candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        var ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      var parsersNS = {};\n      var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n      for (var p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        var parsers = {};\n        for (var i$1 = 0, ii$1 = featureTypes.length; i$1 < ii$1; ++i$1) {\n          var featurePrefix = featureTypes[i$1].indexOf(':') === -1 ?\n            defaultPrefix : featureTypes[i$1].split(':')[0];\n          if (featurePrefix === p) {\n            parsers[featureTypes[i$1].split(':').pop()] =\n                (localName == 'featureMembers') ?\n                  makeArrayPusher(this$1.readFeatureElement, this$1) :\n                  makeReplacer(this$1.readFeatureElement, this$1);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  GMLBase.prototype.readGeometryElement = function readGeometryElement (node, objectStack) {\n    var context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\n    if (geometry) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, context))\n      );\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  GMLBase.prototype.readFeatureElementInternal = function readFeatureElementInternal (node, objectStack, asFeature) {\n    var this$1 = this;\n\n    var geometryName;\n    var values = {};\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var value = (void 0);\n      var localName = n.localName;\n      // first, check if it is simple attribute\n      if (n.childNodes.length === 0\n              || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry\n          value = this$1.readGeometryElement(n, objectStack);\n        }\n        if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\n          value = this$1.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n\n      var len = n.attributes.length;\n      if (len > 0) {\n        values[localName] = {_content_: values[localName]};\n        for (var i = 0; i < len; i++) {\n          var attName = n.attributes[i].name;\n          values[localName][attName] = n.attributes[i].value;\n        }\n      }\n    }\n    if (!asFeature) {\n      return values;\n    } else {\n      var feature = new Feature(values);\n      if (geometryName) {\n        feature.setGeometryName(geometryName);\n      }\n      var fid = node.getAttribute('fid') ||\n           getAttributeNS(node, this.namespace, 'id');\n      if (fid) {\n        feature.setId(fid);\n      }\n      return feature;\n    }\n  };\n\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  GMLBase.prototype.readFeatureElement = function readFeatureElement (node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  GMLBase.prototype.readPoint = function readPoint (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  GMLBase.prototype.readMultiPoint = function readMultiPoint (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var coordinates = pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  GMLBase.prototype.readMultiLineString = function readMultiLineString (node, objectStack) {\n    /** @type {Array<LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  GMLBase.prototype.readMultiPolygon = function readMultiPolygon (node, objectStack) {\n    /** @type {Array<Polygon>} */\n    var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.pointMemberParser_ = function pointMemberParser_ (node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.lineStringMemberParser_ = function lineStringMemberParser_ (node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.polygonMemberParser_ = function polygonMemberParser_ (node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  GMLBase.prototype.readLineString = function readLineString (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  GMLBase.prototype.readFlatLinearRing_ = function readFlatLinearRing_ (node, objectStack) {\n    var ring = pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS, node,\n      objectStack, this);\n    if (ring) {\n      return ring;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  GMLBase.prototype.readLinearRing = function readLinearRing (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  GMLBase.prototype.readPolygon = function readPolygon (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>} Flat coordinates.\n   */\n  GMLBase.prototype.readFlatCoordinatesFromNode_ = function readFlatCoordinatesFromNode_ (node, objectStack) {\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    var geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n    return geometry ? geometry : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {\n      featureType: this.featureType,\n      featureNS: this.featureNS\n    };\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    var features = this.readFeaturesInternal(node, [options]);\n    return features || [];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n  };\n\n  return GMLBase;\n}(XMLFeature));\n\n\nGMLBase.prototype.namespace = GMLNS;\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\nexport default GMLBase;\n\n//# sourceMappingURL=GMLBase.js.map","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  var s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  var s = getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  var s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  var s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n//# sourceMappingURL=xsd.js.map","/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nvar schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nvar GML3 = (function (GMLBase) {\n  function GML3(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ = options.multiCurve !== undefined ?\n      options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ = options.multiSurface !== undefined ?\n      options.multiSurface : true;\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ?\n      options.hasZ : false;\n\n  }\n\n  if ( GMLBase ) GML3.__proto__ = GMLBase;\n  GML3.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML3.prototype.constructor = GML3;\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  GML3.prototype.readMultiCurve_ = function readMultiCurve_ (node, objectStack) {\n    /** @type {Array<LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      var multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  GML3.prototype.readMultiSurface_ = function readMultiSurface_ (node, objectStack) {\n    /** @type {Array<Polygon>} */\n    var polygons = pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.curveMemberParser_ = function curveMemberParser_ (node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.surfaceMemberParser_ = function surfaceMemberParser_ (node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPatch_ = function readPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readSegment_ = function readSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPolygonPatch_ = function readPolygonPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readLineStringSegment_ = function readLineStringSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.interiorParser_ = function interiorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.exteriorParser_ = function exteriorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Polygon|undefined} Polygon.\n   */\n  GML3.prototype.readSurface_ = function readSurface_ (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {LineString|undefined} LineString.\n   */\n  GML3.prototype.readCurve_ = function readCurve_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  GML3.prototype.readEnvelope_ = function readEnvelope_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPos_ = function readFlatPos_ (node, objectStack) {\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      var i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        var y = flatCoordinates[i];\n        var x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    var len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPosList_ = function readFlatPosList_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var contextDimension = context['srsDimension'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    var coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    var dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n    } else if (/** @type {Element} */ (node.parentNode).getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    var x, y, z;\n    var flatCoordinates = [];\n    for (var i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePos_ = function writePos_ (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    var axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    var point = value.getCoordinates();\n    var coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = (point[0] + ' ' + point[1]);\n    } else {\n      coords = (point[1] + ' ' + point[0]);\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML3.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ' ' + point[1] :\n      point[1] + ' ' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePosList_ = function writePosList_ (node, value, objectStack) {\n    var this$1 = this;\n\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    var point;\n    for (var i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this$1.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML3.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    var hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI,\n      'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item['node'] = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var this$1 = this;\n\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this$1.writeGeometryElement, this$1);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeFeatureMembers_ = function writeFeatureMembers_ (node, features, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    var serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement, this);\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GML3.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var curve = context['curve'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace,\n      nodeName);\n  };\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var geom = createElementNS(this.namespace, 'geom');\n    var context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n      curve: this.curve_, surface: this.surface_,\n      multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  };\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Element} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n    var context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType\n    };\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  };\n\n  return GML3;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML3;\n\n//# sourceMappingURL=GML3.js.map","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {import(\"./GMLBase.js\").Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nvar GML = GML3;\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n\n//# sourceMappingURL=GML.js.map","/**\n * @module ol/format/GML2\n */\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {writeStringTextNode} from './xsd.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nvar GML2 = (function (GMLBase) {\n  function GML2(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(this.readFeaturesInternal);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n  }\n\n  if ( GMLBase ) GML2.__proto__ = GMLBase;\n  GML2.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML2.prototype.constructor = GML2;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML2.prototype.readFlatCoordinates_ = function readFlatCoordinates_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    var coordsGroups = s.trim().split(/\\s+/);\n    var flatCoordinates = [];\n    for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n      var coords = coordsGroups[i].split(/,+/);\n      var x = parseFloat(coords[0]);\n      var y = parseFloat(coords[1]);\n      var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  GML2.prototype.readBox_ = function readBox_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.innerBoundaryIsParser_ = function innerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.outerBoundaryIsParser_ = function outerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GML2.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var this$1 = this;\n\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this$1.writeGeometryElement, this$1);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item['node'] = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @returns {Element} coordinates node.\n   * @private\n   */\n  GML2.prototype.createCoordinatesNode_ = function createCoordinatesNode_ (namespaceURI) {\n    var coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCoordinates_ = function writeCoordinates_ (node, value, objectStack) {\n    var this$1 = this;\n\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var point = points[i];\n      parts[i] = this$1.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML2.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML2.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ',' + point[1] :\n      point[1] + ',' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    var point = geometry.getCoordinates();\n    var coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  return GML2;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n\n//# sourceMappingURL=GML2.js.map","/**\n * @module ol/format/GML32\n */\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {makeArrayPusher, makeReplacer, makeChildAppender} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nvar GML32 = (function (GML3) {\n  function GML32(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n\n    GML3.call(this, options);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n\n  }\n\n  if ( GML3 ) GML32.__proto__ = GML3;\n  GML32.prototype = Object.create( GML3 && GML3.prototype );\n  GML32.prototype.constructor = GML32;\n\n  return GML32;\n}(GML3));\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML32.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML32.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML32;\n\n//# sourceMappingURL=GML32.js.map","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = (function (XMLFeature) {\n  function GPX(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node)|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  if ( XMLFeature ) GPX.__proto__ = XMLFeature;\n  GPX.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GPX.prototype.constructor = GPX;\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  GPX.prototype.handleReadExtensions_ = function handleReadExtensions_ (features) {\n    var this$1 = this;\n\n    if (!features) {\n      features = [];\n    }\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      var feature = features[i];\n      if (this$1.readExtensions_) {\n        var extensionsNode = feature.get('extensionsNode_') || null;\n        this$1.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      var features = pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  };\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GPX.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n    return gpx;\n  };\n\n  return GPX;\n}(XMLFeature));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (var i$1 = 0, ii$1 = ends.length; i$1 < ii$1; i$1++) {\n        ends[i$1] = ends[i$1] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n    var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n    var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  var geometry = new LineString(flatCoordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var layoutOptions = /** @type {LayoutOptions} */ ({});\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = applyLayoutOptions(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  var geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  var orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  var context = {node: node};\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    var lineString = /** @type {LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    var multiLineString = /** @type {MultiLineString} */ (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.POINT) {\n    var point = /** @type {Point} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\n\nexport default GPX;\n\n//# sourceMappingURL=GPX.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = (function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this$1.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    var this$1 = this;\n\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this$1.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/format/TextFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = (function (FeatureFormat) {\n  function TextFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) TextFeature.__proto__ = FeatureFormat;\n  TextFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  TextFeature.prototype.constructor = TextFeature;\n\n  /**\n   * @inheritDoc\n   */\n  TextFeature.prototype.getType = function getType () {\n    return FormatType.TEXT;\n  };\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  TextFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  TextFeature.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  TextFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  TextFeature.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  TextFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  TextFeature.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  TextFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromText(getText(source));\n  };\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  TextFeature.prototype.readProjectionFromText = function readProjectionFromText (text) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  TextFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  TextFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  TextFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return abstract();\n  };\n\n  return TextFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\nexport default TextFeature;\n\n//# sourceMappingURL=TextFeature.js.map","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = (function (XMLFeature) {\n  function KML(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle ?\n      options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ = options.extractStyles !== undefined ?\n      options.extractStyles : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.writeStyles_ = options.writeStyles !== undefined ?\n      options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ = options.showPointNames !== undefined ?\n      options.showPointNames : true;\n\n  }\n\n  if ( XMLFeature ) KML.__proto__ = XMLFeature;\n  KML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  KML.prototype.constructor = KML;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  KML.prototype.readDocumentOrFolder_ = function readDocumentOrFolder_ (node, objectStack) {\n    // FIXME use scope somehow\n    var parsersNS = makeStructureNS(\n      NAMESPACE_URIS, {\n        'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n    /** @type {Array<Feature>} */\n    var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  KML.prototype.readPlacemark_ = function readPlacemark_ (node, objectStack) {\n    var object = pushParseAndPop({'geometry': null},\n      PLACEMARK_PARSERS, node, objectStack);\n    if (!object) {\n      return undefined;\n    }\n    var feature = new Feature();\n    var id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    var geometry = object['geometry'];\n    if (geometry) {\n      transformWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      var style = object['Style'];\n      var styleUrl = object['styleUrl'];\n      var styleFunction = createFeatureStyleFunction(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object);\n\n    return feature;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  KML.prototype.readSharedStyle_ = function readSharedStyle_ (node, objectStack) {\n    var id = node.getAttribute('id');\n    if (id !== null) {\n      var style = readStyle(node, objectStack);\n      if (style) {\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          var url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  KML.prototype.readSharedStyleMap_ = function readSharedStyleMap_ (node, objectStack) {\n    var id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    var styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    var styleUri;\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      var url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  KML.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  KML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var this$1 = this;\n\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    var features;\n    var localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      var feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var fs = this$1.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  KML.prototype.readName = function readName (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  KML.prototype.readNameFromDocument = function readNameFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        var name = this$1.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  KML.prototype.readNameFromNode = function readNameFromNode (node) {\n    var this$1 = this;\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'Placemark' ||\n           localName == 'kml')) {\n        var name = this$1.readNameFromNode(n$1);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  KML.prototype.readNetworkLinks = function readNetworkLinks (source) {\n    var networkLinks = [];\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n    } else {\n      extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Element} */ (source)));\n    }\n    return networkLinks;\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  KML.prototype.readNetworkLinksFromDocument = function readNetworkLinksFromDocument (doc) {\n    var this$1 = this;\n\n    var networkLinks = [];\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(networkLinks, this$1.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return networkLinks;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  KML.prototype.readNetworkLinksFromNode = function readNetworkLinksFromNode (node) {\n    var this$1 = this;\n\n    var networkLinks = [];\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'NetworkLink') {\n        var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n          n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(networkLinks, this$1.readNetworkLinksFromNode(n$1));\n      }\n    }\n    return networkLinks;\n  };\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  KML.prototype.readRegion = function readRegion (source) {\n    var regions = [];\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n    } else {\n      extend(regions, this.readRegionFromNode(\n        /** @type {Element} */ (source)));\n    }\n    return regions;\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  KML.prototype.readRegionFromDocument = function readRegionFromDocument (doc) {\n    var this$1 = this;\n\n    var regions = [];\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this$1.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  KML.prototype.readRegionFromNode = function readRegionFromNode (node) {\n    var this$1 = this;\n\n    var regions = [];\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'Region') {\n        var obj = pushParseAndPop({}, REGION_PARSERS,\n          n, []);\n        regions.push(obj);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(regions, this$1.readRegionFromNode(n$1));\n      }\n    }\n    return regions;\n  };\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  KML.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: kml};\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    var properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n    return kml;\n  };\n\n  return KML;\n}(XMLFeature));\n\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  var textStyle = null;\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n  if (foundStyle.getImage()) {\n    var imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      var imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    var foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  var nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>} Style.\n     */\n    function(feature, resolution) {\n      var drawName = showPointNames;\n      /** @type {Style|undefined} */\n      var nameStyle;\n      var name = '';\n      if (drawName) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  var s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    var hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  var s = getAllTextContent(node, false);\n  var flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  var re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  var m;\n  while ((m = re.exec(s))) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  var s = getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  var src;\n  var href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot = /** @type {Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  var offset;\n  var x = /** @type {number|undefined} */\n      (IconObject['x']);\n  var y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w = /** @type {number|undefined} */\n      (IconObject['w']);\n  var h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    var imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {import(\"../color.js\").Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new Stroke({\n    color: /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new Fill({\n    color: /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  var outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  var gxTrackObject = /** @type {GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var s = getAllTextContent(node, false);\n  var re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  var lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var whens = gxTrackObject.whens;\n  for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  var iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  var geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry;\n  for (var i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    var layout;\n    var flatCoordinates;\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (var i$1 = 1, ii$1 = geometries.length; i$1 < ii$1; ++i$1) {\n        geometry = geometries[i$1];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  var styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  var fillStyle = /** @type {Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  var imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  var textStyle = /** @type {Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  var strokeStyle = /** @type {Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  var outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (var i = 0; i < ii; ++i) {\n    var geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  var pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  var key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    var styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    var style = /** @type {Style} */\n        (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  var styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (name !== null) {\n    var data = readString(node);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  var gxTrackObject = /** @type {GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  var whens = gxTrackObject.whens;\n  var s = getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  var rgba = asArray(color);\n  var opacity = (rgba.length == 4) ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (var i = 0; i < 4; ++i) {\n    var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n\n  var layout = context['layout'];\n  var stride = context['stride'];\n\n  var dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var ii = coordinates.length;\n  var text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (var d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (var i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (var d$1 = 1; d$1 < dimension; ++d$1) {\n        text += ',' + coordinates[i + d$1];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var names = namesAndValues.names;\n  var values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n    var origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var /** @type {Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  var scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  var scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  var type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  var geometries;\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  var factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  var filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    var sequence = makeSequence(properties, keys);\n    var namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  var styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction(feature, 0);\n    if (styles) {\n      var style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      var textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, options));\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\nexport default KML;\n\n//# sourceMappingURL=KML.js.map","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nvar IGCZ = {\n  BAROMETRIC: 'barometric',\n  GPS: 'gps',\n  NONE: 'none'\n};\n\n/**\n * @const\n * @type {RegExp}\n */\nvar B_RECORD_RE =\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nvar IGC = (function (TextFeature) {\n  function IGC(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n  }\n\n  if ( TextFeature ) IGC.__proto__ = TextFeature;\n  IGC.prototype = Object.create( TextFeature && TextFeature.prototype );\n  IGC.prototype.constructor = IGC;\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var altitudeMode = this.altitudeMode_;\n    var lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    var properties = {};\n    var flatCoordinates = [];\n    var year = 2000;\n    var month = 0;\n    var day = 1;\n    var lastDateTime = -1;\n    var i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      var line = lines[i];\n      var m = (void 0);\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          var hour = parseInt(m[1], 10);\n          var minute = parseInt(m[2], 10);\n          var second = parseInt(m[3], 10);\n          var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != IGCZ.NONE) {\n            var z = (void 0);\n            if (altitudeMode == IGCZ.GPS) {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == IGCZ.BAROMETRIC) {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          var dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n    var lineString = new LineString(flatCoordinates, layout);\n    var feature = new Feature(transformWithOptions(lineString, false, opt_options));\n    feature.setProperties(properties);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  };\n\n  return IGC;\n}(TextFeature));\n\nexport default IGC;\n\n//# sourceMappingURL=IGC.js.map","/**\n * @module ol/render/Feature\n */\nimport {extend} from '../array.js';\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n *\n * @param {GeometryType} type Geometry type.\n * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n *     to be right-handed for polygons.\n * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n * @param {Object<string, *>} properties Properties.\n * @param {number|string|undefined} id Feature id.\n */\nvar RenderFeature = function RenderFeature(type, flatCoordinates, ends, properties, id) {\n  /**\n  * @private\n  * @type {import(\"../extent.js\").Extent|undefined}\n  */\n  this.extent_;\n\n  /**\n  * @private\n  * @type {number|string|undefined}\n  */\n  this.id_ = id;\n\n  /**\n  * @private\n  * @type {GeometryType}\n  */\n  this.type_ = type;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatCoordinates_ = flatCoordinates;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatInteriorPoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatMidpoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>|Array<Array<number>>}\n  */\n  this.ends_ = ends;\n\n  /**\n  * @private\n  * @type {Object<string, *>}\n  */\n  this.properties_ = properties;\n\n};\n\n/**\n* Get a feature property by its key.\n* @param {string} key Key\n* @return {*} Value for the requested key.\n* @api\n*/\nRenderFeature.prototype.get = function get (key) {\n  return this.properties_[key];\n};\n\n/**\n* Get the extent of this feature's geometry.\n* @return {import(\"../extent.js\").Extent} Extent.\n* @api\n*/\nRenderFeature.prototype.getExtent = function getExtent () {\n  if (!this.extent_) {\n    this.extent_ = this.type_ === GeometryType.POINT ?\n      createOrUpdateFromCoordinate(this.flatCoordinates_) :\n      createOrUpdateFromFlatCoordinates(\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n\n  }\n  return this.extent_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoints_ = getInteriorPointOfArray(\n      this.flatCoordinates_, 0, /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenters = linearRingssCenter(\n      this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoint.\n*/\nRenderFeature.prototype.getFlatMidpoint = function getFlatMidpoint () {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = interpolatePoint(\n      this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoints.\n*/\nRenderFeature.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var this$1 = this;\n\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = [];\n    var flatCoordinates = this.flatCoordinates_;\n    var offset = 0;\n    var ends = /** @type {Array<number>} */ (this.ends_);\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, 2, 0.5);\n      extend(this$1.flatMidpoints_, midpoint);\n      offset = end;\n    }\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* Get the feature identifier.This is a stable identifier for the feature and\n* is set when reading data from a remote source.\n* @return {number|string|undefined} Id.\n* @api\n*/\nRenderFeature.prototype.getId = function getId () {\n  return this.id_;\n};\n\n/**\n* @return {Array<number>} Flat coordinates.\n*/\nRenderFeature.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n  return this.flatCoordinates_;\n};\n\n/**\n* For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n* determining the geometry type in style function (see {@link #getType}).\n* @return {RenderFeature} Feature.\n* @api\n*/\nRenderFeature.prototype.getGeometry = function getGeometry () {\n  return this;\n};\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {RenderFeature} Simplified geometry.\n */\nRenderFeature.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n  return this;\n};\n\n/**\n* Get the feature properties.\n* @return {Object<string, *>} Feature properties.\n* @api\n*/\nRenderFeature.prototype.getProperties = function getProperties () {\n  return this.properties_;\n};\n\n/**\n* @return {number} Stride.\n*/\nRenderFeature.prototype.getStride = function getStride () {\n  return 2;\n};\n\n/**\n * @return {undefined}\n */\nRenderFeature.prototype.getStyleFunction = function getStyleFunction () {\n  return undefined;\n};\n\n/**\n* Get the type of this feature's geometry.\n* @return {GeometryType} Geometry type.\n* @api\n*/\nRenderFeature.prototype.getType = function getType () {\n  return this.type_;\n};\n\n/**\n* Transform geometry coordinates from tile pixel space to projected.\n* The SRS of the source and destination are expected to be the same.\n*\n* @param {import(\"../proj.js\").ProjectionLike} source The current projection\n* @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.\n*/\nRenderFeature.prototype.transform = function transform (source, destination) {\n  source = getProjection(source);\n  var pixelExtent = source.getExtent();\n  var projectedExtent = source.getWorldExtent();\n  var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n  composeTransform(tmpTransform,\n    projectedExtent[0], projectedExtent[3],\n    scale, -scale, 0,\n    0, 0);\n  transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\n    tmpTransform, this.flatCoordinates_);\n};\n\n\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\nRenderFeature.prototype.getEndss = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\n\n\nexport default RenderFeature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformWithOptions} from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar MVT = (function (FeatureFormat) {\n  function MVT(opt_options) {\n    FeatureFormat.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = null;\n\n  }\n\n  if ( FeatureFormat ) MVT.__proto__ = FeatureFormat;\n  MVT.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  MVT.prototype.constructor = MVT;\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @suppress {missingProperties}\n   * @param {Object} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  MVT.prototype.readRawGeometry_ = function readRawGeometry_ (pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    var end = pbf.readVarint() + pbf.pos;\n    var cmd = 1;\n    var length = 0;\n    var x = 0;\n    var y = 0;\n    var coordsLen = 0;\n    var currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        var cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) { // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n\n      } else if (cmd === 7) {\n\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n          coordsLen += 2;\n        }\n\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n\n  };\n\n  /**\n   * @private\n   * @param {Object} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  MVT.prototype.createFeature_ = function createFeature_ (pbf, rawFeature, opt_options) {\n    var type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    var feature;\n    var id = rawFeature.id;\n    var values = rawFeature.properties;\n    values[this.layerName_] = rawFeature.layer.name;\n\n    var flatCoordinates = [];\n    var ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    var geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n    } else {\n      var geom;\n      if (geometryType == GeometryType.POLYGON) {\n        var endss = [];\n        var offset = 0;\n        var prevEndIndex = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n          var end = ends[i];\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i));\n            prevEndIndex = i;\n          }\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n          geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n            geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n              geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                  null;\n      }\n      var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      var geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geom, false,\n        this.adaptOptions(opt_options)));\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values);\n    }\n\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.getLastExtent = function getLastExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MVT.prototype.getType = function getType () {\n    return FormatType.ARRAY_BUFFER;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readFeatures = function readFeatures (source, opt_options) {\n    var this$1 = this;\n\n    var layers = this.layers_;\n\n    var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    var pbfLayers = pbf.readFields(layersPBFReader, {});\n    /** @type {Array<import(\"../Feature.js\").FeatureLike>} */\n    var features = [];\n    for (var name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      var pbfLayer = pbfLayers[name];\n\n      for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        var rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this$1.createFeature_(pbf, rawFeature));\n      }\n      this$1.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n    }\n\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readProjection = function readProjection (source) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  MVT.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  return MVT;\n}(FeatureFormat));\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {Object} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    var layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    var end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {Object} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    var value = null;\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {Object} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      var key = feature.layer.keys[pbf.readVarint()];\n      var value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  var end = pbf.readVarint() + pbf.pos;\n\n  var feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * @suppress {missingProperties}\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {GeometryType} */\n  var geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n\n//# sourceMappingURL=MVT.js.map","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {pushParseAndPop, makeStructureNS} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null>}\n */\nvar NAMESPACE_URIS = [null];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WAY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'nd': readNd,\n    'tag': readTag\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'node': readNode,\n    'way': readWay\n  });\n\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nvar OSMXML = (function (XMLFeature) {\n  function OSMXML() {\n    XMLFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  if ( XMLFeature ) OSMXML.__proto__ = XMLFeature;\n  OSMXML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  OSMXML.prototype.constructor = OSMXML;\n\n  /**\n   * @inheritDoc\n   */\n  OSMXML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = this.getReadOptions(node, opt_options);\n    if (node.localName == 'osm') {\n      var state = pushParseAndPop({\n        nodes: {},\n        ways: [],\n        features: []\n      }, PARSERS, node, [options]);\n      // parse nodes in ways\n      for (var j = 0; j < state.ways.length; j++) {\n        var values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        var flatCoordinates = [];\n        for (var i = 0, ii = values.ndrefs.length; i < ii; i++) {\n          var point = state.nodes[values.ndrefs[i]];\n          extend(flatCoordinates, point);\n        }\n        var geometry = (void 0);\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n        } else {\n          geometry = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        transformWithOptions(geometry, false, options);\n        var feature = new Feature(geometry);\n        feature.setId(values.id);\n        feature.setProperties(values.tags);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  };\n\n  return OSMXML;\n}(XMLFeature));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'tag': readTag\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  var coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  ];\n  state.nodes[id] = coordinates;\n\n  var values = pushParseAndPop({\n    tags: {}\n  }, NODE_PARSERS, node, objectStack);\n  if (!isEmpty(values.tags)) {\n    var geometry = new Point(coordinates);\n    transformWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setId(id);\n    feature.setProperties(values.tags);\n    state.features.push(feature);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  var id = node.getAttribute('id');\n  var values = pushParseAndPop({\n    id: id,\n    ndrefs: [],\n    tags: {}\n  }, WAY_PARSERS, node, objectStack);\n  var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\n\nexport default OSMXML;\n\n//# sourceMappingURL=OSMXML.js.map","/**\n * @module ol/geom/flat/flip\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n  var dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  var j = offset;\n  while (j < end) {\n    var x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (var k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n\n//# sourceMappingURL=flip.js.map","/**\n * @module ol/format/Polyline\n */\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = (function (TextFeature) {\n  function Polyline(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout ?\n      options.geometryLayout : GeometryLayout.XY;\n  }\n\n  if ( TextFeature ) Polyline.__proto__ = TextFeature;\n  Polyline.prototype = Object.create( TextFeature && TextFeature.prototype );\n  Polyline.prototype.constructor = Polyline;\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var stride = getStrideForLayout(this.geometryLayout_);\n    var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n\n    return (\n      /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(\n        new LineString(coordinates, this.geometryLayout_),\n        false,\n        this.adaptOptions(opt_options)\n      ))\n    );\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    geometry = /** @type {LineString} */\n      (transformWithOptions(geometry, true, this.adaptOptions(opt_options)));\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  };\n\n  return Polyline;\n}(TextFeature));\n\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      var num = numbers[i];\n      var delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  /** @type {Array<number>} */\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  var numbers = decodeFloats(encoded, factor);\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var numbers = decodeSignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  var numbers = decodeUnsignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  var encoded = '';\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  var numbers = [];\n  var current = 0;\n  var shift = 0;\n  for (var i = 0, ii = encoded.length; i < ii; ++i) {\n    var b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  var value, encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\n\nexport default Polyline;\n\n//# sourceMappingURL=Polyline.js.map","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nvar TopoJSON = (function (JSONFeature) {\n  function TopoJSON(opt_options) {\n    JSONFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n  }\n\n  if ( JSONFeature ) TopoJSON.__proto__ = JSONFeature;\n  TopoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  TopoJSON.prototype.constructor = TopoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    if (object.type == 'Topology') {\n      var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      var transform, scale = null, translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      var arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      var features = [];\n      var topoJSONFeatures = topoJSONTopology['objects'];\n      var property = this.layerName_;\n      var feature;\n      for (var objectName in topoJSONFeatures) {\n        if (this$1.layers_ && this$1.layers_.indexOf(objectName) == -1) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n          features.push.apply(features, readFeaturesFromGeometryCollection(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n          features.push(readFeatureFromGeometry(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return this.dataProjection;\n  };\n\n  return TopoJSON;\n}(JSONFeature));\n\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry\n};\n\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  var coordinates = [];\n  var index, arc;\n  for (var i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      arc = arcs[index];\n    } else {\n      // reverse arc\n      arc = arcs[~index].slice().reverse();\n    }\n    coordinates.push.apply(coordinates, arc);\n  }\n  // provide fresh copies of coordinate arrays\n  for (var j = 0, jj = coordinates.length; j < jj; ++j) {\n    coordinates[j] = coordinates[j].slice();\n  }\n  return coordinates;\n}\n\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  var coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  var coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  var coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    var polyArray = object['arcs'][i];\n    var ringCoords = [];\n    for (var j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n  var geometries = collection['geometries'];\n  var features = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i], arcs, scale, translate, property, name, opt_options);\n  }\n  return features;\n}\n\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n  var geometry;\n  var type = object.type;\n  var geometryReader = GEOMETRY_READERS[type];\n  if ((type === 'Point') || (type === 'MultiPoint')) {\n    geometry = geometryReader(object, scale, translate);\n  } else {\n    geometry = geometryReader(object, arcs);\n  }\n  var feature = new Feature();\n  feature.setGeometry(/** @type {import(\"../geom/Geometry.js\").default} */ (\n    transformWithOptions(geometry, false, opt_options)));\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  var properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties);\n  }\n  return feature;\n}\n\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (var i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  var x = 0;\n  var y = 0;\n  for (var i = 0, ii = arc.length; i < ii; ++i) {\n    var vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\n\nexport default TopoJSON;\n\n//# sourceMappingURL=TopoJSON.js.map","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nvar Filter = function Filter(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function getTagName () {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n//# sourceMappingURL=Filter.js.map","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {assert} from '../../asserts.js';\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = (function (Filter) {\n  function LogicalNary(tagName, conditions) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n\n  if ( Filter ) LogicalNary.__proto__ = Filter;\n  LogicalNary.prototype = Object.create( Filter && Filter.prototype );\n  LogicalNary.prototype.constructor = LogicalNary;\n\n  return LogicalNary;\n}(Filter));\n\nexport default LogicalNary;\n\n//# sourceMappingURL=LogicalNary.js.map","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And = (function (LogicalNary) {\n  function And(conditions) {\n    LogicalNary.call(this, 'And', Array.prototype.slice.call(arguments));\n  }\n\n  if ( LogicalNary ) And.__proto__ = LogicalNary;\n  And.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  And.prototype.constructor = And;\n\n  return And;\n}(LogicalNary));\n\nexport default And;\n\n//# sourceMappingURL=And.js.map","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nvar Bbox = (function (Filter) {\n  function Bbox(geometryName, extent, opt_srsName) {\n\n    Filter.call(this, 'BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Bbox.__proto__ = Filter;\n  Bbox.prototype = Object.create( Filter && Filter.prototype );\n  Bbox.prototype.constructor = Bbox;\n\n  return Bbox;\n}(Filter));\n\nexport default Bbox;\n\n//# sourceMappingURL=Bbox.js.map","/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nvar Spatial = (function (Filter) {\n  function Spatial(tagName, geometryName, geometry, opt_srsName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName || 'the_geom';\n\n    /**\n     * @type {import(\"../../geom/Geometry.js\").default}\n     */\n    this.geometry = geometry;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Spatial.__proto__ = Filter;\n  Spatial.prototype = Object.create( Filter && Filter.prototype );\n  Spatial.prototype.constructor = Spatial;\n\n  return Spatial;\n}(Filter));\n\nexport default Spatial;\n\n//# sourceMappingURL=Spatial.js.map","/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nvar Contains = (function (Spatial) {\n  function Contains(geometryName, geometry, opt_srsName) {\n\n    Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n  }\n\n  if ( Spatial ) Contains.__proto__ = Spatial;\n  Contains.prototype = Object.create( Spatial && Spatial.prototype );\n  Contains.prototype.constructor = Contains;\n\n  return Contains;\n}(Spatial));\n\nexport default Contains;\n\n//# sourceMappingURL=Contains.js.map","/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nvar Comparison = (function (Filter) {\n  function Comparison(tagName, propertyName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.propertyName = propertyName;\n  }\n\n  if ( Filter ) Comparison.__proto__ = Filter;\n  Comparison.prototype = Object.create( Filter && Filter.prototype );\n  Comparison.prototype.constructor = Comparison;\n\n  return Comparison;\n}(Filter));\n\nexport default Comparison;\n\n//# sourceMappingURL=Comparison.js.map","/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nvar During = (function (Comparison) {\n  function During(propertyName, begin, end) {\n    Comparison.call(this, 'During', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.begin = begin;\n\n    /**\n     * @type {!string}\n     */\n    this.end = end;\n  }\n\n  if ( Comparison ) During.__proto__ = Comparison;\n  During.prototype = Object.create( Comparison && Comparison.prototype );\n  During.prototype.constructor = During;\n\n  return During;\n}(Comparison));\n\nexport default During;\n\n//# sourceMappingURL=During.js.map","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary = (function (Comparison) {\n  function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n\n    Comparison.call(this, tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n  }\n\n  if ( Comparison ) ComparisonBinary.__proto__ = Comparison;\n  ComparisonBinary.prototype = Object.create( Comparison && Comparison.prototype );\n  ComparisonBinary.prototype.constructor = ComparisonBinary;\n\n  return ComparisonBinary;\n}(Comparison));\n\nexport default ComparisonBinary;\n\n//# sourceMappingURL=ComparisonBinary.js.map","/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = (function (ComparisonBinary) {\n  function EqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) EqualTo.__proto__ = ComparisonBinary;\n  EqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  EqualTo.prototype.constructor = EqualTo;\n\n  return EqualTo;\n}(ComparisonBinary));\n\nexport default EqualTo;\n\n//# sourceMappingURL=EqualTo.js.map","/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nvar GreaterThan = (function (ComparisonBinary) {\n  function GreaterThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThan.__proto__ = ComparisonBinary;\n  GreaterThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThan.prototype.constructor = GreaterThan;\n\n  return GreaterThan;\n}(ComparisonBinary));\n\nexport default GreaterThan;\n\n//# sourceMappingURL=GreaterThan.js.map","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nvar GreaterThanOrEqualTo = (function (ComparisonBinary) {\n  function GreaterThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThanOrEqualTo.__proto__ = ComparisonBinary;\n  GreaterThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThanOrEqualTo.prototype.constructor = GreaterThanOrEqualTo;\n\n  return GreaterThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default GreaterThanOrEqualTo;\n\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = (function (Spatial) {\n  function Intersects(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Intersects.__proto__ = Spatial;\n  Intersects.prototype = Object.create( Spatial && Spatial.prototype );\n  Intersects.prototype.constructor = Intersects;\n\n  return Intersects;\n}(Spatial));\n\nexport default Intersects;\n\n//# sourceMappingURL=Intersects.js.map","/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = (function (Comparison) {\n  function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n    Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n\n  }\n\n  if ( Comparison ) IsBetween.__proto__ = Comparison;\n  IsBetween.prototype = Object.create( Comparison && Comparison.prototype );\n  IsBetween.prototype.constructor = IsBetween;\n\n  return IsBetween;\n}(Comparison));\n\nexport default IsBetween;\n\n//# sourceMappingURL=IsBetween.js.map","/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = (function (Comparison) {\n  function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    Comparison.call(this, 'PropertyIsLike', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.pattern = pattern;\n\n    /**\n     * @type {!string}\n     */\n    this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n    /**\n     * @type {!string}\n     */\n    this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n    /**\n     * @type {!string}\n     */\n    this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n\n  }\n\n  if ( Comparison ) IsLike.__proto__ = Comparison;\n  IsLike.prototype = Object.create( Comparison && Comparison.prototype );\n  IsLike.prototype.constructor = IsLike;\n\n  return IsLike;\n}(Comparison));\n\nexport default IsLike;\n\n//# sourceMappingURL=IsLike.js.map","/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nvar IsNull = (function (Comparison) {\n  function IsNull(propertyName) {\n    Comparison.call(this, 'PropertyIsNull', propertyName);\n  }\n\n  if ( Comparison ) IsNull.__proto__ = Comparison;\n  IsNull.prototype = Object.create( Comparison && Comparison.prototype );\n  IsNull.prototype.constructor = IsNull;\n\n  return IsNull;\n}(Comparison));\n\nexport default IsNull;\n\n//# sourceMappingURL=IsNull.js.map","/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nvar LessThan = (function (ComparisonBinary) {\n  function LessThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThan.__proto__ = ComparisonBinary;\n  LessThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThan.prototype.constructor = LessThan;\n\n  return LessThan;\n}(ComparisonBinary));\n\nexport default LessThan;\n\n//# sourceMappingURL=LessThan.js.map","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nvar LessThanOrEqualTo = (function (ComparisonBinary) {\n  function LessThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThanOrEqualTo.__proto__ = ComparisonBinary;\n  LessThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThanOrEqualTo.prototype.constructor = LessThanOrEqualTo;\n\n  return LessThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default LessThanOrEqualTo;\n\n//# sourceMappingURL=LessThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nvar Not = (function (Filter) {\n  function Not(condition) {\n\n    Filter.call(this, 'Not');\n\n    /**\n     * @type {!import(\"./Filter.js\").default}\n     */\n    this.condition = condition;\n\n  }\n\n  if ( Filter ) Not.__proto__ = Filter;\n  Not.prototype = Object.create( Filter && Filter.prototype );\n  Not.prototype.constructor = Not;\n\n  return Not;\n}(Filter));\n\nexport default Not;\n\n//# sourceMappingURL=Not.js.map","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = (function (ComparisonBinary) {\n  function NotEqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) NotEqualTo.__proto__ = ComparisonBinary;\n  NotEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  NotEqualTo.prototype.constructor = NotEqualTo;\n\n  return NotEqualTo;\n}(ComparisonBinary));\n\nexport default NotEqualTo;\n\n//# sourceMappingURL=NotEqualTo.js.map","/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nvar Or = (function (LogicalNary) {\n  function Or(conditions) {\n    LogicalNary.call(this, 'Or', Array.prototype.slice.call(arguments));\n  }\n\n  if ( LogicalNary ) Or.__proto__ = LogicalNary;\n  Or.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  Or.prototype.constructor = Or;\n\n  return Or;\n}(LogicalNary));\n\nexport default Or;\n\n//# sourceMappingURL=Or.js.map","/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nvar Within = (function (Spatial) {\n  function Within(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Within.__proto__ = Spatial;\n  Within.prototype = Object.create( Spatial && Spatial.prototype );\n  Within.prototype.constructor = Within;\n\n  return Within;\n}(Spatial));\n\nexport default Within;\n\n//# sourceMappingURL=Within.js.map","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport Within from './filter/Within.js';\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params));\n}\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params));\n}\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @returns {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n  return new Bbox(geometryName, extent, opt_srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n  return new Contains(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n  return new Intersects(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n  return new Within(geometryName, geometry, opt_srsName);\n}\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n  return new EqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new IsLike(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\n//# sourceMappingURL=filter.js.map","/**\n * @module ol/format/WFS\n */\nimport {assert} from '../asserts.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {and as andFilter, bbox as bboxFilter} from './filter.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from './xsd.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, isDocument, makeArrayPusher, makeChildAppender,\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(\n      readInsertResults, 'insertIds')\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {import(\"../extent.js\").Extent} bounds\n */\n\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n\n\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n\n\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @type {string}\n */\nvar OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @type {string}\n */\nvar WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @type {string}\n */\nvar FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = (function (XMLFeature) {\n  function WFS(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat ?\n      options.gmlFormat : new GML3();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation ?\n      options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n  }\n\n  if ( XMLFeature ) WFS.__proto__ = XMLFeature;\n  WFS.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WFS.prototype.constructor = WFS;\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  WFS.prototype.getFeatureType = function getFeatureType () {\n    return this.featureType_;\n  };\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  WFS.prototype.setFeatureType = function setFeatureType (featureType) {\n    this.featureType_ = featureType;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_\n    });\n\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n    var objectStack = [context];\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n    var features = pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      objectStack, this.gmlFormat_);\n    if (!features) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  WFS.prototype.readTransactionResponse = function readTransactionResponse (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source));\n    } else {\n      return this.readTransactionResponseFromNode(/** @type {Element} */ (source));\n    }\n  };\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  WFS.prototype.readFeatureCollectionMetadata = function readFeatureCollectionMetadata (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source));\n    } else {\n      return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Element} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromDocument = function readFeatureCollectionMetadataFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFeatureCollectionMetadataFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromNode = function readFeatureCollectionMetadataFromNode (node) {\n    var result = {};\n    var value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'));\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromDocument = function readTransactionResponseFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromNode = function readTransactionResponseFromNode (node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */({}),\n      TRANSACTION_RESPONSE_PARSERS, node, []);\n  };\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeGetFeature = function writeGetFeature$1 (options) {\n    var node = createElementNS(WFSNS, 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', '1.1.0');\n    var filter;\n    if (options) {\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n      if (options.outputFormat) {\n        node.setAttribute('outputFormat', options.outputFormat);\n      }\n      if (options.maxFeatures !== undefined) {\n        node.setAttribute('maxFeatures', String(options.maxFeatures));\n      }\n      if (options.resultType) {\n        node.setAttribute('resultType', options.resultType);\n      }\n      if (options.startIndex !== undefined) {\n        node.setAttribute('startIndex', String(options.startIndex));\n      }\n      if (options.count !== undefined) {\n        node.setAttribute('count', String(options.count));\n      }\n      if (options.viewParams !== undefined) {\n        node.setAttribute('viewParams ', options.viewParams);\n      }\n      filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName,\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\n        var bbox = bboxFilter(\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n        if (filter) {\n          // if bbox and filter are both set, combine the two into a single filter\n          filter = andFilter(filter, bbox);\n        } else {\n          filter = bbox;\n        }\n      }\n    }\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'geometryName': options.geometryName,\n      'filter': filter,\n      'propertyNames': options.propertyNames ? options.propertyNames : []\n    });\n\n    assert(Array.isArray(options.featureTypes),\n      11); // `options.featureTypes` should be an Array\n    writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n    return node;\n  };\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeTransaction = function writeTransaction (inserts, updates, deletes, options) {\n    var objectStack = [];\n    var node = createElementNS(WFSNS, 'Transaction');\n    var version = options.version ? options.version : DEFAULT_VERSION;\n    var gmlVersion = version === '1.0.0' ? 2 : 3;\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    var baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var obj;\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    var schemaLocation = SCHEMA_LOCATIONS[version];\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n    var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n    if (inserts) {\n      obj = assign({node: node}, {'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName});\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Insert'), inserts,\n        objectStack);\n    }\n    if (updates) {\n      obj = assign({node: node}, {'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName});\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Update'), updates,\n        objectStack);\n    }\n    if (deletes) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Delete'), deletes,\n      objectStack);\n    }\n    if (options.nativeElements) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Native'), options.nativeElements,\n      objectStack);\n    }\n    return node;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readProjectionFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    var this$1 = this;\n\n    if (node.firstElementChild &&\n        node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (!(n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 &&\n            n.firstChild.nodeType === 3))) {\n          var objectStack = [{}];\n          this$1.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  return WFS;\n}(XMLFeature));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop(\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop(\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  var filter = createElementNS(OGCNS, 'Filter');\n  var child = createElementNS(OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  var prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n      if (value !== undefined) {\n        var name = keys[i];\n        if (value && typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  var name = createElementNS(WFSNS, 'Name');\n  var context = objectStack[objectStack.length - 1];\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = createElementNS(WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value && typeof /** @type {?} */ (pair.value).getSimplifiedGeometry === 'function') {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeContainsFilter),\n    'Intersects': makeChildAppender(writeIntersectsFilter),\n    'Within': makeChildAppender(writeWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  var filter = context['filter'];\n  if (filter) {\n    var child = createElementNS(OGCNS, 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Contains.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Intersects.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Within.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n\n  var valueReference = createElementNS(FESNS, 'ValueReference');\n  writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  var begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  var end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  var conditions = filter.conditions;\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    pushSerializeAndPop(item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  var condition = filter.condition;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.expression);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n\n  var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n\n  var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.pattern);\n}\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n  var property = createElementNS(OGCNS, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n  writeOgcExpression('PropertyName', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n  writeOgcExpression('Literal', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  var timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n  var child = createElementNS(OGCNS, 'Filter');\n  writeFilterCondition(child, filter, []);\n  return child;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n}\n\n\nexport default WFS;\n\n//# sourceMappingURL=WFS.js.map","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\n\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\n */\nvar GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = function Lexer(wkt) {\n\n  /**\n   * @type {string}\n   */\n  this.wkt = wkt;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = -1;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is alphabetic.\n * @private\n */\nLexer.prototype.isAlpha_ = function isAlpha_ (c) {\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n};\n\n/**\n * @param {string} c Character.\n * @param {boolean=} opt_decimal Whether the string number\n *   contains a dot, i.e. is a decimal number.\n * @return {boolean} Whether the character is numeric.\n * @private\n */\nLexer.prototype.isNumeric_ = function isNumeric_ (c, opt_decimal) {\n  var decimal = opt_decimal !== undefined ? opt_decimal : false;\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is whitespace.\n * @private\n */\nLexer.prototype.isWhiteSpace_ = function isWhiteSpace_ (c) {\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n};\n\n/**\n * @return {string} Next string character.\n * @private\n */\nLexer.prototype.nextChar_ = function nextChar_ () {\n  return this.wkt.charAt(++this.index_);\n};\n\n/**\n * Fetch and return the next token.\n * @return {!Token} Next string token.\n */\nLexer.prototype.nextToken = function nextToken () {\n  var c = this.nextChar_();\n  var position = this.index_;\n  /** @type {number|string} */\n  var value = c;\n  var type;\n\n  if (c == '(') {\n    type = TokenType.LEFT_PAREN;\n  } else if (c == ',') {\n    type = TokenType.COMMA;\n  } else if (c == ')') {\n    type = TokenType.RIGHT_PAREN;\n  } else if (this.isNumeric_(c) || c == '-') {\n    type = TokenType.NUMBER;\n    value = this.readNumber_();\n  } else if (this.isAlpha_(c)) {\n    type = TokenType.TEXT;\n    value = this.readText_();\n  } else if (this.isWhiteSpace_(c)) {\n    return this.nextToken();\n  } else if (c === '') {\n    type = TokenType.EOF;\n  } else {\n    throw new Error('Unexpected character: ' + c);\n  }\n\n  return {position: position, value: value, type: type};\n};\n\n/**\n * @return {number} Numeric token value.\n * @private\n */\nLexer.prototype.readNumber_ = function readNumber_ () {\n    var this$1 = this;\n\n  var c;\n  var index = this.index_;\n  var decimal = false;\n  var scientificNotation = false;\n  do {\n    if (c == '.') {\n      decimal = true;\n    } else if (c == 'e' || c == 'E') {\n      scientificNotation = true;\n    }\n    c = this$1.nextChar_();\n  } while (\n    this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      !scientificNotation && (c == 'e' || c == 'E') ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      scientificNotation && (c == '-' || c == '+')\n  );\n  return parseFloat(this.wkt.substring(index, this.index_--));\n};\n\n/**\n * @return {string} String token value.\n * @private\n */\nLexer.prototype.readText_ = function readText_ () {\n    var this$1 = this;\n\n  var c;\n  var index = this.index_;\n  do {\n    c = this$1.nextChar_();\n  } while (this.isAlpha_(c));\n  return this.wkt.substring(index, this.index_--).toUpperCase();\n};\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = function Parser(lexer) {\n\n  /**\n   * @type {Lexer}\n   * @private\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @type {Token}\n   * @private\n   */\n  this.token_;\n\n  /**\n   * @type {GeometryLayout}\n   * @private\n   */\n  this.layout_ = GeometryLayout.XY;\n};\n\n/**\n * Fetch the next token form the lexer and replace the active token.\n * @private\n */\nParser.prototype.consume_ = function consume_ () {\n  this.token_ = this.lexer_.nextToken();\n};\n\n/**\n * Tests if the given type matches the type of the current token.\n * @param {TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.isTokenType = function isTokenType (type) {\n  var isMatch = this.token_.type == type;\n  return isMatch;\n};\n\n/**\n * If the given type matches the current token, consume it.\n * @param {TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.match = function match (type) {\n  var isMatch = this.isTokenType(type);\n  if (isMatch) {\n    this.consume_();\n  }\n  return isMatch;\n};\n\n/**\n * Try to parse the tokens provided by the lexer.\n * @return {import(\"../geom/Geometry.js\").default} The geometry.\n */\nParser.prototype.parse = function parse () {\n  this.consume_();\n  var geometry = this.parseGeometry_();\n  return geometry;\n};\n\n/**\n * Try to parse the dimensional info.\n * @return {GeometryLayout} The layout.\n * @private\n */\nParser.prototype.parseGeometryLayout_ = function parseGeometryLayout_ () {\n  var layout = GeometryLayout.XY;\n  var dimToken = this.token_;\n  if (this.isTokenType(TokenType.TEXT)) {\n    var dimInfo = dimToken.value;\n    if (dimInfo === Z) {\n      layout = GeometryLayout.XYZ;\n    } else if (dimInfo === M) {\n      layout = GeometryLayout.XYM;\n    } else if (dimInfo === ZM) {\n      layout = GeometryLayout.XYZM;\n    }\n    if (layout !== GeometryLayout.XY) {\n      this.consume_();\n    }\n  }\n  return layout;\n};\n\n/**\n * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n * @private\n */\nParser.prototype.parseGeometryCollectionText_ = function parseGeometryCollectionText_ () {\n    var this$1 = this;\n\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var geometries = [];\n    do {\n      geometries.push(this$1.parseGeometry_());\n    } while (this.match(TokenType.COMMA));\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return geometries;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {Array<number>} All values in a point.\n * @private\n */\nParser.prototype.parsePointText_ = function parsePointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePoint_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return null;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a linestring.\n * @private\n */\nParser.prototype.parseLineStringText_ = function parseLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePointList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n * @private\n */\nParser.prototype.parsePolygonText_ = function parsePolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a multipoint.\n * @private\n */\nParser.prototype.parseMultiPointText_ = function parseMultiPointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates;\n    if (this.token_.type == TokenType.LEFT_PAREN) {\n      coordinates = this.parsePointTextList_();\n    } else {\n      coordinates = this.parsePointList_();\n    }\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} All linestring points\n *                                        in a multilinestring.\n * @private\n */\nParser.prototype.parseMultiLineStringText_ = function parseMultiLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n * @private\n */\nParser.prototype.parseMultiPolygonText_ = function parseMultiPolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePolygonTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<number>} A point.\n * @private\n */\nParser.prototype.parsePoint_ = function parsePoint_ () {\n    var this$1 = this;\n\n  var coordinates = [];\n  var dimensions = this.layout_.length;\n  for (var i = 0; i < dimensions; ++i) {\n    var token = this$1.token_;\n    if (this$1.match(TokenType.NUMBER)) {\n      coordinates.push(/** @type {number} */ (token.value));\n    } else {\n      break;\n    }\n  }\n  if (coordinates.length == dimensions) {\n    return coordinates;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointList_ = function parsePointList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePoint_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePoint_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointTextList_ = function parsePointTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePointText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePointText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} An array of points.\n * @private\n */\nParser.prototype.parseLineStringTextList_ = function parseLineStringTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parseLineStringText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parseLineStringText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n * @private\n */\nParser.prototype.parsePolygonTextList_ = function parsePolygonTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePolygonText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePolygonText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {boolean} Whether the token implies an empty geometry.\n * @private\n */\nParser.prototype.isEmptyGeometry_ = function isEmptyGeometry_ () {\n  var isEmpty = this.isTokenType(TokenType.TEXT) &&\n      this.token_.value == EMPTY;\n  if (isEmpty) {\n    this.consume_();\n  }\n  return isEmpty;\n};\n\n/**\n * Create an error message for an unexpected token error.\n * @return {string} Error message.\n * @private\n */\nParser.prototype.formatErrorMessage_ = function formatErrorMessage_ () {\n  return 'Unexpected `' + this.token_.value + '` at position ' +\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\n};\n\n/**\n * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n * @private\n */\nParser.prototype.parseGeometry_ = function parseGeometry_ () {\n  var token = this.token_;\n  if (this.match(TokenType.TEXT)) {\n    var geomType = token.value;\n    this.layout_ = this.parseGeometryLayout_();\n    if (geomType == 'GEOMETRYCOLLECTION') {\n      var geometries = this.parseGeometryCollectionText_();\n      return new GeometryCollection(geometries);\n    } else {\n      var ctor = GeometryConstructor[geomType];\n      if (!ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n\n      var coordinates;\n      switch (geomType) {\n        case 'POINT': {\n          coordinates = this.parsePointText_();\n          break;\n        }\n        case 'LINESTRING': {\n          coordinates = this.parseLineStringText_();\n          break;\n        }\n        case 'POLYGON': {\n          coordinates = this.parsePolygonText_();\n          break;\n        }\n        case 'MULTIPOINT': {\n          coordinates = this.parseMultiPointText_();\n          break;\n        }\n        case 'MULTILINESTRING': {\n          coordinates = this.parseMultiLineStringText_();\n          break;\n        }\n        case 'MULTIPOLYGON': {\n          coordinates = this.parseMultiPolygonText_();\n          break;\n        }\n        default: {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n      }\n\n      if (!coordinates) {\n        if (ctor === GeometryConstructor['POINT']) {\n          coordinates = [NaN, NaN];\n        } else {\n          coordinates = [];\n        }\n      }\n      return new ctor(coordinates, this.layout_);\n    }\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = (function (TextFeature) {\n  function WKT(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ = options.splitCollection !== undefined ?\n      options.splitCollection : false;\n\n  }\n\n  if ( TextFeature ) WKT.__proto__ = TextFeature;\n  WKT.prototype = Object.create( TextFeature && TextFeature.prototype );\n  WKT.prototype.constructor = WKT;\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default|undefined}\n   *     The geometry created.\n   * @private\n   */\n  WKT.prototype.parse_ = function parse_ (wkt) {\n    var lexer = new Lexer(wkt);\n    var parser = new Parser(lexer);\n    return parser.parse();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      var feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var geometries = [];\n    var geometry = this.readGeometryFromText(text, opt_options);\n    if (this.splitCollection_ &&\n        geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n      geometries = (/** @type {GeometryCollection} */ (geometry))\n        .getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      var feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var geometry = this.parse_(text);\n    if (geometry) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options))\n      );\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    var geometries = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    var collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return encode(/** @type {import(\"../geom/Geometry.js\").default} */ (\n      transformWithOptions(geometry, true, opt_options)));\n  };\n\n  return WKT;\n}(TextFeature));\n\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  var array = [];\n  var components = geom.getPoints();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  var array = [];\n  var geoms = geom.getGeometries();\n  for (var i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  var array = [];\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  var array = [];\n  var components = geom.getLineStrings();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  var array = [];\n  var rings = geom.getLinearRings();\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  var array = [];\n  var components = geom.getPolygons();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  var layout = geom.getLayout();\n  var dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nvar GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  var type = geom.getType();\n  var geometryEncoder = GeometryEncoder[type];\n  var enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\n    var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\nexport default WKT;\n\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = function XML () {};\n\nXML.prototype.read = function read (source) {\n  if (!source) {\n    return null;\n  } else if (typeof source === 'string') {\n    var doc = parse(source);\n    return this.readFromDocument(doc);\n  } else if (isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else {\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n};\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function readFromDocument (doc) {};\n\n/**\n * @abstract\n * @param {Element} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function readFromNode (node) {};\n\nexport default XML;\n\n//# sourceMappingURL=XML.js.map","/**\n * @module ol/format/WMSCapabilities\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from './xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = (function (XML) {\n  function WMSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  if ( XML ) WMSCapabilities.__proto__ = XML;\n  WMSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMSCapabilities.prototype.constructor = WMSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    this.version = node.getAttribute('version').trim();\n    var wmsCapabilityObject = pushParseAndPop({\n      'version': this.version\n    }, PARSERS, node, []);\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  };\n\n  return WMSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  var extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  var resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  var geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  var westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  var southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  var eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  var northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  var queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  var cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  var opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      var childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      var parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  var dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    var size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  var authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  var metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n\n//# sourceMappingURL=WMSCapabilities.js.map","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {extend, includes} from '../array.js';\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {assign} from '../obj.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n\n\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = (function (XMLFeature) {\n  function WMSGetFeatureInfo(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  if ( XMLFeature ) WMSGetFeatureInfo.__proto__ = XMLFeature;\n  WMSGetFeatureInfo.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WMSGetFeatureInfo.prototype.constructor = WMSGetFeatureInfo;\n\n  /**\n   * @return {Array<string>} layers\n   */\n  WMSGetFeatureInfo.prototype.getLayers = function getLayers () {\n    return this.layers_;\n  };\n\n  /**\n   * @param {Array<string>} layers Layers to parse.\n   */\n  WMSGetFeatureInfo.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  WMSGetFeatureInfo.prototype.readFeatures_ = function readFeatures_ (node, objectStack) {\n    var this$1 = this;\n\n    node.setAttribute('namespaceURI', this.featureNS_);\n    var localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n        var layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        var layerElement = /** @type {Element} */ (layer);\n        var context = objectStack[0];\n\n        var toRemove = layerIdentifier;\n        var layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this$1.layers_ && !includes(this$1.layers_, layerName)) {\n          continue;\n        }\n\n        var featureType = layerName +\n            featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this$1.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        var parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this$1.gmlFormat_.readFeatureElement, this$1.gmlFormat_);\n        var parsersNS = makeStructureNS(\n          [context['featureNS'], null], parsers);\n        layerElement.setAttribute('namespaceURI', this$1.featureNS_);\n        var layerFeatures = pushParseAndPop(\n          [], parsersNS, layerElement, objectStack, this$1.gmlFormat_);\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      var gmlFeatures = pushParseAndPop([],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n        [{}], this.gmlFormat_);\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSGetFeatureInfo.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {};\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    return this.readFeatures_(node, [options]);\n  };\n\n  return WMSGetFeatureInfo;\n}(XMLFeature));\n\n\nexport default WMSGetFeatureInfo;\n\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","/**\n * @module ol/format/OWS\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readString} from './xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\nvar OWS = (function (XML) {\n  function OWS() {\n    XML.call(this);\n  }\n\n  if ( XML ) OWS.__proto__ = XML;\n  OWS.prototype = Object.create( XML && XML.prototype );\n  OWS.prototype.constructor = OWS;\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromNode = function readFromNode (node) {\n    var owsObject = pushParseAndPop({},\n      PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  };\n\n  return OWS;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  var href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  var name = node.getAttribute('name');\n  var value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  var object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n\n//# sourceMappingURL=OWS.js.map","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport OWS from './OWS.js';\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from './xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = (function (XML) {\n  function WMTSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  if ( XML ) WMTSCapabilities.__proto__ = XML;\n  WMTSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMTSCapabilities.prototype.constructor = WMTSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    var version = node.getAttribute('version').trim();\n    var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  };\n\n  return WMTSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  var isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  var format = node.getAttribute('format');\n  var template = node.getAttribute('template');\n  var resourceType = node.getAttribute('resourceType');\n  var resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  var legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  var coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  var x = +coordinates[0];\n  var y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n\n//# sourceMappingURL=WMTSCapabilities.js.map","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nvar getChangeType = (function() {\n  var changeType;\n  return function() {\n    if (!changeType) {\n      var body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = (function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    listen(this.button_, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  FullScreen.prototype.setClassName_ = function setClassName_ (element, fullscreen) {\n    var activeClassName = this.cssClassName_ + '-true';\n    var inactiveClassName = this.cssClassName_ + '-false';\n    var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/control/MousePosition\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from './Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = (function (Control) {\n  function MousePosition(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    Control.call(this, {\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    listen(this,\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_, this);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastMouseMovePixel_ = null;\n\n  }\n\n  if ( Control ) MousePosition.__proto__ = Control;\n  MousePosition.prototype = Object.create( Control && Control.prototype );\n  MousePosition.prototype.constructor = MousePosition;\n\n  /**\n   * @private\n   */\n  MousePosition.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    this.transform_ = null;\n  };\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getCoordinateFormat = function getCoordinateFormat () {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  };\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\n    );\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseMove = function handleMouseMove (event) {\n    var map = this.getMap();\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\n    this.updateHTML_(this.lastMouseMovePixel_);\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseOut = function handleMouseOut (event) {\n    this.updateHTML_(null);\n    this.lastMouseMovePixel_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MousePosition.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      var viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this),\n        listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this),\n          listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setCoordinateFormat = function setCoordinateFormat (format) {\n    this.set(COORDINATE_FORMAT, format);\n  };\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setProjection = function setProjection (projection) {\n    this.set(PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  MousePosition.prototype.updateHTML_ = function updateHTML_ (pixel) {\n    var html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        var projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      var map = this.getMap();\n      var coordinate = map.getCoordinateFromPixel(pixel);\n      if (coordinate) {\n        this.transform_(coordinate, coordinate);\n        var coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  };\n\n  return MousePosition;\n}(Control));\n\n\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n}\n\n\nexport default MousePosition;\n\n//# sourceMappingURL=MousePosition.js.map","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = (function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {import(\"../Map.js\").default}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n        /**\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var position = /** @type {?} */ (computeDesiredMousePosition(event));\n      var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\n//# sourceMappingURL=OverviewMap.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = (function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var this$1 = this;\n\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this$1.element.style.display = 'none';\n        this$1.renderedVisible_ = false;\n        return;\n      } else if (width >= this$1.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = (function (Control) {\n  function ZoomSlider(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n      * @type {!Array.<import(\"../events.js\").EventsKey>}\n      * @private\n      */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  if ( Control ) ZoomSlider.__proto__ = Control;\n  ZoomSlider.prototype = Object.create( Control && Control.prototype );\n  ZoomSlider.prototype.constructor = ZoomSlider;\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.disposeInternal = function disposeInternal () {\n    this.dragger_.dispose();\n    Control.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      map.render();\n    }\n  };\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  ZoomSlider.prototype.initSlider_ = function initSlider_ () {\n    var container = this.element;\n    var containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    var computedStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  };\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  ZoomSlider.prototype.handleContainerClick_ = function handleContainerClick_ (event) {\n    var view = this.getMap().getView();\n\n    var relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    var resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  /**\n   * Handle dragger start events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerStart_ = function handleDraggerStart_ (event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        var drag = this.handleDraggerDrag_;\n        var end = this.handleDraggerEnd_;\n        this.dragListenerKeys_.push(\n          listen(document, EventType.MOUSEMOVE, drag, this),\n          listen(document, PointerEventType.POINTERMOVE, drag, this),\n          listen(document, EventType.MOUSEUP, end, this),\n          listen(document, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerDrag_ = function handleDraggerDrag_ (event) {\n    if (this.dragging_) {\n      var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      var deltaX = event.clientX - this.previousX_ + parseFloat(element.style.left);\n      var deltaY = event.clientY - this.previousY_ + parseFloat(element.style.top);\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  };\n\n  /**\n   * Handle dragger end events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerEnd_ = function handleDraggerEnd_ (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  };\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  ZoomSlider.prototype.setThumbPosition_ = function setThumbPosition_ (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  ZoomSlider.prototype.getRelativePosition_ = function getRelativePosition_ (x, y) {\n    var amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  };\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  ZoomSlider.prototype.getResolutionForPosition_ = function getResolutionForPosition_ (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  ZoomSlider.prototype.getPositionForResolution_ = function getPositionForResolution_ (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  };\n\n  return ZoomSlider;\n}(Control));\n\n\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  var res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n\n//# sourceMappingURL=ZoomSlider.js.map","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = (function (Control) {\n  function ZoomToExtent(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  if ( Control ) ZoomToExtent.__proto__ = Control;\n  ZoomToExtent.prototype = Object.create( Control && Control.prototype );\n  ZoomToExtent.prototype.constructor = ZoomToExtent;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function handleZoomToExtent () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  };\n\n  return ZoomToExtent;\n}(Control));\n\nexport default ZoomToExtent;\n\n//# sourceMappingURL=ZoomToExtent.js.map","import $ol$Collection from './ol/Collection';\nimport $ol$Feature from './ol/Feature';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$Graticule from './ol/Graticule';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$Map from './ol/Map';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport $ol$View from './ol/View';\nimport $ol$WebGLMap from './ol/WebGLMap';\nimport {stableSort as _ol_array$stableSort} from './ol/array';\nimport {asString as _ol_color$asString} from './ol/color';\nimport {asArray as _ol_color$asArray} from './ol/color';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike';\nimport {add as _ol_coordinate$add} from './ol/coordinate';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate';\nimport {format as _ol_coordinate$format} from './ol/coordinate';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing';\nimport {linear as _ol_easing$linear} from './ol/easing';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent';\nimport {buffer as _ol_extent$buffer} from './ol/extent';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent';\nimport {equals as _ol_extent$equals} from './ol/extent';\nimport {extend as _ol_extent$extend} from './ol/extent';\nimport {getArea as _ol_extent$getArea} from './ol/extent';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent';\nimport {getSize as _ol_extent$getSize} from './ol/extent';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent';\nimport {intersects as _ol_extent$intersects} from './ol/extent';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has';\nimport {GEOLOCATION as _ol_has$GEOLOCATION} from './ol/has';\nimport {TOUCH as _ol_has$TOUCH} from './ol/has';\nimport {defaults as _ol_interaction$defaults} from './ol/interaction';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj';\nimport {get as _ol_proj$get} from './ol/proj';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj';\nimport {transform as _ol_proj$transform} from './ol/proj';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj';\nimport {toContext as _ol_render$toContext} from './ol/render';\nimport {toSize as _ol_size$toSize} from './ol/size';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid';\nimport {inherits as _ol$inherits} from './ol';\nimport {getUid as _ol$getUid} from './ol';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml';\nimport {parse as _ol_xml$parse} from './ol/xml';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS';\nimport $ol$style$AtlasManager from './ol/style/AtlasManager';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport $ol$renderer$webgl$ImageLayer from './ol/renderer/webgl/ImageLayer';\nimport $ol$renderer$webgl$Map from './ol/renderer/webgl/Map';\nimport $ol$renderer$webgl$TileLayer from './ol/renderer/webgl/TileLayer';\nimport $ol$renderer$webgl$VectorLayer from './ol/renderer/webgl/VectorLayer';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$Map from './ol/renderer/canvas/Map';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport {labelCache as _ol_render_canvas$labelCache} from './ol/render/canvas';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GML32 from './ol/format/GML32';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport {and as _ol_format_filter$and} from './ol/format/filter';\nimport {or as _ol_format_filter$or} from './ol/format/filter';\nimport {not as _ol_format_filter$not} from './ol/format/filter';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter';\nimport {within as _ol_format_filter$within} from './ol/format/filter';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter';\nimport {between as _ol_format_filter$between} from './ol/format/filter';\nimport {like as _ol_format_filter$like} from './ol/format/filter';\nimport {during as _ol_format_filter$during} from './ol/format/filter';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition';\nimport {always as _ol_events_condition$always} from './ol/events/condition';\nimport {click as _ol_events_condition$click} from './ol/events/condition';\nimport {never as _ol_events_condition$never} from './ol/events/condition';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport {render as _ol_control_Attribution$render} from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport {render as _ol_control_MousePosition$render} from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport {render as _ol_control_OverviewMap$render} from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport {render as _ol_control_Rotate$render} from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport {render as _ol_control_ScaleLine$render} from './ol/control/ScaleLine';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport {render as _ol_control_ZoomSlider$render} from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\nimport {defaults as _ol_control$defaults} from './ol/control';\n\nvar ol = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Graticule = $ol$Graticule;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.WebGLMap = $ol$WebGLMap;\nol.array.stableSort = _ol_array$stableSort;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution$render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition$render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap$render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate$render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine$render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider$render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control$defaults;\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.within = _ol_format_filter$within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.getUid = _ol$getUid;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.GEOLOCATION = _ol_has$GEOLOCATION;\nol.has.TOUCH = _ol_has$TOUCH;\nol.inherits = _ol$inherits;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction$defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas$labelCache;\nol.render.toContext = _ol_render$toContext;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Map = $ol$renderer$canvas$Map;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.ImageLayer = $ol$renderer$webgl$ImageLayer;\nol.renderer.webgl.Map = $ol$renderer$webgl$Map;\nol.renderer.webgl.TileLayer = $ol$renderer$webgl$TileLayer;\nol.renderer.webgl.VectorLayer = $ol$renderer$webgl$VectorLayer;\nol.size.toSize = _ol_size$toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.style.AtlasManager = $ol$style$AtlasManager;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.parse = _ol_xml$parse;\n\nexport default ol;","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  var projCodes = Object.keys(proj4.defs);\n  var len = projCodes.length;\n  var i, j;\n  for (i = 0; i < len; ++i) {\n    var code = projCodes[i];\n    if (!get(code)) {\n      var def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    var code1 = projCodes[i];\n    var proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      var code2 = projCodes[j];\n      var proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          var transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n//# sourceMappingURL=proj4.js.map","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {create as createTransform, scale as scaleTransform} from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  var canvas = context.canvas;\n  var options = opt_options ? opt_options : {};\n  var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  var size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  var extent = [0, 0, canvas.width, canvas.height];\n  var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n//# sourceMappingURL=render.js.map","export class EventEmitter {\r\n    constructor() {\r\n        this.emitEvents = {};\r\n    }\r\n\r\n    subscribe( eventName, fn, context = null) {\r\n        if( !this.emitEvents[eventName] ) {\r\n            this.emitEvents[eventName] = {};\r\n            this.emitEvents[eventName].functions = [];\r\n            this.emitEvents[eventName].contexts = [];\r\n        }\r\n\r\n        this.emitEvents[eventName].functions.push(fn);\r\n        this.emitEvents[eventName].contexts.push(context);\r\n\r\n        return () => {\r\n            this.emitEvents[eventName] = this.emitEvents[eventName].filter(event => fn !== event.functions);\r\n        }\r\n    }\r\n\r\n    emit(eventName, data) {\r\n        const event = this.emitEvents[eventName];\r\n        if (event) {\r\n            for(let i = 0; i < event.functions.length; i++) {\r\n                let fn = event.functions[i];\r\n                let ctx = event.contexts[i] ? event.contexts[i] : null;\r\n                fn.call(ctx, data);\r\n            };\r\n        }\r\n    }\r\n}","import ol from './libs/ol'\r\nimport {EventEmitter} from './eventEmitter'\r\n\r\nconst kremlinLocation = new ol.proj.fromLonLat([37.617499, 55.752023]); //moscow kremlin\r\n\r\nexport class MapControl extends EventEmitter {\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        let rasterLayer = new ol.layer.Tile({\r\n            opacity: 1,\r\n            zIndex: 0,\r\n            source: new ol.source.OSM()\r\n        });\r\n\r\n        let view = new ol.View({\r\n            center: new ol.proj.fromLonLat([56.004 , 54.6950]), //ufa place\r\n            //center: kremlinLocation,\r\n            zoom: 3,\r\n            //projection: 'EPSG:4326'\r\n        });\r\n\r\n        const map = new ol.Map({\r\n            controls: ol.control.defaults({ attribution: false, zoom: false }).extend([\r\n                //new ol.control.FullScreen()\r\n            ]),\r\n            layers: [rasterLayer],\r\n            target: 'map',\r\n            view: view\r\n        });\r\n\r\n        map.on('click', function(evt) {\r\n            let coordinates = evt.coordinate;\r\n            let lonLatCoords = new ol.proj.toLonLat(coordinates);\r\n            console.log('clicked on map with coordinates: ' + coordinates + '; WGS: ' + lonLatCoords);\r\n        });\r\n\r\n        this.map = map;\r\n\r\n        this.view = view;\r\n        this.draw = undefined;\r\n        this.snap = undefined;\r\n        this.dragBox = {};\r\n        this.addFeatureEnabled = true;\r\n\r\n        this.activeButton = undefined;\r\n\r\n        this.maxExtent = {left: -20037508.3, top: -20037508.3, right: 20037508.3, bottom: 20037508.3};\r\n        this.maxResolution = 156543.0339;\r\n        this.tileSize = {w: 256, h: 256};\r\n\r\n        setTimeout(() => {\r\n            //this._addSelectInteraction();\r\n            this._addYearLayer();\r\n            this._addHistoryEventsLayer();\r\n            this._changeYear(1939);\r\n            this._addYearControl();\r\n            // this._addButtons();\r\n        }, 10);\r\n    }\r\n\r\n    static create() {\r\n        return new MapControl();\r\n    }\r\n\r\n    _addYearLayer() {\r\n        var yearLayer = new ol.layer.Tile({\r\n            preload: 5,\r\n            opacity: 0.2,\r\n            zIndex: 2,\r\n            source:  new ol.source.XYZ({\r\n                tileUrlFunction: (tileCoord, pixelRatio, projection) => { return this._getYearLayerUrl.call(this, tileCoord, pixelRatio, projection) }\r\n            })\r\n        });\r\n\r\n        this.yearLayer = yearLayer;\r\n        this.map.addLayer(yearLayer);\r\n    }\r\n\r\n    _addHistoryEventsLayer() {\r\n        let historyEventsSource = new ol.source.Vector();\r\n        let historyEventsLayer = new ol.layer.Vector({\r\n            source: historyEventsSource,\r\n            zIndex: 5,\r\n            updateWhileAnimating: true,\r\n            updateWhileInteracting: true,\r\n        });\r\n        this.historyEventsSource = historyEventsSource;\r\n        this.map.addLayer(historyEventsLayer);\r\n    }\r\n\r\n    fixMapHeight() {\r\n        this.map.updateSize();\r\n    }\r\n\r\n    _getCenterCoord(ft) {\r\n        let geom = ft.getGeometry();\r\n        switch(geom.getType()) {\r\n            case 'Point':\r\n                return geom.getCoordinates();\r\n                break;\r\n            case 'LineString':\r\n                return this._getMedianXY(geom.getCoordinates());\r\n                break;\r\n            case 'Polygon':\r\n                return this._getMedianXY(geom.getCoordinates()[0]);\r\n                break;\r\n        }\r\n        return kremlinLocation;\r\n    }\r\n\r\n    _getMedianXY(coords) {\r\n        var valuesX = [];\r\n        var valuesY = [];\r\n        coords.forEach( (coord) => {\r\n            valuesX.push(coord[0]);\r\n            valuesY.push(coord[1]);\r\n        });\r\n        return [this._getMedian(valuesX), this._getMedian(valuesY)];\r\n    }\r\n\r\n    _getMedian(values) {\r\n        values.sort( function(a,b) {return a - b;} );\r\n\r\n        var half = Math.floor(values.length/2);\r\n\r\n        if(values.length % 2)\r\n            return values[half];\r\n        else\r\n            return (values[half-1] + values[half]) / 2.0;\r\n    }\r\n\r\n    _getYearLayerUrl (tileCoord, pixelRatio, projection) {\r\n\r\n        if (!this.currentYearForMap)\r\n            return;\r\n\r\n        let ano = this.currentYearForMap;\r\n        var anow = \"\" + ano;\r\n        anow = anow.replace(\"-\", \"B\");\r\n\r\n        let z = tileCoord[0];\r\n        let x = tileCoord[1];\r\n        let y = -tileCoord[2] - 1;\r\n\r\n        if (0 == z || z > 6)\r\n            return;\r\n\r\n        let url = \"http://cdn.geacron.com\" + \"/tiles/area/\" + anow + \"/Z\" + z + \"/\" + y + \"/\" + x + \".png\";\r\n        return url;\r\n    }\r\n\r\n    _addYearControl() {\r\n        this.map.addControl(new YearControl({\r\n            caption: \"Выбрать год событий\",\r\n            year: this.currentYear,\r\n            handler: (year) => {\r\n                this._changeYear(year);\r\n            },\r\n        }));\r\n    }\r\n\r\n    _changeYear(year) {\r\n        this.historyEventsSource.clear();\r\n        this.currentYear = year;\r\n        this.currentYearForMap = (this.currentYear == 1951) ? 1950 : this.currentYear;\r\n        this.yearLayer.getSource().refresh();\r\n        this.emit('changeYear', year);\r\n    }\r\n\r\n    _hexToRgbA(hex, opacity){\r\n        var c;\r\n        if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\r\n            c= hex.substring(1).split('');\r\n            if(c.length== 3){\r\n                c= [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n            }\r\n            c= '0x'+c.join('');\r\n            return [(c>>16)&255, (c>>8)&255, c&255, opacity ? opacity : 0];\r\n        }\r\n        throw new Error(`Bad Hex ${hex}`);\r\n    }\r\n\r\n    _createGeom(mo) {\r\n        let geom;\r\n        switch(mo.kind) {\r\n            case 'Point':\r\n                geom = new ol.geom.Point(mo.coords);\r\n                break;\r\n            case 'LineString':\r\n                geom = new ol.geom.LineString(mo.coords);\r\n                break;\r\n            case 'Polygon':\r\n                geom = new ol.geom.Polygon(mo.coords);\r\n                break;\r\n        }\r\n        return geom;\r\n    }\r\n\r\n    showEventOnMap(map) {\r\n        this.historyEventsSource.clear();\r\n\r\n        let features = map.features;\r\n        for (let i = 0; i < features.length; i++) {\r\n            let geom = features[i].geometry;\r\n            let style_prop = features[i].properties;\r\n            let style = {};\r\n            if (style_prop.fill) {\r\n                style.fill = new ol.style.Fill({\r\n                    color: this._hexToRgbA(style_prop.fill, style_prop['fill-opacity'])\r\n                });\r\n            }\r\n            if (style_prop.stroke) {\r\n                style.stroke = new ol.style.Stroke({\r\n                    color: this._hexToRgbA(style_prop.stroke, style_prop['stroke-opacity']),\r\n                    width: style_prop['stroke-width']\r\n                });\r\n            };\r\n            var coords = [];\r\n            if ('Point' === geom.type) {\r\n                coords = new ol.proj.fromLonLat(geom.coordinates);\r\n            } else {\r\n                let srcCoords = ('Polygon' === geom.type) ? geom.coordinates[0] : geom.coordinates;\r\n                for (let j = 0; j < srcCoords.length; j++) {\r\n                    let point = new ol.proj.fromLonLat(srcCoords[j]);\r\n                    coords.push(point);\r\n                }\r\n                if ('Polygon' === geom.type) {\r\n                    coords = [coords];\r\n                }\r\n            }\r\n            let ft = new ol.Feature({\r\n                uid: 100,\r\n                name: 'test',\r\n                geometry: this._createGeom({kind: geom.type, coords: coords}\r\n            )});\r\n            ft.setStyle(new ol.style.Style(style));\r\n            this.historyEventsSource.addFeature(ft);\r\n        };\r\n    }\r\n\r\n    _addButtons() {\r\n        this.map.addControl(new CustomControl({\r\n            caption: \"Выбрать объект\",\r\n            class: \"pointer-control\",\r\n            icon: \"mdi mdi-cursor-default-outline\",\r\n            default: true,\r\n            handler: (btn) => {\r\n                this._setActiveButton(btn);\r\n                this.map.removeInteraction(this.draw);\r\n                this.map.removeInteraction(this.snap);\r\n            }\r\n        }));\r\n\r\n        this.map.addControl(new CustomControl({\r\n            caption: \"Импортировать объекты из geojson-файла\",\r\n            class: \"box-control\",\r\n            icon: \"mdi mdi-import\",\r\n            handler: (btn) => {\r\n                console.log('click to import...');\r\n                this._setActiveButton(btn);\r\n                document.getElementById('fileImport').click();\r\n            }\r\n        }));\r\n    }\r\n\r\n    _setActiveButton(btn) {\r\n        if (this.activeButton) {\r\n            $(this.activeButton).removeClass('glow-button');\r\n        }\r\n\r\n        this.activeButton = btn;\r\n        $(btn).addClass('glow-button');\r\n    }\r\n\r\n    _getStyleFunction(feature, resolution) {\r\n\r\n        var stroke = new ol.style.Stroke({\r\n            color: '#ff0000',\r\n            width: 2\r\n        });\r\n\r\n        var fill = new ol.style.Fill({\r\n            color: 'rgba(255, 255, 0, 0.2)'\r\n        });\r\n\r\n        var imageStyle = new ol.style.Circle({\r\n            radius: 5,\r\n            fill: new ol.style.Fill({\r\n                color: 'red'\r\n            }),\r\n            stroke: new ol.style.Stroke({\r\n                color: 'black',\r\n                width: 1\r\n            })\r\n       });\r\n\r\n       var textColor = 'red';\r\n\r\n        switch (feature.get('country')) {\r\n            case(\"germany\"):\r\n                stroke = new ol.style.Stroke({\r\n                    color: '#000000',\r\n                    width: 2\r\n                });\r\n\r\n                imageStyle = new ol.style.Circle({\r\n                    radius: 5,\r\n                    fill: new ol.style.Fill({\r\n                        color: 'black'\r\n                    }),\r\n                    stroke: new ol.style.Stroke({\r\n                        color: 'black',\r\n                        width: 1\r\n                    })\r\n               });\r\n\r\n               textColor = 'black';\r\n\r\n        }\r\n\r\n        return new ol.style.Style({\r\n            fill: fill,\r\n            stroke: stroke,\r\n            image: imageStyle,\r\n            text: this._createTextStyle.call(this, feature, resolution, {\r\n                align: 'center',\r\n                baseline: 'middle',\r\n                size: '14px',\r\n                offsetX: 0,\r\n                offsetY: 15,\r\n                weight: 'bold',\r\n                overflow: 'true',\r\n                rotation: 0,\r\n                font: 'Arial',\r\n                color: textColor,\r\n                outline: 'black',\r\n                outlineWidth: 0,\r\n                maxreso: 20000,\r\n            })\r\n        });\r\n    }\r\n\r\n    _createTextStyle(feature, resolution, dom) {\r\n        let align = dom.align;\r\n        let baseline = dom.baseline;\r\n        let size = dom.size;\r\n        let offsetX = parseInt(dom.offsetX, 10);\r\n        let offsetY = parseInt(dom.offsetY, 10);\r\n        let weight = dom.weight;\r\n        let placement = dom.placement ? dom.placement : undefined;\r\n        let maxAngle = dom.maxangle ? parseFloat(dom.maxangle) : undefined;\r\n        let overflow = dom.overflow ? (dom.overflow == 'true') : undefined;\r\n        let rotation = parseFloat(dom.rotation);\r\n\r\n        let font = weight + ' ' + size + ' ' + dom.font;\r\n        let fillColor = dom.color;\r\n        let outlineColor = dom.outline;\r\n        let outlineWidth = parseInt(dom.outlineWidth, 10);\r\n\r\n        return new ol.style.Text({\r\n            textAlign: align == '' ? undefined : align,\r\n            textBaseline: baseline,\r\n            font: font,\r\n            text: this._getText(feature, resolution, dom),\r\n            fill: new ol.style.Fill({color: fillColor}),\r\n            stroke: outlineWidth == 0 ? undefined : new ol.style.Stroke({color: outlineColor, width: outlineWidth}),\r\n            offsetX: offsetX,\r\n            offsetY: offsetY,\r\n            placement: placement,\r\n            maxAngle: maxAngle,\r\n            overflow: overflow,\r\n            rotation: rotation\r\n        });\r\n    }\r\n\r\n    _getText(feature, resolution, dom) {\r\n        let type = dom.text;\r\n        let maxResolution = dom.maxreso;\r\n\r\n        var text = feature.get('name');\r\n        text = text ? text : \"\";\r\n\r\n        if (resolution > maxResolution) {\r\n            text = '';\r\n        } else if (type == 'hide') {\r\n            text = '';\r\n        } else if (type == 'shorten') {\r\n            text = text.trunc(12);\r\n        } else if (type == 'wrap' && dom.placement != 'line') {\r\n            text = stringDivider(text, 16, '\\n');\r\n        }\r\n\r\n        return text;\r\n    }\r\n}\r\n\r\nclass SuperCustomControl extends ol.control.Control {\r\n    constructor(inputParams) {\r\n        super(inputParams);\r\n    }\r\n\r\n    getBSIconHTML(name) {\r\n        return '<span class=\"' + name + '\"></span>';\r\n    }\r\n}\r\n\r\nclass CustomControl extends SuperCustomControl {\r\n\r\n    constructor(inputParams) {\r\n\r\n        super(inputParams);\r\n\r\n        const caption = get(inputParams, 'caption');\r\n        const hint = get(inputParams, 'hint') || caption;\r\n        let button = document.createElement('button');\r\n        button.innerHTML = this.getBSIconHTML(get(inputParams, 'icon'));\r\n        button.className = get(inputParams, 'class');\r\n        button.title = hint;\r\n\r\n        let parentDiv = $('#custom-control')[0];\r\n        if (!parentDiv) {\r\n            parentDiv = document.createElement('div');\r\n            parentDiv.className = 'ol-control';\r\n            parentDiv.setAttribute(\"id\", 'custom-control');\r\n        }\r\n\r\n        parentDiv.appendChild(button);\r\n        this.element = parentDiv;\r\n\r\n        ol.control.Control.call(this, {\r\n            label: caption,\r\n            hint: hint,\r\n            tipLabel: caption,\r\n            element: parentDiv,\r\n            //target: get(inputParams, \"target\")\r\n        });\r\n\r\n        const handler = get(inputParams, 'handler');\r\n        if (handler) {\r\n            button.addEventListener('click', () => { handler(button); }, false);\r\n            button.addEventListener('touchstart', () => { handler(button) }, false);\r\n        }\r\n\r\n        const isDefault = get(inputParams, 'default');\r\n        if (isDefault) {\r\n            handler(button);\r\n        }\r\n    }\r\n}\r\n\r\nclass YearControl extends SuperCustomControl {\r\n    constructor(inputParams) {\r\n\r\n        super(inputParams);\r\n\r\n        const caption = inputParams.caption;\r\n        const hint =  inputParams.hint || caption\r\n        this.year =  inputParams.year\r\n        this.handler =  inputParams.handler\r\n\r\n        let yearInput = document.createElement('input');\r\n        yearInput.className = 'input-without-focus';\r\n        yearInput.title = hint;\r\n        yearInput.setAttribute('id', 'year-input');\r\n        yearInput.value = this.year;\r\n        yearInput.addEventListener('keyup', (event) => { if (event.keyCode == 13) { this._inputKeyUp(); event.preventDefault(); } });\r\n\r\n        this.yearInput = yearInput;\r\n\r\n        let yearLeftButton = document.createElement('button');\r\n        yearLeftButton.innerHTML = this.getBSIconHTML('mdi mdi-step-backward-2');\r\n        yearLeftButton.title = 'Предыдущий год';\r\n        yearLeftButton.setAttribute('id', 'year-left-button');\r\n        yearLeftButton.addEventListener('click', () => { this._leftButtonClick(); }, false);\r\n        //yearLeftButton.addEventListener('touchstart', () => { this._leftButtonClick(); }, false);\r\n\r\n        let yearRightButton = document.createElement('button');\r\n        yearRightButton.innerHTML = this.getBSIconHTML('mdi mdi-step-forward-2');\r\n        yearRightButton.title = 'Следующий год';\r\n        yearRightButton.setAttribute('id', 'year-right-button');\r\n        yearRightButton.addEventListener('click', () => { this._rightButtonClick(); }, false);\r\n        //yearRightButton.addEventListener('touchstart', () => { this._rightButtonClick(); }, false);\r\n\r\n        let parentDiv = document.createElement('div');\r\n        parentDiv.className = 'ol-control';\r\n        parentDiv.setAttribute('id', 'year-control');\r\n\r\n        parentDiv.appendChild(yearLeftButton);\r\n        parentDiv.appendChild(yearInput);\r\n        parentDiv.appendChild(yearRightButton);\r\n\r\n        this.element = parentDiv;\r\n\r\n        ol.control.Control.call(this, {\r\n            label: \"test\",\r\n            hint: \"test\",\r\n            tipLabel: caption,\r\n            element: parentDiv,\r\n            //target: get(inputParams, \"target\")\r\n        });\r\n    }\r\n\r\n    _leftButtonClick() {\r\n        if (!this._checkYear(this.year, -1))\r\n            return;\r\n\r\n        this.year = parseInt(this.year) - 1;\r\n        this._setNewYear(this.year);\r\n    }\r\n\r\n    _rightButtonClick() {\r\n        if (!this._checkYear(this.year, +1))\r\n            return;\r\n\r\n        this.year = parseInt(this.year) + 1;\r\n        this._setNewYear(this.year);\r\n    }\r\n\r\n    _inputKeyUp() {\r\n\r\n        let year = this.yearInput.value;\r\n\r\n        if (!this._checkYear(year, 0, this.year)) {\r\n            this.yearInput.value = this.year;\r\n            return;\r\n        }\r\n\r\n        this.year = parseInt(year);\r\n        this._setNewYear(this.year);\r\n    }\r\n\r\n    _checkYear(year, incr, oldValue = undefined) {\r\n\r\n        var reg = /^[1][9]\\d{2}$/;\r\n        if (!reg.test(year))\r\n            return false;\r\n\r\n        let intYear = parseInt(year) + incr;\r\n        if (intYear < 1933)\r\n            return false;\r\n        if (intYear > 1955)\r\n            return false;\r\n\r\n        if (oldValue == intYear)\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    _setNewYear(year) {\r\n        this.yearInput.value = this.year;\r\n        this.handler(this.year);\r\n    }\r\n}"]}