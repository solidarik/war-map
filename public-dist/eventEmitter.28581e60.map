{"version":3,"sources":["eventEmitter.js"],"names":["EventEmitter","emitEvents","eventName","fn","context","functions","contexts","push","filter","event","data","i","length","ctx","call"],"mappings":";AA6BK,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EA7BQA,IAAAA,EA6BR,WA5Ba,SAAA,IAAA,EAAA,KAAA,GACLC,KAAAA,WAAa,GA2BrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,YAxBUC,MAAAA,SAAAA,EAAWC,GAAoB,IAAA,EAAA,KAAhBC,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KAUzB,OATF,KAAKH,WAAWC,KACZD,KAAAA,WAAWC,GAAa,GACxBD,KAAAA,WAAWC,GAAWG,UAAY,GAClCJ,KAAAA,WAAWC,GAAWI,SAAW,IAGrCL,KAAAA,WAAWC,GAAWG,UAAUE,KAAKJ,GACrCF,KAAAA,WAAWC,GAAWI,SAASC,KAAKH,GAElC,WACH,EAAKH,WAAWC,GAAa,EAAKD,WAAWC,GAAWM,OAAO,SAAAC,GAASN,OAAAA,IAAOM,EAAMJ,eAa5F,CAAA,IAAA,OATIH,MAAAA,SAAAA,EAAWQ,GACND,IAAAA,EAAQ,KAAKR,WAAWC,GAC1BO,GAAAA,EACI,IAAA,IAAIE,EAAI,EAAGA,EAAIF,EAAMJ,UAAUO,OAAQD,IAAK,CACxCR,IAAAA,EAAKM,EAAMJ,UAAUM,GACrBE,EAAMJ,EAAMH,SAASK,GAAKF,EAAMH,SAASK,GAAK,KAClDR,EAAGW,KAAKD,EAAKH,QAGxB,EAAA,GAAA,QAAA,aAAA","file":"eventEmitter.28581e60.map","sourceRoot":"..\\public-src","sourcesContent":["export class EventEmitter {\r\n    constructor() {\r\n        this.emitEvents = {};\r\n    }\r\n\r\n    subscribe( eventName, fn, context = null) {\r\n        if( !this.emitEvents[eventName] ) {\r\n            this.emitEvents[eventName] = {};\r\n            this.emitEvents[eventName].functions = [];\r\n            this.emitEvents[eventName].contexts = [];\r\n        }\r\n\r\n        this.emitEvents[eventName].functions.push(fn);\r\n        this.emitEvents[eventName].contexts.push(context);\r\n\r\n        return () => {\r\n            this.emitEvents[eventName] = this.emitEvents[eventName].filter(event => fn !== event.functions);\r\n        }\r\n    }\r\n\r\n    emit(eventName, data) {\r\n        const event = this.emitEvents[eventName];\r\n        if (event) {\r\n            for(let i = 0; i < event.functions.length; i++) {\r\n                let fn = event.functions[i];\r\n                let ctx = event.contexts[i] ? event.contexts[i] : null;\r\n                fn.call(ctx, data);\r\n            };\r\n        }\r\n    }\r\n}"]}